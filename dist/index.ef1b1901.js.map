{"mappings":"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;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,C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I,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAA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GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,E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C;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QACV,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;QACZ,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YACV,GAAG,CAAC,MAAM,EAAE,CAAC;SACd;QACD,OAAO,GAAG,CAAC;KACZ,AAAC;IAEF,gBAAgB;IAChB,IAAI,CAAC,IAAI,CAAC,IAAI,EACZ,WAAW,GAAG,UAAU,CAAC;IAG3B,SAAS,QAAQ,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;QACjC,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5C,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC;QAEtC,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAI,OAAO,GAAG,CAAC,AAAC;QAChB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YACvC,mEAAmE;YACnE,yCAAyC;YACzC,IAAI,MAAM,GAAG,OAAO,AAAC;YACrB,OAAO,GAAG,CAAC,CAAC;YACZ,IAAI,KAAK,GAAG,KAAK,GAAG,SAAS,AAAC;YAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,AAAC;YACvC,IAAK,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,EAAE,CAAE;gBAC7D,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;gBACd,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;gBAC1B,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;gBACzB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC;gBAEd,IAAI,EAAE,GAAG,CAAC,GAAG,SAAS,AAAC;gBACvB,MAAM,GAAG,AAAC,MAAM,GAAI,CAAA,AAAC,CAAC,GAAG,SAAS,GAAI,CAAC,CAAA,GAAK,CAAC,CAAC;gBAC9C,EAAE,GAAG,AAAC,EAAE,GAAG,KAAK,GAAI,CAAC,CAAC;gBACtB,KAAK,GAAG,EAAE,GAAG,SAAS,CAAC;gBACvB,MAAM,GAAG,AAAC,MAAM,GAAI,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;gBAEpC,OAAO,IAAI,MAAM,KAAK,EAAE,CAAC;gBACzB,MAAM,IAAI,SAAS,CAAC;aACrB;YACD,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;YACrB,KAAK,GAAG,MAAM,CAAC;YACf,MAAM,GAAG,OAAO,CAAC;SAClB;QACD,IAAI,KAAK,KAAK,CAAC,EACb,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;aAErB,GAAG,CAAC,MAAM,EAAE,CAAC;QAGf,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC;KACrB;IAED,SAAS,UAAU,CAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;QACnC,qEAAqE;QACrE,yBAAyB;QACzB,oCAAoC;QACpC,OAAO,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KACjC;IAED,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE,GAAG,EAAE;QAC7C,IAAI,GAAG,AAAC;QACR,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,AAAC;QACnC,IAAI,IAAI,CAAC,MAAM,KAAK,EAAE,IAAI,GAAG,CAAC,MAAM,KAAK,EAAE,EACzC,GAAG,GAAG,WAAW,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;aAC7B,IAAI,GAAG,GAAG,EAAE,EACjB,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;aAC5B,IAAI,GAAG,GAAG,IAAI,EACnB,GAAG,GAAG,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;aAE/B,GAAG,GAAG,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;QAGnC,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,iCAAiC;IACjC,6DAA6D;IAE7D,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE;QACnB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;KACZ;IAED,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,CAAC,EAAE;QAC5C,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;QACrB,IAAI,CAAC,GAAG,EAAE,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;QACvC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACxB,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAG9B,OAAO,CAAC,CAAC;KACV,CAAC;IAEF,gDAAgD;IAChD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QAChD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,OAAO,CAAC,CAAC;QAErC,IAAI,EAAE,GAAG,CAAC,AAAC;QACX,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YAC1B,EAAE,IAAI,AAAC,CAAA,CAAC,GAAG,CAAC,CAAA,IAAM,CAAC,GAAG,CAAC,GAAG,CAAC,AAAC,CAAC;YAC7B,CAAC,KAAK,CAAC,CAAC;SACT;QAED,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,oDAAoD;IACpD,uCAAuC;IACvC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE;QACvE,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YAC1B,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SACvB;KACF,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE;QAC3E,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAE3C,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,CAAE;YAC9B,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,AAAC;YAEf,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,AAAC;YACtC,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,AAAC;YAEtC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,CAAE;gBAC7B,IAAI,MAAM,GAAG,KAAK,AAAC;gBACnB,IAAI,MAAM,GAAG,KAAK,AAAC;gBAEnB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;oBAC1B,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,AAAC;oBACrB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,AAAC;oBAErB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,AAAC;oBACzB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,AAAC;oBAEzB,IAAI,EAAE,GAAG,MAAM,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,AAAC;oBAEnC,EAAE,GAAG,MAAM,GAAG,EAAE,GAAG,MAAM,GAAG,EAAE,CAAC;oBAC/B,EAAE,GAAG,EAAE,CAAC;oBAER,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;oBACtB,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;oBAEtB,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;oBAC1B,IAAI,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;oBAE1B,6BAA6B,CAC7B,IAAI,CAAC,KAAK,CAAC,EAAE;wBACX,EAAE,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC;wBAErC,MAAM,GAAG,KAAK,GAAG,MAAM,GAAG,KAAK,GAAG,MAAM,CAAC;wBACzC,MAAM,GAAG,EAAE,CAAC;qBACb;iBACF;aACF;SACF;KACF,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,CAAC,EAAE,CAAC,EAAE;QACvD,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,AAAC;QAC3B,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,AAAC;QAChB,IAAI,CAAC,GAAG,CAAC,AAAC;QACV,IAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAChC,CAAC,EAAE,CAAC;QAGN,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KACzB,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE;QAC1D,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO;QAEnB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YAC9B,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,AAAC;YAEf,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACxB,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;YAEnB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAEX,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SACrB;KACF,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,EAAE,EAAE,CAAC,EAAE;QAC1D,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YAC9B,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,GAC5C,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GACzB,KAAK,AAAC;YAER,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;YAEtB,IAAI,CAAC,GAAG,SAAS,EACf,KAAK,GAAG,CAAC,CAAC;iBAEV,KAAK,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC;SAE7B;QAED,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,SAAS,UAAU,CAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,EAAE;QAChE,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,CAAE;YAC5B,KAAK,GAAG,KAAK,GAAI,CAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;YAE5B,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;YAAC,KAAK,GAAG,KAAK,KAAK,EAAE,CAAC;YAClD,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,MAAM,CAAC;YAAC,KAAK,GAAG,KAAK,KAAK,EAAE,CAAC;SACvD;QAED,kBAAkB;QAClB,IAAK,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAC1B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAGb,MAAM,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;QACpB,MAAM,CAAC,AAAC,CAAA,KAAK,GAAG,KAAO,CAAA,KAAM,CAAC,CAAC,CAAC;KACjC,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE;QACtC,IAAI,EAAE,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;QACtB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACxB,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAGZ,OAAO,EAAE,CAAC;KACX,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE;QAC9C,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,AAAC;QAEjD,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,AAAC;QAE1B,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QAErB,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;QACvB,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;QACxB,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;QAExB,IAAI,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;QACxB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;QACzB,IAAI,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,AAAC;QAEzB,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,AAAC;QACrB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;QAEhB,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAE5C,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QAE9C,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YAC1B,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,AAAC;YACjD,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SACd;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3B,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAE3B,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;QACvC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QACjC,OAAO,GAAG,CAAC,MAAM,EAAE,CAAC;KACrB,CAAC;IAEF,2BAA2B;IAC3B,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,AAAC;QACvB,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAChD,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC7B,CAAC;IAEF,yBAAyB;IACzB,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,AAAC;QACvB,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;QAChD,OAAO,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;KACnC,CAAC;IAEF,0BAA0B;IAC1B,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACtC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC,AAAC;QACvB,IAAI,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC;QAEzB,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC;QAChC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;QAExB,QAAQ;QACR,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACpC,IAAI,CAAC,GAAG,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,GAAG,AAAC;YAClC,IAAI,EAAE,GAAG,AAAC,CAAA,CAAC,GAAG,SAAS,CAAA,GAAK,CAAA,KAAK,GAAG,SAAS,CAAA,AAAC,AAAC;YAC/C,KAAK,KAAK,EAAE,CAAC;YACb,KAAK,IAAI,AAAC,CAAC,GAAG,SAAS,GAAI,CAAC,CAAC;YAC7B,4BAA4B;YAC5B,KAAK,IAAI,EAAE,KAAK,EAAE,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;SAChC;QAED,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;QAED,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;KACtC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,kBAAkB;IAClB,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,GAAI;QACjC,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KACvB,CAAC;IAEF,2BAA2B;IAC3B,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,GAAI;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;KAChC,CAAC;IAEF,0BAA0B;IAC1B,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,CAAC,AAAC;QACxB,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC;QAErC,sBAAsB;QACtB,IAAI,GAAG,GAAG,IAAI,AAAC;QACf,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,CAAC,GAAG,EAAE,CAAE;YAClD,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,MAAM;SACvB;QAED,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAChB,IAAK,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAE;YACtD,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,SAAS;YAEzB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAClB;QAGH,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,sBAAsB;IACtB,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,IAAI,EAAE;QAC3C,MAAM,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,AAAC;QAClB,IAAI,CAAC,GAAG,AAAC,CAAA,IAAI,GAAG,CAAC,CAAA,GAAI,EAAE,AAAC;QACxB,IAAI,SAAS,GAAG,AAAC,SAAS,KAAM,EAAE,GAAG,CAAC,IAAO,EAAE,GAAG,CAAC,AAAC,AAAC;QACrD,IAAI,CAAC,AAAC;QAEN,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,KAAK,GAAG,CAAC,AAAC;YAEd,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;gBAChC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,AAAC;gBACzC,IAAI,CAAC,GAAG,AAAE,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,QAAQ,IAAK,CAAC,AAAC;gBAC9C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;gBAC1B,KAAK,GAAG,QAAQ,KAAM,EAAE,GAAG,CAAC,AAAC,CAAC;aAC/B;YAED,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;SACF;QAED,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,IAAK,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CACnC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAGpC,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACpB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAGpB,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;SAClB;QAED,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;KACtB,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,IAAI,EAAE;QACzC,8BAA8B;QAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC1B,CAAC;IAEF,uBAAuB;IACvB,sDAAsD;IACtD,yEAAyE;IACzE,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC3D,MAAM,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,AAAC;QACN,IAAI,IAAI,EACN,CAAC,GAAG,AAAC,CAAA,IAAI,GAAI,IAAI,GAAG,EAAE,AAAC,CAAA,GAAI,EAAE,CAAC;aAE9B,CAAC,GAAG,CAAC,CAAC;QAGR,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,AAAC;QAClB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,AAAC,CAAA,IAAI,GAAG,CAAC,CAAA,GAAI,EAAE,EAAE,IAAI,CAAC,MAAM,CAAC,AAAC;QAC/C,IAAI,IAAI,GAAG,SAAS,GAAI,AAAC,SAAS,KAAK,CAAC,IAAK,CAAC,AAAC,AAAC;QAChD,IAAI,WAAW,GAAG,QAAQ,AAAC;QAE3B,CAAC,IAAI,CAAC,CAAC;QACP,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEnB,kCAAkC;QAClC,IAAI,WAAW,EAAE;YACf,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CACxB,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAEvC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;SACxB;QAED,IAAI,CAAC,KAAK,CAAC;aAEJ,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YAC1B,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;YACjB,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAC9B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAErC,MAAM;YACL,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACjB;QAED,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAK,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,IAAK,CAAA,KAAK,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,AAAC,EAAE,CAAC,EAAE,CAAE;YAChE,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;YAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,AAAC,KAAK,IAAK,EAAE,GAAG,CAAC,GAAM,IAAI,KAAK,CAAC,AAAC,CAAC;YACnD,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;SACrB;QAED,8BAA8B;QAC9B,IAAI,WAAW,IAAI,KAAK,KAAK,CAAC,EAC5B,WAAW,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC;QAGlD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;SACjB;QAED,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;KACtB,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE;QACzD,8BAA8B;QAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC;QAC5B,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;KAC1C,CAAC;IAEF,aAAa;IACb,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,IAAI,EAAE;QACvC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACjC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,IAAI,EAAE;QACzC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAClC,CAAC;IAEF,cAAc;IACd,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,IAAI,EAAE;QACvC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;KACjC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,IAAI,EAAE;QACzC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAClC,CAAC;IAEF,uBAAuB;IACvB,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;QAC5C,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,AAAC;QACjB,IAAI,CAAC,GAAG,AAAC,CAAA,GAAG,GAAG,CAAC,CAAA,GAAI,EAAE,AAAC;QACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,AAAC;QAEf,wDAAwD;QACxD,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE,OAAO,KAAK,CAAC;QAEnC,uBAAuB;QACvB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,AAAC;QAEtB,OAAO,CAAC,CAAE,CAAA,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;KAClB,CAAC;IAEF,+CAA+C;IAC/C,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,IAAI,EAAE;QAC3C,MAAM,CAAC,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;QAC9C,IAAI,CAAC,GAAG,IAAI,GAAG,EAAE,AAAC;QAClB,IAAI,CAAC,GAAG,AAAC,CAAA,IAAI,GAAG,CAAC,CAAA,GAAI,EAAE,AAAC;QAExB,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,yCAAyC,CAAC,CAAC;QAEvE,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAClB,OAAO,IAAI,CAAC;QAGd,IAAI,CAAC,KAAK,CAAC,EACT,CAAC,EAAE,CAAC;QAEN,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAEvC,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,IAAI,IAAI,GAAG,SAAS,GAAI,AAAC,SAAS,KAAK,CAAC,IAAK,CAAC,AAAC,AAAC;YAChD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC;SACrC;QAED,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;KACtB,CAAC;IAEF,oCAAoC;IACpC,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,IAAI,EAAE;QACzC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAClC,CAAC;IAEF,mCAAmC;IACnC,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC;QAChC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QAErC,uBAAuB;QACvB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;YACvB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,IAAK,GAAG,EAAE;gBACnD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,GAAI,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,CAAC;gBAC1C,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAClB,OAAO,IAAI,CAAC;aACb;YAED,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC;SACb;QAED,qBAAqB;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;KACzB,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,GAAG,EAAE;QAC1C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;QAErB,QAAQ;QACR,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS,EAAE,CAAC,EAAE,CAAE;YAClE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;YAC3B,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,EACvB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;iBAEtB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;SAEvB;QACD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;QAE3C,OAAO,IAAI,CAAC;KACb,CAAC;IAEF,0CAA0C;IAC1C,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC;QAChC,MAAM,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,CAAC,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC;QAErC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;YACvB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;YAClB,OAAO,IAAI,CAAC;SACb;QAED,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;QAErB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;YAC1C,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;SACnB,MACC,QAAQ;QACR,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE;YACzD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,SAAS,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;SACxB;QAGH,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;KACtB,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,GAAI;QACnC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,OAAO,IAAI,CAAC;KACb,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,GAAI;QACjC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;KAC5B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,YAAY,GAAG,SAAS,YAAY,CAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE;QAClE,IAAI,GAAG,GAAG,GAAG,CAAC,MAAM,GAAG,KAAK,AAAC;QAC7B,IAAI,CAAC,AAAC;QAEN,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAElB,IAAI,CAAC,AAAC;QACN,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YAC/B,CAAC,GAAG,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA,GAAI,KAAK,CAAC;YACxC,IAAI,KAAK,GAAG,AAAC,CAAA,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,GAAG,AAAC;YACrC,CAAC,IAAI,KAAK,GAAG,SAAS,CAAC;YACvB,KAAK,GAAG,AAAC,CAAA,CAAC,IAAI,EAAE,CAAA,GAAK,CAAA,AAAC,KAAK,GAAG,SAAS,GAAI,CAAC,CAAA,AAAC,CAAC;YAC9C,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;SACvC;QACD,MAAO,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,KAAK,EAAE,CAAC,EAAE,CAAE;YACnC,CAAC,GAAG,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,CAAA,GAAI,KAAK,CAAC;YACxC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;SACvC;QAED,IAAI,KAAK,KAAK,CAAC,EAAE,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;QAEtC,uBAAuB;QACvB,MAAM,CAAC,KAAK,KAAK,EAAE,CAAC,CAAC;QACrB,KAAK,GAAG,CAAC,CAAC;QACV,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YAChC,CAAC,GAAG,CAAE,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,GAAG,KAAK,CAAC;YACjC,KAAK,GAAG,CAAC,IAAI,EAAE,CAAC;YAChB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC;SAC/B;QACD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;QAElB,OAAO,IAAI,CAAC,MAAM,EAAE,CAAC;KACtB,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,GAAG,EAAE,IAAI,EAAE;QACpD,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,AAAC;QAErC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,AAAC;QACrB,IAAI,CAAC,GAAG,GAAG,AAAC;QAEZ,YAAY;QACZ,IAAI,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,AAAC;QACpC,IAAI,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,AAAC;QACnC,KAAK,GAAG,EAAE,GAAG,OAAO,CAAC;QACrB,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;YACnB,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YAChB,GAAG,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;SACjC;QAED,sBAAsB;QACtB,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,AAAC;QAC5B,IAAI,CAAC,AAAC;QAEN,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,CAAC,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC;YACjB,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,CAAC,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAC/B,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAElB;QAED,IAAI,IAAI,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,AAAC;QAC3C,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;YACvB,CAAC,GAAG,IAAI,CAAC;YACT,IAAI,CAAC,EACH,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAElB;QAED,IAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAE;YAC/B,IAAI,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,SAAS,GAC7C,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,AAAC;YAElC,0EAA0E;YAC1E,cAAc;YACd,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,AAAC,EAAE,GAAG,GAAG,GAAI,CAAC,EAAE,SAAS,CAAC,CAAC;YAEzC,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YACzB,MAAO,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAE;gBACvB,EAAE,EAAE,CAAC;gBACL,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;gBACf,CAAC,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;gBACxB,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,EACb,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC;aAEnB;YACD,IAAI,CAAC,EACH,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;SAEnB;QACD,IAAI,CAAC,EACH,CAAC,CAAC,MAAM,EAAE,CAAC;QAEb,CAAC,CAAC,MAAM,EAAE,CAAC;QAEX,cAAc;QACd,IAAI,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,CAAC,EAC/B,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAGlB,OAAO;YACL,GAAG,EAAE,CAAC,IAAI,IAAI;YACd,GAAG,EAAE,CAAC;SACP,CAAC;KACH,CAAC;IAEF,2DAA2D;IAC3D,sDAAsD;IACtD,+BAA+B;IAC/B,2DAA2D;IAC3D,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,EAAE;QAC1D,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC;QAEtB,IAAI,IAAI,CAAC,MAAM,EAAE,EACf,OAAO;YACL,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YACd,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;SACf,CAAC;QAGJ,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,AAAC;QAClB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;YAC7C,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;YAEnC,IAAI,IAAI,KAAK,KAAK,EAChB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAGtB,IAAI,IAAI,KAAK,KAAK,EAAE;gBAClB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;gBACpB,IAAI,QAAQ,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAChC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAEjB;YAED,OAAO;gBACL,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG;aACT,CAAC;SACH;QAED,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;YAC7C,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;YAEnC,IAAI,IAAI,KAAK,KAAK,EAChB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;YAGtB,OAAO;gBACL,GAAG,EAAE,GAAG;gBACR,GAAG,EAAE,GAAG,CAAC,GAAG;aACb,CAAC;SACH;QAED,IAAI,AAAC,CAAA,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAA,KAAM,CAAC,EAAE;YACxC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,IAAI,CAAC,CAAC;YAEzC,IAAI,IAAI,KAAK,KAAK,EAAE;gBAClB,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;gBACpB,IAAI,QAAQ,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAChC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aAEjB;YAED,OAAO;gBACL,GAAG,EAAE,GAAG,CAAC,GAAG;gBACZ,GAAG,EAAE,GAAG;aACT,CAAC;SACH;QAED,0CAA0C;QAE1C,gDAAgD;QAChD,IAAI,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,EAC/C,OAAO;YACL,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;YACd,GAAG,EAAE,IAAI;SACV,CAAC;QAGJ,uBAAuB;QACvB,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC,EAAE;YACpB,IAAI,IAAI,KAAK,KAAK,EAChB,OAAO;gBACL,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5B,GAAG,EAAE,IAAI;aACV,CAAC;YAGJ,IAAI,IAAI,KAAK,KAAK,EAChB,OAAO;gBACL,GAAG,EAAE,IAAI;gBACT,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACtC,CAAC;YAGJ,OAAO;gBACL,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5B,GAAG,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;aACtC,CAAC;SACH;QAED,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;KACjC,CAAC;IAEF,sBAAsB;IACtB,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC;KAC3C,CAAC;IAEF,sBAAsB;IACtB,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,GAAG,CAAC;KAC3C,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC;KAC1C,CAAC;IAEF,6BAA6B;IAC7B,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,GAAG,EAAE;QAC9C,IAAI,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,AAAC;QAE1B,6BAA6B;QAC7B,IAAI,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC;QAEnC,IAAI,GAAG,GAAG,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,AAAC;QAE5D,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,AAAC;QACxB,IAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,AAAC;QACtB,IAAI,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,AAAC;QAExB,aAAa;QACb,IAAI,GAAG,GAAG,CAAC,IAAK,EAAE,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,AAAC,EAAE,OAAO,EAAE,CAAC,GAAG,CAAC;QAEtD,WAAW;QACX,OAAO,EAAE,CAAC,GAAG,CAAC,QAAQ,KAAK,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAClE,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC,AAAC;QACvB,IAAI,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC;QAEzB,MAAM,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC;QACzB,IAAI,CAAC,GAAG,AAAC,QAAO,GAAI,GAAG,AAAC;QAExB,IAAI,GAAG,GAAG,CAAC,AAAC;QACZ,IAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CACvC,GAAG,GAAG,AAAC,CAAA,CAAC,GAAG,GAAG,GAAI,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,AAAC,CAAA,GAAI,GAAG,CAAC;QAG9C,OAAO,QAAQ,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC;KAC9B,CAAC;IAEF,sBAAsB;IACtB,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KACxB,CAAC;IAEF,8BAA8B;IAC9B,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC,AAAC;QACvB,IAAI,QAAQ,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC;QAEzB,MAAM,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC;QAEzB,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAE;YACzC,IAAI,CAAC,GAAG,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,KAAK,GAAG,SAAS,AAAC;YAChD,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,AAAC,CAAC,GAAG,GAAG,GAAI,CAAC,CAAC;YAC9B,KAAK,GAAG,CAAC,GAAG,GAAG,CAAC;SACjB;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,OAAO,QAAQ,GAAG,IAAI,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC;KACtC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,KAAK,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE;QACpC,MAAM,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QAEpB,IAAI,CAAC,GAAG,IAAI,AAAC;QACb,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,AAAC;QAElB,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,EAClB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAEd,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;QAGhB,oBAAoB;QACpB,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,AAAC;QAClB,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,AAAC;QAElB,oBAAoB;QACpB,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,AAAC;QAClB,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,AAAC;QAElB,IAAI,CAAC,GAAG,CAAC,AAAC;QAEV,MAAO,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,CAAE;YAC/B,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,CAAC,CAAC;SACL;QAED,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,AAAC;QACnB,IAAI,EAAE,GAAG,CAAC,CAAC,KAAK,EAAE,AAAC;QAEnB,MAAO,CAAC,CAAC,CAAC,MAAM,EAAE,CAAE;YAClB,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA,KAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACZ,MAAO,CAAC,EAAE,GAAG,CAAC,CAAE;oBACd,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;wBAC1B,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACX,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBACZ;oBAED,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACZ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACb;aACF;YAED,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA,KAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACZ,MAAO,CAAC,EAAE,GAAG,CAAC,CAAE;oBACd,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;wBAC1B,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBACX,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;qBACZ;oBAED,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;oBACZ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACb;aACF;YAED,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBACjB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACX,MAAM;gBACL,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACV,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACX;SACF;QAED,OAAO;YACL,CAAC,EAAE,CAAC;YACJ,CAAC,EAAE,CAAC;YACJ,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;SACjB,CAAC;KACH,CAAC;IAEF,gDAAgD;IAChD,6CAA6C;IAC7C,yCAAyC;IACzC,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,CAAC,EAAE;QACxC,MAAM,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QAEpB,IAAI,CAAC,GAAG,IAAI,AAAC;QACb,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,AAAC;QAElB,IAAI,CAAC,CAAC,QAAQ,KAAK,CAAC,EAClB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAEd,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,CAAC;QAGhB,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,AAAC;QACnB,IAAI,EAAE,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,AAAC;QAEnB,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,AAAC;QAEtB,MAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAE;YACrC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA,KAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACZ,MAAO,CAAC,EAAE,GAAG,CAAC,CAAE;oBACd,IAAI,EAAE,CAAC,KAAK,EAAE,EACZ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAGjB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACd;aACF;YAED,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,AAAC,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA,KAAM,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,KAAK,CAAC;YACxE,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACZ,MAAO,CAAC,EAAE,GAAG,CAAC,CAAE;oBACd,IAAI,EAAE,CAAC,KAAK,EAAE,EACZ,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAGjB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACd;aACF;YAED,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBACjB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACV,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACb,MAAM;gBACL,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACV,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACb;SACF;QAED,IAAI,GAAG,AAAC;QACR,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EACjB,GAAG,GAAG,EAAE,CAAC;aAET,GAAG,GAAG,EAAE,CAAC;QAGX,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACjB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAGd,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,IAAI,IAAI,CAAC,MAAM,EAAE,EAAE,OAAO,GAAG,CAAC,GAAG,EAAE,CAAC;QACpC,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;QAEpC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,EAAE,AAAC;QACrB,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,EAAE,AAAC;QACpB,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;QACf,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;QAEf,8BAA8B;QAC9B,IAAK,IAAI,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,CAAE;YACrD,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACZ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACb;QAED,GAAG;YACD,MAAO,CAAC,CAAC,MAAM,EAAE,CACf,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAEd,MAAO,CAAC,CAAC,MAAM,EAAE,CACf,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAGd,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;YACjB,IAAI,CAAC,GAAG,CAAC,EAAE;gBACT,sDAAsD;gBACtD,IAAI,CAAC,GAAG,CAAC,AAAC;gBACV,CAAC,GAAG,CAAC,CAAC;gBACN,CAAC,GAAG,CAAC,CAAC;aACP,MAAM,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EACnC,MAAM;YAGR,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACX,OAAQ,IAAI,EAAE;QAEf,OAAO,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACxB,CAAC;IAEF,oCAAoC;IACpC,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KACnC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;QACvC,OAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,KAAM,CAAC,CAAC;KAClC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,GAAI;QACrC,OAAO,AAAC,CAAA,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,KAAM,CAAC,CAAC;KAClC,CAAC;IAEF,yBAAyB;IACzB,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;KAC5B,CAAC;IAEF,wCAAwC;IACxC,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,MAAM,CAAC,OAAO,GAAG,KAAK,QAAQ,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,GAAG,GAAG,EAAE,AAAC;QACjB,IAAI,CAAC,GAAG,AAAC,CAAA,GAAG,GAAG,CAAC,CAAA,GAAI,EAAE,AAAC;QACvB,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,AAAC;QAEf,wDAAwD;QACxD,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;SACb;QAED,mCAAmC;QACnC,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,KAAK,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACnD,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;YAC1B,CAAC,IAAI,KAAK,CAAC;YACX,KAAK,GAAG,CAAC,KAAK,EAAE,CAAC;YACjB,CAAC,IAAI,SAAS,CAAC;YACf,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACnB;QACD,IAAI,KAAK,KAAK,CAAC,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;YACtB,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;QACD,OAAO,IAAI,CAAC;KACb,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;QACvC,OAAO,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;KACjD,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,IAAI,QAAQ,GAAG,GAAG,GAAG,CAAC,AAAC;QAEvB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC;QAChD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,QAAQ,EAAE,OAAO,CAAC,CAAC;QAE9C,IAAI,CAAC,MAAM,EAAE,CAAC;QAEd,IAAI,GAAG,AAAC;QACR,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EACjB,GAAG,GAAG,CAAC,CAAC;aACH;YACL,IAAI,QAAQ,EACV,GAAG,GAAG,CAAC,GAAG,CAAC;YAGb,MAAM,CAAC,GAAG,IAAI,SAAS,EAAE,mBAAmB,CAAC,CAAC;YAE9C,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;YAC1B,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;SACxC;QACD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;QACzC,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,kCAAkC;IAClC,wBAAwB;IACxB,yBAAyB;IACzB,yBAAyB;IACzB,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE,OAAO,EAAE,CAAC;QACzD,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC;QAExD,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,AAAC;QACzB,IAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC,CAAC;QACzC,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,sBAAsB;IACtB,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,gDAAgD;QAChD,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QACvC,IAAI,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC;QAExC,IAAI,GAAG,GAAG,CAAC,AAAC;QACZ,IAAK,IAAI,CAAC,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAE;YACzC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;YAC1B,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;YAEzB,IAAI,CAAC,KAAK,CAAC,EAAE,SAAS;YACtB,IAAI,CAAC,GAAG,CAAC,EACP,GAAG,GAAG,EAAE,CAAC;iBACJ,IAAI,CAAC,GAAG,CAAC,EACd,GAAG,GAAG,CAAC,CAAC;YAEV,MAAM;SACP;QACD,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC7B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,EAAE,CAAE,GAAG,EAAE;QAClC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC3B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;KAC9B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,EAAE,CAAE,GAAG,EAAE;QAClC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;KAC7B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QACtC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC3B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC7B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,EAAE,GAAG,SAAS,EAAE,CAAE,GAAG,EAAE;QAClC,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;KAC5B,CAAC;IAEF,EAAE;IACF,6EAA6E;IAC7E,qBAAqB;IACrB,EAAE;IACF,EAAE,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,GAAG,EAAE;QAC1B,OAAO,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;KACrB,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QACxC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,uCAAuC,CAAC,CAAC;QAC3D,MAAM,CAAC,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE,+BAA+B,CAAC,CAAC;QAC7D,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC3C,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,GAAI;QACzC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,sDAAsD,CAAC,CAAC;QACzE,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;KACnC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,GAAG,EAAE;QAChD,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,OAAO,IAAI,CAAC;KACb,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,GAAG,EAAE;QAC9C,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,uCAAuC,CAAC,CAAC;QAC3D,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;KAC5B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,GAAG,EAAE;QAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,GAAG,EAAE;QAC5C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACjC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,GAAG,EAAE;QAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,GAAG,EAAE;QAC5C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;QACxD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACjC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,GAAG,EAAE;QAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;QACvD,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,GAAG,EAAE;QAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;QACvD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,GAAG,EAAE;QAC5C,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;QACvD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KACjC,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;QACvC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;QACvD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC3B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,GAAI;QACzC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,qBAAqB;IACrB,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,GAAI;QACzC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,GAAI;QACzC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,qCAAqC,CAAC,CAAC;QACxD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,iDAAiD;IACjD,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,GAAI;QACvC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,oCAAoC,CAAC,CAAC;QACvD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;KAC3B,CAAC;IAEF,EAAE,CAAC,SAAS,CAAC,MAAM,GAAG,SAAS,MAAM,CAAE,GAAG,EAAE;QAC1C,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,mBAAmB,CAAC,CAAC;QAClD,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACxB,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAChC,CAAC;IAEF,yCAAyC;IACzC,IAAI,MAAM,GAAG;QACX,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI;QACV,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,IAAI;KACb,AAAC;IAEF,wBAAwB;IACxB,SAAS,MAAM,CAAE,IAAI,EAAE,CAAC,EAAE;QACxB,gBAAgB;QAChB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAC5B,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAE/C,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;KACxB;IAED,MAAM,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,GAAI;QACvC,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,IAAI,CAAC,AAAC;QACvB,GAAG,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAC9C,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,MAAM,CAAC,SAAS,CAAC,OAAO,GAAG,SAAS,OAAO,CAAE,GAAG,EAAE;QAChD,wCAAwC;QACxC,6DAA6D;QAC7D,IAAI,CAAC,GAAG,GAAG,AAAC;QACZ,IAAI,IAAI,AAAC;QAET,GAAG;YACD,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YACxB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,IAAI,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;SACtB,OAAQ,IAAI,GAAG,IAAI,CAAC,CAAC,EAAE;QAExB,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QAC9C,IAAI,GAAG,KAAK,CAAC,EAAE;YACb,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;SACd,MAAM,IAAI,GAAG,GAAG,CAAC,EAChB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAEf,CAAC,CAAC,MAAM,EAAE,CAAC;QAGb,OAAO,CAAC,CAAC;KACV,CAAC;IAEF,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,KAAK,EAAE,GAAG,EAAE;QACnD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;KAC9B,CAAC;IAEF,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QAC5C,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB,CAAC;IAEF,SAAS,IAAI,GAAI;QACf,MAAM,CAAC,IAAI,CACT,IAAI,EACJ,MAAM,EACN,yEAAyE,CAAC,CAAC;KAC9E;IACD,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAEvB,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,KAAK,EAAE,MAAM,EAAE;QACpD,oBAAoB;QACpB,IAAI,IAAI,GAAG,QAAQ,AAAC;QAEpB,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC,AAAC;QACvC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,CAC7B,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAEnC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;QAEvB,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACrB,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACnB,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;YACjB,OAAO;SACR;QAED,mBAAmB;QACnB,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,AAAC;QAC1B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAE5C,IAAK,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YAClC,IAAI,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;YAC9B,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,AAAE,CAAA,IAAI,GAAG,IAAI,CAAA,IAAK,CAAC,GAAK,IAAI,KAAK,EAAE,AAAC,CAAC;YAC3D,IAAI,GAAG,IAAI,CAAC;SACb;QACD,IAAI,MAAM,EAAE,CAAC;QACb,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,IAAI,CAAC;QAC3B,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,EAAE,EACjC,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC;aAEnB,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;KAErB,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QAC1C,oCAAoC;QACpC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAC1B,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;QAC9B,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC;QAEhB,qDAAqD;QACrD,IAAI,EAAE,GAAG,CAAC,AAAC;QACX,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACnC,IAAI,CAAC,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,AAAC;YACzB,EAAE,IAAI,CAAC,GAAG,KAAK,CAAC;YAChB,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,SAAS,CAAC;YAC9B,EAAE,GAAG,CAAC,GAAG,IAAI,GAAI,CAAA,AAAC,EAAE,GAAG,SAAS,GAAI,CAAC,CAAA,AAAC,CAAC;SACxC;QAED,wBAAwB;QACxB,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EAAE;YACnC,GAAG,CAAC,MAAM,EAAE,CAAC;YACb,IAAI,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,CAAC,EACjC,GAAG,CAAC,MAAM,EAAE,CAAC;SAEhB;QACD,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,SAAS,IAAI,GAAI;QACf,MAAM,CAAC,IAAI,CACT,IAAI,EACJ,MAAM,EACN,gEAAgE,CAAC,CAAC;KACrE;IACD,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAEvB,SAAS,IAAI,GAAI;QACf,MAAM,CAAC,IAAI,CACT,IAAI,EACJ,MAAM,EACN,uDAAuD,CAAC,CAAC;KAC5D;IACD,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAEvB,SAAS,MAAM,GAAI;QACjB,eAAe;QACf,MAAM,CAAC,IAAI,CACT,IAAI,EACJ,OAAO,EACP,qEAAqE,CAAC,CAAC;KAC1E;IACD,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IAEzB,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,KAAK,CAAE,GAAG,EAAE;QAC5C,WAAW;QACX,IAAI,KAAK,GAAG,CAAC,AAAC;QACd,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE;YACnC,IAAI,EAAE,GAAG,AAAC,CAAA,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,GAAI,IAAI,GAAG,KAAK,AAAC;YAC3C,IAAI,EAAE,GAAG,EAAE,GAAG,SAAS,AAAC;YACxB,EAAE,MAAM,EAAE,CAAC;YAEX,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;YAClB,KAAK,GAAG,EAAE,CAAC;SACZ;QACD,IAAI,KAAK,KAAK,CAAC,EACb,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,GAAG,KAAK,CAAC;QAElC,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,+DAA+D;IAC/D,EAAE,CAAC,MAAM,GAAG,SAAS,KAAK,CAAE,IAAI,EAAE;QAChC,0BAA0B;QAC1B,IAAI,MAAM,CAAC,IAAI,CAAC,EAAE,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;QAEtC,IAAI,KAAK,AAAC;QACV,IAAI,IAAI,KAAK,MAAM,EACjB,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;aACd,IAAI,IAAI,KAAK,MAAM,EACxB,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;aACd,IAAI,IAAI,KAAK,MAAM,EACxB,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;aACd,IAAI,IAAI,KAAK,QAAQ,EAC1B,KAAK,GAAG,IAAI,MAAM,EAAE,CAAC;aAErB,MAAM,IAAI,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC,CAAC;QAE3C,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QAErB,OAAO,KAAK,CAAC;KACd,CAAC;IAEF,EAAE;IACF,wBAAwB;IACxB,EAAE;IACF,SAAS,GAAG,CAAE,CAAC,EAAE;QACf,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACzB,IAAI,KAAK,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,AAAC;YACzB,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB,MAAM;YACL,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,gCAAgC,CAAC,CAAC;YACnD,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;SACnB;KACF;IAED,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,CAAC,EAAE;QAC7C,MAAM,CAAC,CAAC,CAAC,QAAQ,KAAK,CAAC,EAAE,+BAA+B,CAAC,CAAC;QAC1D,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE,iCAAiC,CAAC,CAAC;KAClD,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,QAAQ,GAAG,SAAS,QAAQ,CAAE,CAAC,EAAE,CAAC,EAAE;QAChD,MAAM,CAAC,AAAC,CAAA,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAA,KAAM,CAAC,EAAE,+BAA+B,CAAC,CAAC;QACzE,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAC7B,iCAAiC,CAAC,CAAC;KACtC,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE;QACrC,IAAI,IAAI,CAAC,KAAK,EAAE,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAE7D,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACxC,OAAO,CAAC,CAAC;KACV,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,CAAC,EAAE;QACnC,IAAI,CAAC,CAAC,MAAM,EAAE,EACZ,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;QAGnB,OAAO,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KACtC,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE;QACtC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpB,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;QACnB,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEnB,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE;QACxC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpB,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QACpB,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EACtB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEnB,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE;QACtC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpB,IAAI,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;QACnB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEnB,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE;QACxC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEpB,IAAI,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QACpB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACjB,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAEnB,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,CAAC,EAAE,GAAG,EAAE;QACxC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;QACjB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;KAChC,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE;QACxC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC7B,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE;QACtC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACpB,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5B,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE;QACrC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC;KAChC,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,CAAC,EAAE;QACnC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACvB,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE;QACrC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;QAEjC,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,AAAC;QAC3B,MAAM,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;QAEvB,YAAY;QACZ,IAAI,IAAI,KAAK,CAAC,EAAE;YACd,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,AAAC;YAC1C,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;SACzB;QAED,0DAA0D;QAC1D,EAAE;QACF,yCAAyC;QACzC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QACvB,IAAI,CAAC,GAAG,CAAC,AAAC;QACV,MAAO,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAE;YACtC,CAAC,EAAE,CAAC;YACJ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;SACb;QACD,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;QAEpB,IAAI,GAAG,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,AAAC;QAChC,IAAI,IAAI,GAAG,GAAG,CAAC,MAAM,EAAE,AAAC;QAExB,6BAA6B;QAC7B,+DAA+D;QAC/D,IAAI,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,AAAC;QACpC,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,AAAC;QAC3B,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAElC,MAAO,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CACtC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAGlB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,AAAC;QACvB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,AAAC;QACzC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,AAAC;QACvB,IAAI,CAAC,GAAG,CAAC,AAAC;QACV,MAAO,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAE;YACvB,IAAI,GAAG,GAAG,CAAC,AAAC;YACZ,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CACrC,GAAG,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC;YAErB,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;YAEjD,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChB,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;YACf,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAChB,CAAC,GAAG,CAAC,CAAC;SACP;QAED,OAAO,CAAC,CAAC;KACV,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE;QACrC,IAAI,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QAC3B,IAAI,GAAG,CAAC,QAAQ,KAAK,CAAC,EAAE;YACtB,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC;YACjB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC;SAChC,MACC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAEzB,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,CAAC,EAAE,GAAG,EAAE;QACxC,IAAI,GAAG,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/C,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAC;QAExC,IAAI,UAAU,GAAG,CAAC,AAAC;QACnB,IAAI,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,IAAI,UAAU,CAAC,AAAC;QACrC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC/B,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACX,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,CACjC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAGnC,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,AAAC;QACjB,IAAI,OAAO,GAAG,CAAC,AAAC;QAChB,IAAI,UAAU,GAAG,CAAC,AAAC;QACnB,IAAI,KAAK,GAAG,GAAG,CAAC,SAAS,EAAE,GAAG,EAAE,AAAC;QACjC,IAAI,KAAK,KAAK,CAAC,EACb,KAAK,GAAG,EAAE,CAAC;QAGb,IAAK,CAAC,GAAG,GAAG,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAE;YACpC,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,AAAC;YACxB,IAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAE;gBACnC,IAAI,GAAG,GAAG,AAAC,IAAI,IAAI,CAAC,GAAI,CAAC,AAAC;gBAC1B,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,EAChB,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBAGtB,IAAI,GAAG,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,EAAE;oBAC9B,UAAU,GAAG,CAAC,CAAC;oBACf,SAAS;iBACV;gBAED,OAAO,KAAK,CAAC,CAAC;gBACd,OAAO,IAAI,GAAG,CAAC;gBACf,UAAU,EAAE,CAAC;gBACb,IAAI,UAAU,KAAK,UAAU,IAAK,CAAA,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,AAAC,EAAE,SAAS;gBAEhE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;gBAClC,UAAU,GAAG,CAAC,CAAC;gBACf,OAAO,GAAG,CAAC,CAAC;aACb;YACD,KAAK,GAAG,EAAE,CAAC;SACZ;QAED,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,GAAG,EAAE;QACjD,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QAEzB,OAAO,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;KAClC,CAAC;IAEF,GAAG,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,GAAG,EAAE;QACrD,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE,AAAC;QACtB,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC;QACf,OAAO,GAAG,CAAC;KACZ,CAAC;IAEF,EAAE;IACF,2BAA2B;IAC3B,EAAE;IAEF,EAAE,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,GAAG,EAAE;QAC5B,OAAO,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;KACtB,CAAC;IAEF,SAAS,IAAI,CAAE,CAAC,EAAE;QAChB,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAElB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,IAAI,CAAC,KAAK,GAAG,EAAE,KAAK,CAAC,EACvB,IAAI,CAAC,KAAK,IAAI,EAAE,GAAI,IAAI,CAAC,KAAK,GAAG,EAAE,AAAC,CAAC;QAGvC,IAAI,CAAC,CAAC,GAAG,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;QAClC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAElC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACnC;IACD,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IAEpB,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,SAAS,SAAS,CAAE,GAAG,EAAE;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;KACzC,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,SAAS,WAAW,CAAE,GAAG,EAAE;QACtD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,AAAC;QACtC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC;QACb,OAAO,CAAC,CAAC;KACV,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE,CAAC,EAAE;QACzC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YAC5B,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACf,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;YACb,OAAO,CAAC,CAAC;SACV;QAED,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QAClB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QAC1E,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,AAAC;QACrC,IAAI,GAAG,GAAG,CAAC,AAAC;QAEZ,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EACpB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAChB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACtB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAGvB,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,SAAS,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE;QACvC,IAAI,CAAC,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAE/D,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,AAAC;QACjB,IAAI,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,AAAC;QAC1E,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,AAAC;QACrC,IAAI,GAAG,GAAG,CAAC,AAAC;QACZ,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EACpB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAChB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,EACtB,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAGvB,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;IAEF,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,SAAS,IAAI,CAAE,CAAC,EAAE;QACtC,iDAAiD;QACjD,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,AAAC;QACnD,OAAO,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;KAC5B,CAAC;CACH,CAAA,CAAmC,MAAM,EAAE,IAAI,CAAC,CAAC;;;ACz8GlD,YAAY,CAAC;;;ACAZ,CAAA,SAAS,IAAI,EAAE;IAChB,YAAY,CAAC;IAEb,uDAAuD;IACvD,iBAAiB;IACjB,EAAE;IACF,0DAA0D;IAC1D,8CAA8C;IAE9C,IAAI,EAAE,GAAG,SAAS,IAAI,EAAE;QACtB,IAAI,CAAC,EAAE,CAAC,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,AAAC;QAChC,IAAI,IAAI,EAAE,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QAC3D,OAAO,CAAC,CAAC;KACV,AAAC;IAEF,mDAAmD;IACnD,IAAI,WAAW,GAAG,WAAqB;QAAE,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;KAAE,AAAC;IAEvE,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,AAAC;IAC5B,IAAI,EAAE,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,AAAC;IAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;IAEvC,IAAI,GAAG,GAAG,EAAE,EAAE,EACV,GAAG,GAAG,EAAE,CAAC;AAAC,SAAC;KAAC,CAAC,EACb,OAAO,GAAG,EAAE,CAAC;AAAC,cAAM;AAAE,SAAC;KAAC,CAAC,EACzB,CAAC,GAAG,EAAE,CAAC;AAAC,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;KAAC,CAAC,EACxI,EAAE,GAAG,EAAE,CAAC;AAAC,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;KAAC,CAAC,EACzI,CAAC,GAAG,EAAE,CAAC;AAAC,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;KAAC,CAAC,EACxI,CAAC,GAAG,EAAE,CAAC;AAAC,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;KAAC,CAAC,EACxI,CAAC,GAAG,EAAE,CAAC;AAAC,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;AAAE,cAAM;KAAC,CAAC,AAAC;IAE7I,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACxB,CAAC,CAAC,CAAC,CAAC,GAAK,AAAC,CAAC,IAAI,EAAE,GAAI,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,AAAC,CAAC,IAAI,EAAE,GAAI,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,AAAC,CAAC,IAAK,CAAC,GAAI,IAAI,CAAC;QAC1B,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;QAClB,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,AAAC,CAAC,IAAI,EAAE,GAAK,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,AAAC,CAAC,IAAI,EAAE,GAAK,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,AAAC,CAAC,IAAK,CAAC,GAAK,IAAI,CAAC;QAC3B,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC;KACnB;IAED,SAAS,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE;QAC3B,IAAI,CAAC,EAAC,CAAC,GAAG,CAAC,AAAC;QACZ,IAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAE,CAAC,IAAI,CAAC,CAAC,EAAE,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,EAAE,GAAC,CAAC,CAAC,CAAC;QAC7C,OAAO,AAAC,CAAA,CAAC,GAAI,AAAC,CAAC,GAAG,CAAC,KAAM,CAAC,AAAC,CAAA,GAAI,CAAC,CAAC;KAClC;IAED,SAAS,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;QACtC,OAAO,EAAE,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;KACzB;IAED,SAAS,gBAAgB,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE;QACtC,OAAO,EAAE,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;KACzB;IAED,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QAChC,IAAI,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,EAAE,GAAI,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAE,CAAC,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,EAAE,EAChF,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,GAAG,AAAC,CAAA,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA,IAAG,CAAC,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AG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QACzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC;QAEzB,CAAC,CAAC,EAAE,CAAC,GAAG,EAAE,KAAM,CAAC,GAAG,IAAI,CAAC;QACzB,CA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G,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QACT,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC;QACb,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QACf,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;QACV,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QACd,GAAG,IAAI,CAAC,GAA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IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,EAAE,IAAI,CAAC,GAAC,CAAC,GAAG,EAAE,GAAI,CAAA,CAAC,GAAC,CAAC,CAAA,AAAC,CAAC;QAEvB,aAAa;QACb,CAAC,GAAG,CAAC,CAAC;QACN,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAI,EAAE,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAE,EAAE,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC;QAAC,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;QACpE,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;QAAC,CAAC,GAAG,IAAI,CAAC,K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AU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAAE,kBAAU;AAC9C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I,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI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AAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI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CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,EAAE,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACvD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,EAAE,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QAClD,EAAE,IAAI,SAAS,CAAC;QAChB,WAAW,CACX,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;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AAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GA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,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,IAAI,GAAG,GAAG,AAAE,CAAA,AAAC,CAAC,GAAG,EAAE,GAAI,CAAC,CAAA,GAAK,CAAA,AAAC,CAAA,GAAG,GAAG,MAAM,CAAA,IAAK,EAAE,CAAA,GAAK,CAAC,AAAC;QACxD,CAAC,GAAG,AAAE,CAAA,AAAC,EAAE,GAAI,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAA,GAAK,CAAA,GAAG,KAAK,EAAE,CAAA,GAAK,CAAC,CAAC;QACnD,GAAG,IAAI,SAAS,CAAC;QACjB,YAAY,CACZ,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAC1B,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QACzB,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,GAAG,GAAG,AAAC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACtC,EAAE,GAAG,AAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,GAAI,CAAC,CAAC;QACpC,EAAE,GAA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AA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,KAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,UAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,UAAA;gBACA,OAAA;gBACA,OAAA;gBACA,KAAA;gBACA,SAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,KAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,KAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,KAAA;gBACA,KAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,UAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,KAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,KAAA;gBACA,SAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,UAAA;gBACA,SAAA;gBACA,UAAA;gBACA,SAAA;gBACA,UAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,KAAA;gBACA,UAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,KAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,UAAA;gBACA,MAAA;gBACA,KAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,UAAA;gBACA,UAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,UAAA;gBACA,QAAA;gBACA,MAAA;gBACA,UAAA;gBACA,UAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,UAAA;gBACA,SAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,UAAA;gBACA,KAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,KAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,UAAA;gBACA,SAAA;gBACA,SAAA;gBACA,UAAA;gBACA,UAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,KAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,UAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,UAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,KAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,UAAA;gBACA,SAAA;gBACA,UAAA;gBACA,SAAA;gBACA,KAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,OAAA;gBACA,OAAA;gBACA,KAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,KAAA;gBACA,SAAA;gBACA,KAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,KAAA;gBACA,MAAA;gBACA,OAAA;gBACA,KAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,SAAA;gBACA,OAAA;gBACA,UAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,KAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,KAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,KAAA;gBACA,KAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,KAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,KAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,KAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,KAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,KAAA;gBACA,MAAA;gBACA,MAAA;gBACA,UAAA;gBACA,MAAA;gBACA,QAAA;gBACA,KAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,UAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,UAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,KAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,KAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,KAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,UAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,KAAA;gBACA,MAAA;gBACA,KAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,KAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,UAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,KAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,KAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,UAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,UAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,UAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,KAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,KAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,UAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,UAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,KAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,KAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,UAAA;gBACA,OAAA;gBACA,QAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,SAAA;gBACA,KAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,KAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,UAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,KAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,SAAA;gBACA,UAAA;gBACA,UAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,UAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,KAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,UAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,UAAA;gBACA,QAAA;gBACA,UAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,KAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,KAAA;gBACA,MAAA;gBACA,KAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,UAAA;gBACA,UAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,UAAA;gBACA,MAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,UAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,KAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,KAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,KAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,UAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,QAAA;gBACA,KAAA;gBACA,QAAA;gBACA,SAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,UAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,UAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,UAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,KAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,MAAA;gBACA,KAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,SAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,MAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,KAAA;gBACA,UAAA;gBACA,QAAA;gBACA,OAAA;gBACA,QAAA;gBACA,UAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,KAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,UAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,KAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,UAAA;gBACA,MAAA;gBACA,OAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,OAAA;gBACA,KAAA;gBACA,MAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,KAAA;gBACA,MAAA;gBACA,SAAA;gBACA,MAAA;gBACA,UAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,UAAA;gBACA,SAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,MAAA;gBACA,OAAA;gBACA,OAAA;gBACA,OAAA;gBACA,MAAA;gBACA,OAAA;gBACA,KAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,OAAA;gBACA,OAAA;gBACA,QAAA;gBACA,OAAA;gBACA,KAAA;gBACA,QAAA;gBACA,OAAA;gBACA,SAAA;gBACA,MAAA;gBACA,OAAA;gBACA,SAAA;gBACA,QAAA;gBACA,QAAA;gBACA,SAAA;gBACA,OAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,MAAA;gBACA,QAAA;gBACA,SAAA;gBACA,QAAA;gBACA,SAAA;gBA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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-16e7dd3346f057fe.js","src/channel.js","node_modules/tonweb/src/index.js","node_modules/tonweb/src/utils/index.js","node_modules/tonweb/src/utils/Utils.js","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/bn.js/lib/bn.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/tweetnacl/nacl-fast.js","node_modules/ethjs-unit/lib/index.js","node_modules/ethjs-unit/node_modules/bn.js/lib/bn.js","node_modules/number-to-bn/src/index.js","node_modules/number-to-bn/node_modules/bn.js/lib/bn.js","node_modules/strip-hex-prefix/src/index.js","node_modules/is-hex-prefixed/src/index.js","node_modules/isomorphic-webcrypto/src/browser.mjs","node_modules/isomorphic-webcrypto/src/webcrypto-shim.mjs","node_modules/tonweb/src/utils/Address.js","node_modules/tonweb/src/boc/index.js","node_modules/tonweb/src/boc/BitString.js","node_modules/tonweb/src/boc/Cell.js","node_modules/tonweb/src/ledger/AppTon.js","node_modules/tonweb/src/contract/index.js","node_modules/tonweb/src/providers/index.js","node_modules/tonweb/src/providers/HttpProviderUtils.js","node_modules/tonweb/src/contract/wallet/index.js","node_modules/tonweb/src/contract/wallet/WalletContractSimple.js","node_modules/tonweb/src/contract/wallet/WalletContract.js","node_modules/tonweb/src/contract/wallet/WalletContractV2.js","node_modules/tonweb/src/contract/wallet/WalletContractV3.js","node_modules/tonweb/src/contract/wallet/WalletContractV4.js","node_modules/tonweb/src/contract/wallet/WalletContractV4R2.js","node_modules/tonweb/src/contract/lockup/index.js","node_modules/tonweb/src/contract/token/nft/index.js","node_modules/tonweb/src/contract/token/nft/NftCollection.js","node_modules/tonweb/src/contract/token/nft/NftUtils.js","node_modules/tonweb/src/contract/token/nft/NftItem.js","node_modules/tonweb/src/contract/token/nft/NftMarketplace.js","node_modules/tonweb/src/contract/token/nft/NftSale.js","node_modules/tonweb/src/contract/token/ft/index.js","node_modules/tonweb/src/contract/token/ft/JettonMinter.js","node_modules/tonweb/src/contract/token/ft/JettonWallet.js","node_modules/tonweb/src/providers/blockSubscription/index.js","node_modules/tonweb/src/providers/blockSubscription/BlockSubscription.js","node_modules/tonweb/src/providers/blockSubscription/InMemoryBlockStorage.js","node_modules/tonweb/src/contract/subscription/index.js","node_modules/tonweb/src/contract/payments/index.js","node_modules/tonweb/src/contract/payments/PaymentChannel.js","node_modules/tonweb/src/contract/payments/PaymentUtils.js","node_modules/@ledgerhq/hw-transport-webusb/lib-es/TransportWebUSB.js","node_modules/@ledgerhq/hw-transport-webusb/src/TransportWebUSB.js","node_modules/@ledgerhq/hw-transport/lib-es/Transport.js","node_modules/@ledgerhq/hw-transport/src/Transport.js","node_modules/events/events.js","node_modules/@ledgerhq/errors/dist/index.js","node_modules/@ledgerhq/devices/lib/hid-framing.js","node_modules/@ledgerhq/devices/src/hid-framing.js","node_modules/@ledgerhq/devices/lib-es/index.js","node_modules/@ledgerhq/devices/src/index.js","node_modules/@ledgerhq/devices/node_modules/semver/index.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/re.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/constants.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/debug.js","node_modules/process/browser.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/semver.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/parse-options.js","node_modules/@ledgerhq/devices/node_modules/semver/internal/identifiers.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/parse.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/valid.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/clean.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/inc.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/diff.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/eq.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/major.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/minor.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/patch.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/prerelease.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/rcompare.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-loose.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/compare-build.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/sort.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/rsort.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/gt.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/lt.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/neq.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/gte.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/lte.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/cmp.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/coerce.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/comparator.js","node_modules/@ledgerhq/devices/node_modules/semver/classes/range.js","node_modules/lru-cache/index.js","node_modules/yallist/yallist.js","node_modules/yallist/iterator.js","node_modules/@ledgerhq/devices/node_modules/semver/functions/satisfies.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/to-comparators.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/max-satisfying.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-satisfying.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/min-version.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/valid.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/outside.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/gtr.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/ltr.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/intersects.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/simplify.js","node_modules/@ledgerhq/devices/node_modules/semver/ranges/subset.js","node_modules/@ledgerhq/logs/lib-es/index.js","node_modules/@ledgerhq/logs/src/index.js","node_modules/@ledgerhq/hw-transport-webusb/lib-es/webusb.js","node_modules/@ledgerhq/hw-transport-webusb/src/webusb.js","node_modules/@ledgerhq/hw-transport-webhid/lib-es/TransportWebHID.js","node_modules/@ledgerhq/hw-transport-webhid/src/TransportWebHID.js","node_modules/@ledgerhq/hw-transport-web-ble/lib-es/TransportWebBLE.js","node_modules/@ledgerhq/hw-transport-web-ble/src/TransportWebBLE.js","node_modules/@ledgerhq/devices/lib/ble/sendAPDU.js","node_modules/@ledgerhq/devices/src/ble/sendAPDU.js","node_modules/rxjs/_esm5/index.js","node_modules/rxjs/src/index.ts","node_modules/rxjs/_esm5/internal/Observable.js","node_modules/rxjs/src/internal/Observable.ts","node_modules/rxjs/_esm5/internal/util/canReportError.js","node_modules/rxjs/src/internal/util/canReportError.ts","node_modules/rxjs/_esm5/internal/Subscriber.js","node_modules/rxjs/src/internal/Subscriber.ts","node_modules/rxjs/node_modules/tslib/tslib.es6.js","node_modules/rxjs/_esm5/internal/util/isFunction.js","node_modules/rxjs/src/internal/util/isFunction.ts","node_modules/rxjs/_esm5/internal/Observer.js","node_modules/rxjs/src/internal/Observer.ts","node_modules/rxjs/_esm5/internal/config.js","node_modules/rxjs/src/internal/config.ts","node_modules/rxjs/_esm5/internal/util/hostReportError.js","node_modules/rxjs/src/internal/util/hostReportError.ts","node_modules/rxjs/_esm5/internal/Subscription.js","node_modules/rxjs/src/internal/Subscription.ts","node_modules/rxjs/_esm5/internal/util/isArray.js","node_modules/rxjs/src/internal/util/isArray.ts","node_modules/rxjs/_esm5/internal/util/isObject.js","node_modules/rxjs/src/internal/util/isObject.ts","node_modules/rxjs/_esm5/internal/util/UnsubscriptionError.js","node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","node_modules/rxjs/_esm5/internal/symbol/rxSubscriber.js","node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","node_modules/rxjs/_esm5/internal/util/toSubscriber.js","node_modules/rxjs/src/internal/util/toSubscriber.ts","node_modules/rxjs/_esm5/internal/symbol/observable.js","node_modules/rxjs/src/internal/symbol/observable.ts","node_modules/rxjs/_esm5/internal/util/pipe.js","node_modules/rxjs/src/internal/util/pipe.ts","node_modules/rxjs/_esm5/internal/util/identity.js","node_modules/rxjs/src/internal/util/identity.ts","node_modules/rxjs/_esm5/internal/observable/ConnectableObservable.js","node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","node_modules/rxjs/_esm5/internal/Subject.js","node_modules/rxjs/src/internal/Subject.ts","node_modules/rxjs/_esm5/internal/util/ObjectUnsubscribedError.js","node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","node_modules/rxjs/_esm5/internal/SubjectSubscription.js","node_modules/rxjs/src/internal/SubjectSubscription.ts","node_modules/rxjs/_esm5/internal/operators/refCount.js","node_modules/rxjs/src/internal/operators/refCount.ts","node_modules/rxjs/_esm5/internal/operators/groupBy.js","node_modules/rxjs/src/internal/operators/groupBy.ts","node_modules/rxjs/_esm5/internal/BehaviorSubject.js","node_modules/rxjs/src/internal/BehaviorSubject.ts","node_modules/rxjs/_esm5/internal/ReplaySubject.js","node_modules/rxjs/src/internal/ReplaySubject.ts","node_modules/rxjs/_esm5/internal/scheduler/queue.js","node_modules/rxjs/src/internal/scheduler/queue.ts","node_modules/rxjs/_esm5/internal/scheduler/QueueAction.js","node_modules/rxjs/src/internal/scheduler/QueueAction.ts","node_modules/rxjs/_esm5/internal/scheduler/AsyncAction.js","node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","node_modules/rxjs/_esm5/internal/scheduler/Action.js","node_modules/rxjs/src/internal/scheduler/Action.ts","node_modules/rxjs/_esm5/internal/scheduler/QueueScheduler.js","node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","node_modules/rxjs/_esm5/internal/scheduler/AsyncScheduler.js","node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","node_modules/rxjs/_esm5/internal/Scheduler.js","node_modules/rxjs/src/internal/Scheduler.ts","node_modules/rxjs/_esm5/internal/operators/observeOn.js","node_modules/rxjs/src/internal/operators/observeOn.ts","node_modules/rxjs/_esm5/internal/Notification.js","node_modules/rxjs/src/internal/Notification.ts","node_modules/rxjs/_esm5/internal/observable/empty.js","node_modules/rxjs/src/internal/observable/empty.ts","node_modules/rxjs/_esm5/internal/observable/of.js","node_modules/rxjs/src/internal/observable/of.ts","node_modules/rxjs/_esm5/internal/util/isScheduler.js","node_modules/rxjs/src/internal/util/isScheduler.ts","node_modules/rxjs/_esm5/internal/observable/fromArray.js","node_modules/rxjs/src/internal/observable/fromArray.ts","node_modules/rxjs/_esm5/internal/util/subscribeToArray.js","node_modules/rxjs/src/internal/util/subscribeToArray.ts","node_modules/rxjs/_esm5/internal/scheduled/scheduleArray.js","node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","node_modules/rxjs/_esm5/internal/observable/throwError.js","node_modules/rxjs/src/internal/observable/throwError.ts","node_modules/rxjs/_esm5/internal/AsyncSubject.js","node_modules/rxjs/src/internal/AsyncSubject.ts","node_modules/rxjs/_esm5/internal/scheduler/asap.js","node_modules/rxjs/src/internal/scheduler/asap.ts","node_modules/rxjs/_esm5/internal/scheduler/AsapAction.js","node_modules/rxjs/src/internal/scheduler/AsapAction.ts","node_modules/rxjs/_esm5/internal/util/Immediate.js","node_modules/rxjs/src/internal/util/Immediate.ts","node_modules/rxjs/_esm5/internal/scheduler/AsapScheduler.js","node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","node_modules/rxjs/_esm5/internal/scheduler/async.js","node_modules/rxjs/src/internal/scheduler/async.ts","node_modules/rxjs/_esm5/internal/scheduler/animationFrame.js","node_modules/rxjs/src/internal/scheduler/animationFrame.ts","node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameAction.js","node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","node_modules/rxjs/_esm5/internal/scheduler/AnimationFrameScheduler.js","node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","node_modules/rxjs/_esm5/internal/scheduler/VirtualTimeScheduler.js","node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","node_modules/rxjs/_esm5/internal/util/noop.js","node_modules/rxjs/src/internal/util/noop.ts","node_modules/rxjs/_esm5/internal/util/isObservable.js","node_modules/rxjs/src/internal/util/isObservable.ts","node_modules/rxjs/_esm5/internal/util/ArgumentOutOfRangeError.js","node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","node_modules/rxjs/_esm5/internal/util/EmptyError.js","node_modules/rxjs/src/internal/util/EmptyError.ts","node_modules/rxjs/_esm5/internal/util/TimeoutError.js","node_modules/rxjs/src/internal/util/TimeoutError.ts","node_modules/rxjs/_esm5/internal/observable/bindCallback.js","node_modules/rxjs/src/internal/observable/bindCallback.ts","node_modules/rxjs/_esm5/internal/operators/map.js","node_modules/rxjs/src/internal/operators/map.ts","node_modules/rxjs/_esm5/internal/observable/bindNodeCallback.js","node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","node_modules/rxjs/_esm5/internal/observable/combineLatest.js","node_modules/rxjs/src/internal/observable/combineLatest.ts","node_modules/rxjs/_esm5/internal/OuterSubscriber.js","node_modules/rxjs/src/internal/OuterSubscriber.ts","node_modules/rxjs/_esm5/internal/util/subscribeToResult.js","node_modules/rxjs/src/internal/util/subscribeToResult.ts","node_modules/rxjs/_esm5/internal/InnerSubscriber.js","node_modules/rxjs/src/internal/InnerSubscriber.ts","node_modules/rxjs/_esm5/internal/util/subscribeTo.js","node_modules/rxjs/src/internal/util/subscribeTo.ts","node_modules/rxjs/_esm5/internal/util/subscribeToPromise.js","node_modules/rxjs/src/internal/util/subscribeToPromise.ts","node_modules/rxjs/_esm5/internal/util/subscribeToIterable.js","node_modules/rxjs/src/internal/util/subscribeToIterable.ts","node_modules/rxjs/_esm5/internal/symbol/iterator.js","node_modules/rxjs/src/internal/symbol/iterator.ts","node_modules/rxjs/_esm5/internal/util/subscribeToObservable.js","node_modules/rxjs/src/internal/util/subscribeToObservable.ts","node_modules/rxjs/_esm5/internal/util/isArrayLike.js","node_modules/rxjs/src/internal/util/isArrayLike.ts","node_modules/rxjs/_esm5/internal/util/isPromise.js","node_modules/rxjs/src/internal/util/isPromise.ts","node_modules/rxjs/_esm5/internal/observable/concat.js","node_modules/rxjs/src/internal/observable/concat.ts","node_modules/rxjs/_esm5/internal/operators/concatAll.js","node_modules/rxjs/src/internal/operators/concatAll.ts","node_modules/rxjs/_esm5/internal/operators/mergeAll.js","node_modules/rxjs/src/internal/operators/mergeAll.ts","node_modules/rxjs/_esm5/internal/operators/mergeMap.js","node_modules/rxjs/src/internal/operators/mergeMap.ts","node_modules/rxjs/_esm5/internal/observable/from.js","node_modules/rxjs/src/internal/observable/from.ts","node_modules/rxjs/_esm5/internal/scheduled/scheduled.js","node_modules/rxjs/src/internal/scheduled/scheduled.ts","node_modules/rxjs/_esm5/internal/scheduled/scheduleObservable.js","node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","node_modules/rxjs/_esm5/internal/scheduled/schedulePromise.js","node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","node_modules/rxjs/_esm5/internal/scheduled/scheduleIterable.js","node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","node_modules/rxjs/_esm5/internal/util/isInteropObservable.js","node_modules/rxjs/src/internal/util/isInteropObservable.ts","node_modules/rxjs/_esm5/internal/util/isIterable.js","node_modules/rxjs/src/internal/util/isIterable.ts","node_modules/rxjs/_esm5/internal/innerSubscribe.js","node_modules/rxjs/src/internal/innerSubscribe.ts","node_modules/rxjs/_esm5/internal/observable/defer.js","node_modules/rxjs/src/internal/observable/defer.ts","node_modules/rxjs/_esm5/internal/observable/forkJoin.js","node_modules/rxjs/src/internal/observable/forkJoin.ts","node_modules/rxjs/_esm5/internal/observable/fromEvent.js","node_modules/rxjs/src/internal/observable/fromEvent.ts","node_modules/rxjs/_esm5/internal/observable/fromEventPattern.js","node_modules/rxjs/src/internal/observable/fromEventPattern.ts","node_modules/rxjs/_esm5/internal/observable/generate.js","node_modules/rxjs/src/internal/observable/generate.ts","node_modules/rxjs/_esm5/internal/observable/iif.js","node_modules/rxjs/src/internal/observable/iif.ts","node_modules/rxjs/_esm5/internal/observable/interval.js","node_modules/rxjs/src/internal/observable/interval.ts","node_modules/rxjs/_esm5/internal/util/isNumeric.js","node_modules/rxjs/src/internal/util/isNumeric.ts","node_modules/rxjs/_esm5/internal/observable/merge.js","node_modules/rxjs/src/internal/observable/merge.ts","node_modules/rxjs/_esm5/internal/observable/never.js","node_modules/rxjs/src/internal/observable/never.ts","node_modules/rxjs/_esm5/internal/observable/onErrorResumeNext.js","node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","node_modules/rxjs/_esm5/internal/observable/pairs.js","node_modules/rxjs/src/internal/observable/pairs.ts","node_modules/rxjs/_esm5/internal/observable/partition.js","node_modules/rxjs/src/internal/observable/partition.ts","node_modules/rxjs/_esm5/internal/util/not.js","node_modules/rxjs/src/internal/util/not.ts","node_modules/rxjs/_esm5/internal/operators/filter.js","node_modules/rxjs/src/internal/operators/filter.ts","node_modules/rxjs/_esm5/internal/observable/race.js","node_modules/rxjs/src/internal/observable/race.ts","node_modules/rxjs/_esm5/internal/observable/range.js","node_modules/rxjs/src/internal/observable/range.ts","node_modules/rxjs/_esm5/internal/observable/timer.js","node_modules/rxjs/src/internal/observable/timer.ts","node_modules/rxjs/_esm5/internal/observable/using.js","node_modules/rxjs/src/internal/observable/using.ts","node_modules/rxjs/_esm5/internal/observable/zip.js","node_modules/rxjs/src/internal/observable/zip.ts","node_modules/@ledgerhq/devices/lib/ble/receiveAPDU.js","node_modules/@ledgerhq/devices/src/ble/receiveAPDU.js","node_modules/rxjs/_esm5/operators/index.js","node_modules/rxjs/src/operators/index.ts","node_modules/rxjs/_esm5/internal/operators/defaultIfEmpty.js","node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","node_modules/rxjs/_esm5/internal/operators/first.js","node_modules/rxjs/src/internal/operators/first.ts","node_modules/rxjs/_esm5/internal/operators/take.js","node_modules/rxjs/src/internal/operators/take.ts","node_modules/rxjs/_esm5/internal/operators/throwIfEmpty.js","node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","node_modules/rxjs/_esm5/internal/operators/ignoreElements.js","node_modules/rxjs/src/internal/operators/ignoreElements.ts","node_modules/rxjs/_esm5/internal/operators/multicast.js","node_modules/rxjs/src/internal/operators/multicast.ts","node_modules/rxjs/_esm5/internal/operators/share.js","node_modules/rxjs/src/internal/operators/share.ts","node_modules/rxjs/_esm5/internal/operators/tap.js","node_modules/rxjs/src/internal/operators/tap.ts","node_modules/@ledgerhq/hw-transport-web-ble/lib-es/monitorCharacteristic.js","node_modules/@ledgerhq/hw-transport-web-ble/src/monitorCharacteristic.js","node_modules/tonweb/src/contract/dns/index.js","node_modules/tonweb/src/contract/dns/Dns.js","node_modules/tonweb/src/contract/dns/DnsUtils.js","node_modules/tonweb/src/contract/dns/DnsCollection.js","node_modules/tonweb/src/contract/dns/DnsItem.js","node_modules/tonweb-mnemonic/dist/web/index.js","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/webpack/universalModuleDefinition","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/node_modules/tweetnacl/nacl-fast.js","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/webpack/bootstrap","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/webpack/runtime/compat get default export","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/webpack/runtime/define property getters","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/webpack/runtime/hasOwnProperty shorthand","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/webpack/runtime/make namespace object","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/src/crypto/crypto-web.ts","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/src/bip39-wordlists/english.ts","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/src/functions/common.ts","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/src/functions/is-password-needed.ts","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/src/functions/generate-mnemonic.ts","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/src/functions/mnemonic-to-seed.ts","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/src/functions/mnemonic-to-key-pair.ts","node_modules/tonweb-mnemonic/dist/web/webpack:/TonWeb.mnemonic/src/functions/validate-mnemonic.ts"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"488913bcef1b1901\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: mixed;\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData = undefined;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, acceptedAssets\n/*: {|[string]: boolean|} */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    acceptedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets);\n\n        for (var i = 0; i < assetsToAccept.length; i++) {\n          var id = assetsToAccept[i][1];\n\n          if (!acceptedAssets[id]) {\n            hmrAcceptRun(assetsToAccept[i][0], id);\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToAccept.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n}\n\nfunction hmrAcceptRun(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n  cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n\n  acceptedAssets[id] = true;\n}","// \"proud verify icon then cash odor security educate choice december earth symptom hole frame mirror approve fantasy surround degree future liar walk chair father\";\n\nimport TonWeb from \"tonweb\";\nimport TonMnemonic from \"tonweb-mnemonic\";\n  \nasync function createPaymentChannel() {\n\n  const providerUrl = 'https://testnet.toncenter.com/api/v2/jsonRPC'; // TON HTTP API url. Use this url for testnet\n  const apiKey = prompt(\"Enter your API key (you can get it by https://t.me/tontestnetapibot):\");\n\n  window.tonweb = new TonWeb(new TonWeb.HttpProvider(providerUrl, { apiKey })); // Initialize TON SDK\n\n  const mnemonicAString = prompt(\"Enter you testnet wallet mnemonic (e.g. apple orange ... banan\");\n  const mnemonicA = mnemonicAString.split(\" \");\n\n  const mnemonicB = [\n    \"cruel\", \n    \"enrich\",\n    \"eye\",\n    \"fade\",\n    \"state\",\n    \"sport\",\n    \"isolate\",\n    \"lemon\",\n    \"tired\",\n    \"front\",\n    \"dog\",\n    \"prison\",\n    \"cool\",\n    \"train\",\n    \"veteran\",\n    \"issue\",\n    \"profit\",\n    \"wall\",\n    \"actor\",\n    \"fatal\",\n    \"senior\",\n    \"dry\",\n    \"diary\",\n    \"donor\",\n  ];\n\n  window.keyPairA = await TonMnemonic.mnemonicToKeyPair(mnemonicA);\n  window.keyPairB = await TonMnemonic.mnemonicToKeyPair(mnemonicB);\n\n\n  const WalletClass = window.tonweb.wallet.all[\"v4R2\"];\n\n  window.walletA = new WalletClass(window.tonweb.provider, {\n      publicKey: keyPairA.publicKey,\n      wc: 0\n  });\n\n  window.walletB = new WalletClass(window.tonweb.provider, {\n    publicKey: keyPairB.publicKey,\n  });\n\n\n  const walletAddressA = await window.walletA.getAddress(); // address of this wallet in blockchain\n  console.log(\"walletAddressA: \", walletAddressA.toString(true, true, true));\n\n  const walletAddressB = await window.walletB.getAddress(); // address of this wallet in blockchain\n  console.log(\"walletAddressB: \", walletAddressB.toString(true, true, true));\n}\n\nwindow.onload(createPaymentChannel);","const utils = require(\"./utils\");\nconst Address = utils.Address;\nconst boc = require(\"./boc\");\nconst AppTon = require(\"./ledger/AppTon\");\nconst HttpProvider = require(\"./providers\").default;\nconst {Contract} = require(\"./contract\");\nconst Wallets = require(\"./contract/wallet\").default;\nconst LockupWallets = require(\"./contract/lockup\").default;\nconst NFT = require(\"./contract/token/nft\").default;\nconst JETTON = require(\"./contract/token/ft\").default;\nconst {BlockSubscription, InMemoryBlockStorage} = require(\"./providers/blockSubscription\");\nconst {SubscriptionContract} = require(\"./contract/subscription/index\");\nconst {Payments, PaymentChannel} = require(\"./contract/payments/index\");\nconst TransportWebUSB = require(\"@ledgerhq/hw-transport-webusb\").default;\nconst TransportWebHID = require(\"@ledgerhq/hw-transport-webhid\").default;\nconst BluetoothTransport = require(\"@ledgerhq/hw-transport-web-ble\").default;\nconst {Dns, DnsCollection, DnsItem} = require(\"./contract/dns\").default;\nconst version = '0.0.50';\n\nclass TonWeb {\n    constructor(provider) {\n        this.version = version;\n        this.utils = utils;\n        this.Address = Address;\n        this.boc = boc;\n        this.Contract = Contract;\n        this.BlockSubscription = BlockSubscription;\n        this.InMemoryBlockStorage = InMemoryBlockStorage;\n\n        this.provider = provider || new HttpProvider();\n        this.dns = new Dns(this.provider);\n        this.wallet = new Wallets(this.provider);\n        this.payments = new Payments(this.provider);\n        this.lockupWallet = LockupWallets;\n    }\n\n    /**\n     * Use this method to get transaction history of a given address.\n     * @param address   {Address | string}\n     * @param limit?    {number}\n     * @param lt?    {number}\n     * @param txhash?    {string}   in HEX\n     * @param to_lt?    {number}\n     * @return array of transaction objects\n     */\n    async getTransactions(address, limit = 20, lt = undefined, txhash = undefined, to_lt = undefined) {\n        return this.provider.getTransactions(address.toString(), limit, lt, txhash, to_lt);\n    };\n\n    /**\n     * @param address   {Address | string}\n     * @return {Promise<string>} - The current balance for the given address in nanograms.\n     */\n    async getBalance(address) {\n        return this.provider.getBalance(address.toString());\n    }\n\n    /**\n     * Use this method to send serialized boc file: fully packed and serialized external message.\n     * @param bytes {Uint8Array}\n     */\n    async sendBoc(bytes) {\n        return this.provider.sendBoc(utils.bytesToBase64(bytes));\n    }\n\n    /**\n     * Invoke get-method of smart contract\n     * @param address   {Address | string}    contract address\n     * @param method   {string | number}        method name or method id\n     * @param params?   Array of stack elements: [['num',3], ['cell', cell_object], ['slice', slice_object]]\n     */\n    async call(address, method, params = []) {\n        return this.provider.call(address.toString(), method, params);\n    }\n}\n\nTonWeb.version = version;\nTonWeb.utils = utils;\nTonWeb.Address = Address;\nTonWeb.boc = boc;\nTonWeb.HttpProvider = HttpProvider;\nTonWeb.Contract = Contract;\nTonWeb.Wallets = Wallets;\nTonWeb.LockupWallets = LockupWallets;\nTonWeb.SubscriptionContract = SubscriptionContract;\nTonWeb.BlockSubscription = BlockSubscription;\nTonWeb.InMemoryBlockStorage = InMemoryBlockStorage;\nTonWeb.ledger = {\n    TransportWebUSB,\n    TransportWebHID,\n    BluetoothTransport,\n    AppTon,\n};\nTonWeb.token = {\n    nft: NFT,\n    ft: JETTON,\n    jetton: JETTON,\n}\nTonWeb.dns = Dns;\nTonWeb.dns.DnsCollection = DnsCollection;\nTonWeb.dns.DnsItem = DnsItem;\nTonWeb.payments = Payments;\nTonWeb.payments.PaymentChannel = PaymentChannel;\n\nmodule.exports = TonWeb;\n","const {\n    BN,\n    nacl,\n    sha256,\n    fromNano,\n    toNano,\n    bytesToHex,\n    hexToBytes,\n    stringToBytes,\n    crc32c,\n    crc16,\n    concatBytes,\n    bytesToBase64,\n    base64ToBytes,\n    base64toString,\n    stringToBase64,\n    compareBytes,\n    readNBytesUIntFromArray,\n    keyPairFromSeed,\n    newKeyPair,\n    newSeed\n} = require(\"./Utils\");\n\nconst Address = require(\"./Address\").default;\n\n// ton://transfer/EQA0i8-CdGnF_DhUHHf92R1ONH6sIA9vLZ_WLcCIhfBBXwtG\n// ton://transfer/EQA0i8-CdGnF_DhUHHf92R1ONH6sIA9vLZ_WLcCIhfBBXwtG?amount=1000000000\n// ton://transfer/EQA0i8-CdGnF_DhUHHf92R1ONH6sIA9vLZ_WLcCIhfBBXwtG?amount=1000000000&text=data\n// ton://transfer/EQA0i8-CdGnF_DhUHHf92R1ONH6sIA9vLZ_WLcCIhfBBXwtG?amount=1000000000&text=foo%3A%2F%2Fbar%2C%2Fbaz%3Famount%3D1%26text%3D%D1%80%D1%83\n/**\n * @param url {string}\n * @return {{address: string, amount?: string, text?: string}}\n * @throws if invalid url\n */\nfunction parseTransferUrl(url) {\n    const PREFIX = 'ton://transfer/';\n\n    if (!url.startsWith(PREFIX)) {\n        throw new Error('must starts with ' + PREFIX);\n    }\n\n    const arr = url.substring(PREFIX.length).split('?');\n    if (arr.length > 2) {\n        throw new Error('multiple \"?\"');\n    }\n\n    const address = arr[0];\n    if (!Address.isValid(address)) {\n        throw new Error('invalid address format ' + address);\n    }\n    const result = {\n        address: address\n    };\n\n    const rest = arr[1];\n    if (rest && rest.length) {\n        const pairs = rest.split('&').map(s => s.split('='));\n\n        for (const pair of pairs) {\n            if (pair.length !== 2) throw new Error('invalid url pair');\n            const key = pair[0];\n            const value = pair[1];\n\n            if (key === 'amount') {\n                if (result.amount) {\n                    throw new Error('amount already set');\n                }\n                const bn = new BN(value);\n                if (bn.isNeg()) {\n                    throw new Error('negative amount');\n                }\n                result.amount = value;\n            } else if (key === 'text') {\n                if (result.text) {\n                    throw new Error('text already set');\n                }\n                result.text = decodeURIComponent(value);\n            } else {\n                throw new Error('unknown url var ' + key);\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * @param address   {string}\n * @param amount?    {string} in nano\n * @param text?   {string}\n * @return {string}\n */\nfunction formatTransferUrl(address, amount, text) {\n    let url = 'ton://transfer/' + address;\n\n    const params = [];\n\n    if (amount) {\n        params.push('amount=' + amount);\n    }\n    if (text) {\n        params.push('text=' + encodeURIComponent(text));\n    }\n\n    if (params.length === 0) return url;\n\n    return url + '?' + params.join('&');\n}\n\nmodule.exports = {\n    Address,\n    BN,\n    nacl,\n    sha256,\n    fromNano,\n    toNano,\n    bytesToHex,\n    hexToBytes,\n    stringToBytes,\n    crc32c,\n    crc16,\n    concatBytes,\n    bytesToBase64,\n    base64ToBytes,\n    base64toString,\n    stringToBase64,\n    compareBytes,\n    readNBytesUIntFromArray,\n    parseTransferUrl,\n    formatTransferUrl,\n    keyPairFromSeed,\n    newKeyPair,\n    newSeed\n};","const BN = require(\"bn.js\");\nconst nacl = require(\"tweetnacl\");\nconst ethunit = require(\"ethjs-unit\");\n\nconst isCryptoAvailable = typeof self !== 'undefined' && self.crypto && self.crypto.subtle;\n\nlet myCrypto = null;\n\nif (isCryptoAvailable) { // web\n    // nothing to do\n} else { // nodejs or react-native\n    myCrypto = require('isomorphic-webcrypto');\n}\n\n/**\n * @param bytes {Uint8Array}\n * @return  {Promise<ArrayBuffer>}\n */\nfunction sha256(bytes) {\n    if (isCryptoAvailable) { // web\n        return crypto.subtle.digest(\"SHA-256\", bytes);\n    } else {  // nodejs or react-native\n        return myCrypto.subtle.digest({name:\"SHA-256\"}, bytes);\n    }\n}\n\n/**\n * from coins to nanocoins\n * @param amount {BN | string}\n * @return {BN}\n */\nfunction toNano(amount) {\n    if (!BN.isBN(amount) && !(typeof amount === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n\n    return ethunit.toWei(amount, 'gwei');\n}\n\n/**\n * from nanocoins to coins\n * @param amount  {BN | string}\n * @return {string}\n */\nfunction fromNano(amount) {\n    if (!BN.isBN(amount) && !(typeof amount === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n\n    return ethunit.fromWei(amount, 'gwei');\n}\n\n// look up tables\nconst to_hex_array = [];\nconst to_byte_map = {};\nfor (let ord = 0; ord <= 0xff; ord++) {\n    let s = ord.toString(16);\n    if (s.length < 2) {\n        s = \"0\" + s;\n    }\n    to_hex_array.push(s);\n    to_byte_map[s] = ord;\n}\n\n//  converter using lookups\n/**\n * @param buffer  {Uint8Array}\n * @return {string}\n */\nfunction bytesToHex(buffer) {\n    const hex_array = [];\n    //(new Uint8Array(buffer)).forEach((v) => { hex_array.push(to_hex_array[v]) });\n    for (let i = 0; i < buffer.byteLength; i++) {\n        hex_array.push(to_hex_array[buffer[i]]);\n    }\n    return hex_array.join(\"\");\n}\n\n// reverse conversion using lookups\n/**\n * @param s {string}\n * @return {Uint8Array}\n */\nfunction hexToBytes(s) {\n    s = s.toLowerCase();\n    const length2 = s.length;\n    if (length2 % 2 !== 0) {\n        throw \"hex string must have length a multiple of 2\";\n    }\n    const length = length2 / 2;\n    const result = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n        const i2 = i * 2;\n        const b = s.substring(i2, i2 + 2);\n        if (!to_byte_map.hasOwnProperty(b)) throw new Error('invalid hex character ' + b);\n        result[i] = to_byte_map[b];\n    }\n    return result;\n}\n\n/**\n * @param str {string}\n * @param size  {number}\n * @return {Uint8Array}\n */\nfunction stringToBytes(str, size = 1) {\n    let buf;\n    let bufView;\n    if (size === 1) {\n        buf = new ArrayBuffer(str.length);\n        bufView = new Uint8Array(buf);\n    }\n    if (size === 2) {\n        buf = new ArrayBuffer(str.length * 2);\n        bufView = new Uint16Array(buf);\n    }\n    if (size === 4) {\n        buf = new ArrayBuffer(str.length * 4);\n        bufView = new Uint32Array(buf);\n    }\n    for (let i = 0, strLen = str.length; i < strLen; i++) {\n        bufView[i] = str.charCodeAt(i);\n    }\n    return new Uint8Array(bufView.buffer);\n}\n\n\n/**\n * @private\n * @param crc {number}\n * @param bytes {Uint8Array}\n * @return {number}\n */\nfunction _crc32c(crc, bytes) {\n    const POLY = 0x82f63b78;\n\n    crc ^= 0xffffffff;\n    for (let n = 0; n < bytes.length; n++) {\n        crc ^= bytes[n];\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n        crc = crc & 1 ? (crc >>> 1) ^ POLY : crc >>> 1;\n    }\n    return crc ^ 0xffffffff;\n}\n\n/**\n * @param bytes {Uint8Array}\n * @return {Uint8Array}\n */\nfunction crc32c(bytes) {\n    //Version suitable for crc32-c of BOC\n    const int_crc = _crc32c(0, bytes);\n    const arr = new ArrayBuffer(4);\n    const view = new DataView(arr);\n    view.setUint32(0, int_crc, false);\n    return new Uint8Array(arr).reverse();\n}\n\n/**\n * @param data  {ArrayLike<number>}\n * @return {Uint8Array}\n */\nfunction crc16(data) {\n    const poly = 0x1021;\n    let reg = 0;\n    const message = new Uint8Array(data.length + 2);\n    message.set(data);\n    for (let byte of message) {\n        let mask = 0x80;\n        while (mask > 0) {\n            reg <<= 1;\n            if (byte & mask) {\n                reg += 1;\n            }\n            mask >>= 1\n            if (reg > 0xffff) {\n                reg &= 0xffff;\n                reg ^= poly;\n            }\n        }\n    }\n    return new Uint8Array([Math.floor(reg / 256), reg % 256]);\n}\n\n/**\n * @param a {Uint8Array}\n * @param b {Uint8Array}\n * @return {Uint8Array}\n */\nfunction concatBytes(a, b) {\n    const c = new Uint8Array(a.length + b.length);\n    c.set(a);\n    c.set(b, a.length);\n    return c;\n}\n\n/**\n * @param a {Uint8Array}\n * @param b {Uint8Array}\n * @return {boolean}\n */\nfunction compareBytes(a, b) {\n    // TODO Make it smarter\n    return a.toString() === b.toString();\n}\n\nconst base64abc = (() => {\n    const abc = []\n    const A = \"A\".charCodeAt(0);\n    const a = \"a\".charCodeAt(0);\n    const n = \"0\".charCodeAt(0);\n    for (let i = 0; i < 26; ++i) {\n        abc.push(String.fromCharCode(A + i));\n    }\n    for (let i = 0; i < 26; ++i) {\n        abc.push(String.fromCharCode(a + i));\n    }\n    for (let i = 0; i < 10; ++i) {\n        abc.push(String.fromCharCode(n + i));\n    }\n    abc.push(\"+\");\n    abc.push(\"/\");\n    return abc;\n})();\n\n/**\n * @param bytes {Uint8Array}\n * @return {string}\n */\nfunction bytesToBase64(bytes) {\n    let result = \"\";\n    let i;\n    const l = bytes.length;\n    for (i = 2; i < l; i += 3) {\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n        result += base64abc[((bytes[i - 1] & 0x0f) << 2) | (bytes[i] >> 6)];\n        result += base64abc[bytes[i] & 0x3f];\n    }\n    if (i === l + 1) {\n        // 1 octet missing\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[(bytes[i - 2] & 0x03) << 4];\n        result += \"==\";\n    }\n    if (i === l) {\n        // 2 octets missing\n        result += base64abc[bytes[i - 2] >> 2];\n        result += base64abc[((bytes[i - 2] & 0x03) << 4) | (bytes[i - 1] >> 4)];\n        result += base64abc[(bytes[i - 1] & 0x0f) << 2];\n        result += \"=\";\n    }\n    return result;\n}\n\n// todo: base64 decoding process could ignore one extra character at the end of string and the byte-length check below won't be able to catch it.\nfunction base64toString(base64) {\n    if (typeof self === 'undefined') {\n        return Buffer.from(base64, 'base64').toString('binary'); // todo: (tolya-yanot) Buffer silently ignore incorrect base64 symbols, we need to throw error\n    } else {\n        return atob(base64);\n    }\n}\n\nfunction stringToBase64(s) {\n    if (typeof self === 'undefined') {\n        return Buffer.from(s, 'binary').toString('base64'); // todo: (tolya-yanot) Buffer silently ignore incorrect base64 symbols, we need to throw error\n    } else {\n        return btoa(s);\n    }\n}\n\n/**\n * @param base64  {string}\n * @return {Uint8Array}\n */\nfunction base64ToBytes(base64) {\n    const binary_string = base64toString(base64);\n    const len = binary_string.length;\n    const bytes = new Uint8Array(len);\n    for (let i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n}\n\n/**\n * @param n  {number}\n * @param ui8array  {Uint8Array}\n * @return {number}\n */\nfunction readNBytesUIntFromArray(n, ui8array) {\n    let res = 0;\n    for (let c = 0; c < n; c++) {\n        res *= 256;\n        res += ui8array[c];\n    }\n    return res;\n}\n\n/**\n * @param seed  {Uint8Array}\n * @returns {nacl.SignKeyPair}\n */\nfunction keyPairFromSeed(seed) {\n    return nacl.sign.keyPair.fromSeed(seed);\n}\n\n/**\n * @returns {nacl.SignKeyPair}\n */\nfunction newKeyPair() {\n    return nacl.sign.keyPair();\n}\n\n/**\n * @returns {Uint8Array}\n */\nfunction newSeed() {\n    return nacl.sign.keyPair().secretKey.slice(0, 32);\n}\n\nmodule.exports = {\n    BN,\n    nacl,\n    sha256,\n    fromNano,\n    toNano,\n    bytesToHex,\n    hexToBytes,\n    stringToBytes,\n    crc32c,\n    crc16,\n    concatBytes,\n    bytesToBase64,\n    base64ToBytes,\n    base64toString,\n    stringToBase64,\n    compareBytes,\n    readNBytesUIntFromArray,\n    keyPairFromSeed,\n    newKeyPair,\n    newSeed\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r._strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","'use strict';\n\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\n\nvar zero = new BN(0);\nvar negative1 = new BN(-1);\n\n// complete ethereum unit map\nvar unitMap = {\n  'noether': '0', // eslint-disable-line\n  'wei': '1', // eslint-disable-line\n  'kwei': '1000', // eslint-disable-line\n  'Kwei': '1000', // eslint-disable-line\n  'babbage': '1000', // eslint-disable-line\n  'femtoether': '1000', // eslint-disable-line\n  'mwei': '1000000', // eslint-disable-line\n  'Mwei': '1000000', // eslint-disable-line\n  'lovelace': '1000000', // eslint-disable-line\n  'picoether': '1000000', // eslint-disable-line\n  'gwei': '1000000000', // eslint-disable-line\n  'Gwei': '1000000000', // eslint-disable-line\n  'shannon': '1000000000', // eslint-disable-line\n  'nanoether': '1000000000', // eslint-disable-line\n  'nano': '1000000000', // eslint-disable-line\n  'szabo': '1000000000000', // eslint-disable-line\n  'microether': '1000000000000', // eslint-disable-line\n  'micro': '1000000000000', // eslint-disable-line\n  'finney': '1000000000000000', // eslint-disable-line\n  'milliether': '1000000000000000', // eslint-disable-line\n  'milli': '1000000000000000', // eslint-disable-line\n  'ether': '1000000000000000000', // eslint-disable-line\n  'kether': '1000000000000000000000', // eslint-disable-line\n  'grand': '1000000000000000000000', // eslint-disable-line\n  'mether': '1000000000000000000000000', // eslint-disable-line\n  'gether': '1000000000000000000000000000', // eslint-disable-line\n  'tether': '1000000000000000000000000000000' };\n\n/**\n * Returns value of unit in Wei\n *\n * @method getValueOfUnit\n * @param {String} unit the unit to convert to, default ether\n * @returns {BigNumber} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nfunction getValueOfUnit(unitInput) {\n  var unit = unitInput ? unitInput.toLowerCase() : 'ether';\n  var unitValue = unitMap[unit]; // eslint-disable-line\n\n  if (typeof unitValue !== 'string') {\n    throw new Error('[ethjs-unit] the unit provided ' + unitInput + ' doesn\\'t exists, please use the one of the following units ' + JSON.stringify(unitMap, null, 2));\n  }\n\n  return new BN(unitValue, 10);\n}\n\nfunction numberToString(arg) {\n  if (typeof arg === 'string') {\n    if (!arg.match(/^-?[0-9.]+$/)) {\n      throw new Error('while converting number to string, invalid number value \\'' + arg + '\\', should be a number matching (^-?[0-9.]+).');\n    }\n    return arg;\n  } else if (typeof arg === 'number') {\n    return String(arg);\n  } else if (typeof arg === 'object' && arg.toString && (arg.toTwos || arg.dividedToIntegerBy)) {\n    if (arg.toPrecision) {\n      return String(arg.toPrecision());\n    } else {\n      // eslint-disable-line\n      return arg.toString(10);\n    }\n  }\n  throw new Error('while converting number to string, invalid number value \\'' + arg + '\\' type ' + typeof arg + '.');\n}\n\nfunction fromWei(weiInput, unit, optionsInput) {\n  var wei = numberToBN(weiInput); // eslint-disable-line\n  var negative = wei.lt(zero); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n  var options = optionsInput || {};\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  var fraction = wei.mod(base).toString(10); // eslint-disable-line\n\n  while (fraction.length < baseLength) {\n    fraction = '0' + fraction;\n  }\n\n  if (!options.pad) {\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n  }\n\n  var whole = wei.div(base).toString(10); // eslint-disable-line\n\n  if (options.commify) {\n    whole = whole.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  var value = '' + whole + (fraction == '0' ? '' : '.' + fraction); // eslint-disable-line\n\n  if (negative) {\n    value = '-' + value;\n  }\n\n  return value;\n}\n\nfunction toWei(etherInput, unit) {\n  var ether = numberToString(etherInput); // eslint-disable-line\n  var base = getValueOfUnit(unit);\n  var baseLength = unitMap[unit].length - 1 || 1;\n\n  // Is it negative?\n  var negative = ether.substring(0, 1) === '-'; // eslint-disable-line\n  if (negative) {\n    ether = ether.substring(1);\n  }\n\n  if (ether === '.') {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, invalid value');\n  }\n\n  // Split it into a whole and fractional part\n  var comps = ether.split('.'); // eslint-disable-line\n  if (comps.length > 2) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei,  too many decimal points');\n  }\n\n  var whole = comps[0],\n      fraction = comps[1]; // eslint-disable-line\n\n  if (!whole) {\n    whole = '0';\n  }\n  if (!fraction) {\n    fraction = '0';\n  }\n  if (fraction.length > baseLength) {\n    throw new Error('[ethjs-unit] while converting number ' + etherInput + ' to wei, too many decimal places');\n  }\n\n  while (fraction.length < baseLength) {\n    fraction += '0';\n  }\n\n  whole = new BN(whole);\n  fraction = new BN(fraction);\n  var wei = whole.mul(base).add(fraction); // eslint-disable-line\n\n  if (negative) {\n    wei = wei.mul(negative1);\n  }\n\n  return new BN(wei.toString(10), 10);\n}\n\nmodule.exports = {\n  unitMap: unitMap,\n  numberToString: numberToString,\n  getValueOfUnit: getValueOfUnit,\n  fromWei: fromWei,\n  toWei: toWei\n};","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js');\nvar stripHexPrefix = require('strip-hex-prefix');\n\n/**\n * Returns a BN object, converts a number value to a BN\n * @param {String|Number|Object} `arg` input a string number, hex string number, number, BigNumber or BN object\n * @return {Object} `output` BN object of the number\n * @throws if the argument is not an array, object that isn't a bignumber, not a string number or number\n */\nmodule.exports = function numberToBN(arg) {\n  if (typeof arg === 'string' || typeof arg === 'number') {\n    var multiplier = new BN(1); // eslint-disable-line\n    var formattedString = String(arg).toLowerCase().trim();\n    var isHexPrefixed = formattedString.substr(0, 2) === '0x' || formattedString.substr(0, 3) === '-0x';\n    var stringArg = stripHexPrefix(formattedString); // eslint-disable-line\n    if (stringArg.substr(0, 1) === '-') {\n      stringArg = stripHexPrefix(stringArg.slice(1));\n      multiplier = new BN(-1, 10);\n    }\n    stringArg = stringArg === '' ? '0' : stringArg;\n\n    if ((!stringArg.match(/^-?[0-9]+$/) && stringArg.match(/^[0-9A-Fa-f]+$/))\n      || stringArg.match(/^[a-fA-F]+$/)\n      || (isHexPrefixed === true && stringArg.match(/^[0-9A-Fa-f]+$/))) {\n      return new BN(stringArg, 16).mul(multiplier);\n    }\n\n    if ((stringArg.match(/^-?[0-9]+$/) || stringArg === '') && isHexPrefixed === false) {\n      return new BN(stringArg, 10).mul(multiplier);\n    }\n  } else if (typeof arg === 'object' && arg.toString && (!arg.pop && !arg.push)) {\n    if (arg.toString(10).match(/^-?[0-9]+$/) && (arg.mul || arg.dividedToIntegerBy)) {\n      return new BN(arg.toString(10), 10);\n    }\n  }\n\n  throw new Error('[number-to-bn] while converting number ' + JSON.stringify(arg) + ' to BN.js instance, error: invalid number value. Value must be an integer, hex string, BN or BigNumber instance. Note, decimals are not supported.');\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buf' + 'fer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var isHexPrefixed = require('is-hex-prefixed');\n\n/**\n * Removes '0x' from a given `String` is present\n * @param {String} str the string value\n * @return {String|Optional} a string by pass if necessary\n */\nmodule.exports = function stripHexPrefix(str) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  return isHexPrefixed(str) ? str.slice(2) : str;\n}\n","/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param {String} str the string input value\n * @return {Boolean} a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nmodule.exports = function isHexPrefixed(str) {\n  if (typeof str !== 'string') {\n    throw new Error(\"[is-hex-prefixed] value must be type 'string', is currently type \" + (typeof str) + \", while checking isHexPrefixed.\");\n  }\n\n  return str.slice(0, 2) === '0x';\n}\n","import './webcrypto-shim.mjs'\nexport default window.crypto\n","/**\n * @file Web Cryptography API shim\n * @author Artem S Vybornov <vybornov@gmail.com>\n * @license MIT\n */\n(function (global, factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as an anonymous module.\n        define([], function () {\n            return factory(global);\n        });\n    } else if (typeof module === 'object' && module.exports) {\n        // CommonJS-like environments that support module.exports\n        module.exports = factory(global);\n    } else {\n        factory(global);\n    }\n}(typeof self !== 'undefined' ? self : this, function (global) {\n    'use strict';\n\n    if ( typeof Promise !== 'function' )\n        throw \"Promise support required\";\n\n    var _crypto = global.crypto || global.msCrypto;\n    if ( !_crypto ) return;\n\n    var _subtle = _crypto.subtle || _crypto.webkitSubtle;\n    if ( !_subtle ) return;\n\n    var _Crypto     = global.Crypto || _crypto.constructor || Object,\n        _SubtleCrypto = global.SubtleCrypto || _subtle.constructor || Object,\n        _CryptoKey  = global.CryptoKey || global.Key || Object;\n\n    var isEdge = global.navigator.userAgent.indexOf('Edge/') > -1;\n    var isIE    = !!global.msCrypto && !isEdge;\n    var isWebkit = !_crypto.subtle && !!_crypto.webkitSubtle;\n    if ( !isIE && !isWebkit ) return;\n\n    function s2a ( s ) {\n        return btoa(s).replace(/\\=+$/, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n    }\n\n    function a2s ( s ) {\n        s += '===', s = s.slice( 0, -s.length % 4 );\n        return atob( s.replace(/-/g, '+').replace(/_/g, '/') );\n    }\n\n    function s2b ( s ) {\n        var b = new Uint8Array(s.length);\n        for ( var i = 0; i < s.length; i++ ) b[i] = s.charCodeAt(i);\n        return b;\n    }\n\n    function b2s ( b ) {\n        if ( b instanceof ArrayBuffer ) b = new Uint8Array(b);\n        return String.fromCharCode.apply( String, b );\n    }\n\n    function alg ( a ) {\n        var r = { 'name': (a.name || a || '').toUpperCase().replace('V','v') };\n        switch ( r.name ) {\n            case 'SHA-1':\n            case 'SHA-256':\n            case 'SHA-384':\n            case 'SHA-512':\n                break;\n            case 'AES-CBC':\n            case 'AES-GCM':\n            case 'AES-KW':\n                if ( a.length ) r['length'] = a.length;\n                break;\n            case 'HMAC':\n                if ( a.hash ) r['hash'] = alg(a.hash);\n                if ( a.length ) r['length'] = a.length;\n                break;\n            case 'RSAES-PKCS1-v1_5':\n                if ( a.publicExponent ) r['publicExponent'] = new Uint8Array(a.publicExponent);\n                if ( a.modulusLength ) r['modulusLength'] = a.modulusLength;\n                break;\n            case 'RSASSA-PKCS1-v1_5':\n            case 'RSA-OAEP':\n                if ( a.hash ) r['hash'] = alg(a.hash);\n                if ( a.publicExponent ) r['publicExponent'] = new Uint8Array(a.publicExponent);\n                if ( a.modulusLength ) r['modulusLength'] = a.modulusLength;\n                break;\n            default:\n                throw new SyntaxError(\"Bad algorithm name\");\n        }\n        return r;\n    };\n\n    function jwkAlg ( a ) {\n        return {\n            'HMAC': {\n                'SHA-1': 'HS1',\n                'SHA-256': 'HS256',\n                'SHA-384': 'HS384',\n                'SHA-512': 'HS512',\n            },\n            'RSASSA-PKCS1-v1_5': {\n                'SHA-1': 'RS1',\n                'SHA-256': 'RS256',\n                'SHA-384': 'RS384',\n                'SHA-512': 'RS512',\n            },\n            'RSAES-PKCS1-v1_5': {\n                '': 'RSA1_5',\n            },\n            'RSA-OAEP': {\n                'SHA-1': 'RSA-OAEP',\n                'SHA-256': 'RSA-OAEP-256',\n            },\n            'AES-KW': {\n                '128': 'A128KW',\n                '192': 'A192KW',\n                '256': 'A256KW',\n            },\n            'AES-GCM': {\n                '128': 'A128GCM',\n                '192': 'A192GCM',\n                '256': 'A256GCM',\n            },\n            'AES-CBC': {\n                '128': 'A128CBC',\n                '192': 'A192CBC',\n                '256': 'A256CBC',\n            },\n        }[a.name][ ( a.hash || {} ).name || a.length || '' ];\n    }\n\n    function b2jwk ( k ) {\n        if ( k instanceof ArrayBuffer || k instanceof Uint8Array ) k = JSON.parse( decodeURIComponent( escape( b2s(k) ) ) );\n        var jwk = { 'kty': k.kty, 'alg': k.alg, 'ext': k.ext || k.extractable };\n        switch ( jwk.kty ) {\n            case 'oct':\n                jwk.k = k.k;\n            case 'RSA':\n                [ 'n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi', 'oth' ].forEach( function ( x ) { if ( x in k ) jwk[x] = k[x] } );\n                break;\n            default:\n                throw new TypeError(\"Unsupported key type\");\n        }\n        return jwk;\n    }\n\n    function jwk2b ( k ) {\n        var jwk = b2jwk(k);\n        if ( isIE ) jwk['extractable'] = jwk.ext, delete jwk.ext;\n        return s2b( unescape( encodeURIComponent( JSON.stringify(jwk) ) ) ).buffer;\n    }\n\n    function pkcs2jwk ( k ) {\n        var info = b2der(k), prv = false;\n        if ( info.length > 2 ) prv = true, info.shift(); // remove version from PKCS#8 PrivateKeyInfo structure\n        var jwk = { 'ext': true };\n        switch ( info[0][0] ) {\n            case '1.2.840.113549.1.1.1':\n                var rsaComp = [ 'n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi' ],\n                    rsaKey  = b2der( info[1] );\n                if ( prv ) rsaKey.shift(); // remove version from PKCS#1 RSAPrivateKey structure\n                for ( var i = 0; i < rsaKey.length; i++ ) {\n                    if ( !rsaKey[i][0] ) rsaKey[i] = rsaKey[i].subarray(1);\n                    jwk[ rsaComp[i] ] = s2a( b2s( rsaKey[i] ) );\n                }\n                jwk['kty'] = 'RSA';\n                break;\n            default:\n                throw new TypeError(\"Unsupported key type\");\n        }\n        return jwk;\n    }\n\n    function jwk2pkcs ( k ) {\n        var key, info = [ [ '', null ] ], prv = false;\n        switch ( k.kty ) {\n            case 'RSA':\n                var rsaComp = [ 'n', 'e', 'd', 'p', 'q', 'dp', 'dq', 'qi' ],\n                    rsaKey = [];\n                for ( var i = 0; i < rsaComp.length; i++ ) {\n                    if ( !( rsaComp[i] in k ) ) break;\n                    var b = rsaKey[i] = s2b( a2s( k[ rsaComp[i] ] ) );\n                    if ( b[0] & 0x80 ) rsaKey[i] = new Uint8Array(b.length + 1), rsaKey[i].set( b, 1 );\n                }\n                if ( rsaKey.length > 2 ) prv = true, rsaKey.unshift( new Uint8Array([0]) ); // add version to PKCS#1 RSAPrivateKey structure\n                info[0][0] = '1.2.840.113549.1.1.1';\n                key = rsaKey;\n                break;\n            default:\n                throw new TypeError(\"Unsupported key type\");\n        }\n        info.push( new Uint8Array( der2b(key) ).buffer );\n        if ( !prv ) info[1] = { 'tag': 0x03, 'value': info[1] };\n        else info.unshift( new Uint8Array([0]) ); // add version to PKCS#8 PrivateKeyInfo structure\n        return new Uint8Array( der2b(info) ).buffer;\n    }\n\n    var oid2str = { 'KoZIhvcNAQEB': '1.2.840.113549.1.1.1' },\n        str2oid = { '1.2.840.113549.1.1.1': 'KoZIhvcNAQEB' };\n\n    function b2der ( buf, ctx ) {\n        if ( buf instanceof ArrayBuffer ) buf = new Uint8Array(buf);\n        if ( !ctx ) ctx = { pos: 0, end: buf.length };\n\n        if ( ctx.end - ctx.pos < 2 || ctx.end > buf.length ) throw new RangeError(\"Malformed DER\");\n\n        var tag = buf[ctx.pos++],\n            len = buf[ctx.pos++];\n\n        if ( len >= 0x80 ) {\n            len &= 0x7f;\n            if ( ctx.end - ctx.pos < len ) throw new RangeError(\"Malformed DER\");\n            for ( var xlen = 0; len--; ) xlen <<= 8, xlen |= buf[ctx.pos++];\n            len = xlen;\n        }\n\n        if ( ctx.end - ctx.pos < len ) throw new RangeError(\"Malformed DER\");\n\n        var rv;\n\n        switch ( tag ) {\n            case 0x02: // Universal Primitive INTEGER\n                rv = buf.subarray( ctx.pos, ctx.pos += len );\n                break;\n            case 0x03: // Universal Primitive BIT STRING\n                if ( buf[ctx.pos++] ) throw new Error( \"Unsupported bit string\" );\n                len--;\n            case 0x04: // Universal Primitive OCTET STRING\n                rv = new Uint8Array( buf.subarray( ctx.pos, ctx.pos += len ) ).buffer;\n                break;\n            case 0x05: // Universal Primitive NULL\n                rv = null;\n                break;\n            case 0x06: // Universal Primitive OBJECT IDENTIFIER\n                var oid = btoa( b2s( buf.subarray( ctx.pos, ctx.pos += len ) ) );\n                if ( !( oid in oid2str ) ) throw new Error( \"Unsupported OBJECT ID \" + oid );\n                rv = oid2str[oid];\n                break;\n            case 0x30: // Universal Constructed SEQUENCE\n                rv = [];\n                for ( var end = ctx.pos + len; ctx.pos < end; ) rv.push( b2der( buf, ctx ) );\n                break;\n            default:\n                throw new Error( \"Unsupported DER tag 0x\" + tag.toString(16) );\n        }\n\n        return rv;\n    }\n\n    function der2b ( val, buf ) {\n        if ( !buf ) buf = [];\n\n        var tag = 0, len = 0,\n            pos = buf.length + 2;\n\n        buf.push( 0, 0 ); // placeholder\n\n        if ( val instanceof Uint8Array ) {  // Universal Primitive INTEGER\n            tag = 0x02, len = val.length;\n            for ( var i = 0; i < len; i++ ) buf.push( val[i] );\n        }\n        else if ( val instanceof ArrayBuffer ) { // Universal Primitive OCTET STRING\n            tag = 0x04, len = val.byteLength, val = new Uint8Array(val);\n            for ( var i = 0; i < len; i++ ) buf.push( val[i] );\n        }\n        else if ( val === null ) { // Universal Primitive NULL\n            tag = 0x05, len = 0;\n        }\n        else if ( typeof val === 'string' && val in str2oid ) { // Universal Primitive OBJECT IDENTIFIER\n            var oid = s2b( atob( str2oid[val] ) );\n            tag = 0x06, len = oid.length;\n            for ( var i = 0; i < len; i++ ) buf.push( oid[i] );\n        }\n        else if ( val instanceof Array ) { // Universal Constructed SEQUENCE\n            for ( var i = 0; i < val.length; i++ ) der2b( val[i], buf );\n            tag = 0x30, len = buf.length - pos;\n        }\n        else if ( typeof val === 'object' && val.tag === 0x03 && val.value instanceof ArrayBuffer ) { // Tag hint\n            val = new Uint8Array(val.value), tag = 0x03, len = val.byteLength;\n            buf.push(0); for ( var i = 0; i < len; i++ ) buf.push( val[i] );\n            len++;\n        }\n        else {\n            throw new Error( \"Unsupported DER value \" + val );\n        }\n\n        if ( len >= 0x80 ) {\n            var xlen = len, len = 4;\n            buf.splice( pos, 0, (xlen >> 24) & 0xff, (xlen >> 16) & 0xff, (xlen >> 8) & 0xff, xlen & 0xff );\n            while ( len > 1 && !(xlen >> 24) ) xlen <<= 8, len--;\n            if ( len < 4 ) buf.splice( pos, 4 - len );\n            len |= 0x80;\n        }\n\n        buf.splice( pos - 2, 2, tag, len );\n\n        return buf;\n    }\n\n    function CryptoKey ( key, alg, ext, use ) {\n        Object.defineProperties( this, {\n            _key: {\n                value: key\n            },\n            type: {\n                value: key.type,\n                enumerable: true,\n            },\n            extractable: {\n                value: (ext === undefined) ? key.extractable : ext,\n                enumerable: true,\n            },\n            algorithm: {\n                value: (alg === undefined) ? key.algorithm : alg,\n                enumerable: true,\n            },\n            usages: {\n                value: (use === undefined) ? key.usages : use,\n                enumerable: true,\n            },\n        });\n    }\n\n    function isPubKeyUse ( u ) {\n        return u === 'verify' || u === 'encrypt' || u === 'wrapKey';\n    }\n\n    function isPrvKeyUse ( u ) {\n        return u === 'sign' || u === 'decrypt' || u === 'unwrapKey';\n    }\n\n    [ 'generateKey', 'importKey', 'unwrapKey' ]\n        .forEach( function ( m ) {\n            var _fn = _subtle[m];\n\n            _subtle[m] = function ( a, b, c ) {\n                var args = [].slice.call(arguments),\n                    ka, kx, ku;\n\n                switch ( m ) {\n                    case 'generateKey':\n                        ka = alg(a), kx = b, ku = c;\n                        break;\n                    case 'importKey':\n                        ka = alg(c), kx = args[3], ku = args[4];\n                        if ( a === 'jwk' ) {\n                            b = b2jwk(b);\n                            if ( !b.alg ) b.alg = jwkAlg(ka);\n                            if ( !b.key_ops ) b.key_ops = ( b.kty !== 'oct' ) ? ( 'd' in b ) ? ku.filter(isPrvKeyUse) : ku.filter(isPubKeyUse) : ku.slice();\n                            args[1] = jwk2b(b);\n                        }\n                        break;\n                    case 'unwrapKey':\n                        ka = args[4], kx = args[5], ku = args[6];\n                        args[2] = c._key;\n                        break;\n                }\n\n                if ( m === 'generateKey' && ka.name === 'HMAC' && ka.hash ) {\n                    ka.length = ka.length || { 'SHA-1': 512, 'SHA-256': 512, 'SHA-384': 1024, 'SHA-512': 1024 }[ka.hash.name];\n                    return _subtle.importKey( 'raw', _crypto.getRandomValues( new Uint8Array( (ka.length+7)>>3 ) ), ka, kx, ku );\n                }\n\n                if ( isWebkit && m === 'generateKey' && ka.name === 'RSASSA-PKCS1-v1_5' && ( !ka.modulusLength || ka.modulusLength >= 2048 ) ) {\n                    a = alg(a), a.name = 'RSAES-PKCS1-v1_5', delete a.hash;\n                    return _subtle.generateKey( a, true, [ 'encrypt', 'decrypt' ] )\n                        .then( function ( k ) {\n                            return Promise.all([\n                                _subtle.exportKey( 'jwk', k.publicKey ),\n                                _subtle.exportKey( 'jwk', k.privateKey ),\n                            ]);\n                        })\n                        .then( function ( keys ) {\n                            keys[0].alg = keys[1].alg = jwkAlg(ka);\n                            keys[0].key_ops = ku.filter(isPubKeyUse), keys[1].key_ops = ku.filter(isPrvKeyUse);\n                            return Promise.all([\n                                _subtle.importKey( 'jwk', keys[0], ka, true, keys[0].key_ops ),\n                                _subtle.importKey( 'jwk', keys[1], ka, kx, keys[1].key_ops ),\n                            ]);\n                        })\n                        .then( function ( keys ) {\n                            return {\n                                publicKey: keys[0],\n                                privateKey: keys[1],\n                            };\n                        });\n                }\n\n                if ( ( isWebkit || ( isIE && ( ka.hash || {} ).name === 'SHA-1' ) )\n                        && m === 'importKey' && a === 'jwk' && ka.name === 'HMAC' && b.kty === 'oct' ) {\n                    return _subtle.importKey( 'raw', s2b( a2s(b.k) ), c, args[3], args[4] );\n                }\n\n                if ( isWebkit && m === 'importKey' && ( a === 'spki' || a === 'pkcs8' ) ) {\n                    return _subtle.importKey( 'jwk', pkcs2jwk(b), c, args[3], args[4] );\n                }\n\n                if ( isIE && m === 'unwrapKey' ) {\n                    return _subtle.decrypt( args[3], c, b )\n                        .then( function ( k ) {\n                            return _subtle.importKey( a, k, args[4], args[5], args[6] );\n                        });\n                }\n\n                var op;\n                try {\n                    op = _fn.apply( _subtle, args );\n                }\n                catch ( e ) {\n                    return Promise.reject(e);\n                }\n\n                if ( isIE ) {\n                    op = new Promise( function ( res, rej ) {\n                        op.onabort =\n                        op.onerror =    function ( e ) { rej(e)               };\n                        op.oncomplete = function ( r ) { res(r.target.result) };\n                    });\n                }\n\n                op = op.then( function ( k ) {\n                    if ( ka.name === 'HMAC' ) {\n                        if ( !ka.length ) ka.length = 8 * k.algorithm.length;\n                    }\n                    if ( ka.name.search('RSA') == 0 ) {\n                        if ( !ka.modulusLength ) ka.modulusLength = (k.publicKey || k).algorithm.modulusLength;\n                        if ( !ka.publicExponent ) ka.publicExponent = (k.publicKey || k).algorithm.publicExponent;\n                    }\n                    if ( k.publicKey && k.privateKey ) {\n                        k = {\n                            publicKey: new CryptoKey( k.publicKey, ka, kx, ku.filter(isPubKeyUse) ),\n                            privateKey: new CryptoKey( k.privateKey, ka, kx, ku.filter(isPrvKeyUse) ),\n                        };\n                    }\n                    else {\n                        k = new CryptoKey( k, ka, kx, ku );\n                    }\n                    return k;\n                });\n\n                return op;\n            }\n        });\n\n    [ 'exportKey', 'wrapKey' ]\n        .forEach( function ( m ) {\n            var _fn = _subtle[m];\n\n            _subtle[m] = function ( a, b, c ) {\n                var args = [].slice.call(arguments);\n\n                switch ( m ) {\n                    case 'exportKey':\n                        args[1] = b._key;\n                        break;\n                    case 'wrapKey':\n                        args[1] = b._key, args[2] = c._key;\n                        break;\n                }\n\n                if ( ( isWebkit || ( isIE && ( b.algorithm.hash || {} ).name === 'SHA-1' ) )\n                        && m === 'exportKey' && a === 'jwk' && b.algorithm.name === 'HMAC' ) {\n                    args[0] = 'raw';\n                }\n\n                if ( isWebkit && m === 'exportKey' && ( a === 'spki' || a === 'pkcs8' ) ) {\n                    args[0] = 'jwk';\n                }\n\n                if ( isIE && m === 'wrapKey' ) {\n                    return _subtle.exportKey( a, b )\n                        .then( function ( k ) {\n                            if ( a === 'jwk' ) k = s2b( unescape( encodeURIComponent( JSON.stringify( b2jwk(k) ) ) ) );\n                            return  _subtle.encrypt( args[3], c, k );\n                        });\n                }\n\n                var op;\n                try {\n                    op = _fn.apply( _subtle, args );\n                }\n                catch ( e ) {\n                    return Promise.reject(e);\n                }\n\n                if ( isIE ) {\n                    op = new Promise( function ( res, rej ) {\n                        op.onabort =\n                        op.onerror =    function ( e ) { rej(e)               };\n                        op.oncomplete = function ( r ) { res(r.target.result) };\n                    });\n                }\n\n                if ( m === 'exportKey' && a === 'jwk' ) {\n                    op = op.then( function ( k ) {\n                        if ( ( isWebkit || ( isIE && ( b.algorithm.hash || {} ).name === 'SHA-1' ) )\n                                && b.algorithm.name === 'HMAC') {\n                            return { 'kty': 'oct', 'alg': jwkAlg(b.algorithm), 'key_ops': b.usages.slice(), 'ext': true, 'k': s2a( b2s(k) ) };\n                        }\n                        k = b2jwk(k);\n                        if ( !k.alg ) k['alg'] = jwkAlg(b.algorithm);\n                        if ( !k.key_ops ) k['key_ops'] = ( b.type === 'public' ) ? b.usages.filter(isPubKeyUse) : ( b.type === 'private' ) ? b.usages.filter(isPrvKeyUse) : b.usages.slice();\n                        return k;\n                    });\n                }\n\n                if ( isWebkit && m === 'exportKey' && ( a === 'spki' || a === 'pkcs8' ) ) {\n                    op = op.then( function ( k ) {\n                        k = jwk2pkcs( b2jwk(k) );\n                        return k;\n                    });\n                }\n\n                return op;\n            }\n        });\n\n    [ 'encrypt', 'decrypt', 'sign', 'verify' ]\n        .forEach( function ( m ) {\n            var _fn = _subtle[m];\n\n            _subtle[m] = function ( a, b, c, d ) {\n                if ( isIE && ( !c.byteLength || ( d && !d.byteLength ) ) )\n                    throw new Error(\"Empy input is not allowed\");\n\n                var args = [].slice.call(arguments),\n                    ka = alg(a);\n\n                if ( isIE && m === 'decrypt' && ka.name === 'AES-GCM' ) {\n                    var tl = a.tagLength >> 3;\n                    args[2] = (c.buffer || c).slice( 0, c.byteLength - tl ),\n                    a.tag = (c.buffer || c).slice( c.byteLength - tl );\n                }\n\n                args[1] = b._key;\n\n                var op;\n                try {\n                    op = _fn.apply( _subtle, args );\n                }\n                catch ( e ) {\n                    return Promise.reject(e);\n                }\n\n                if ( isIE ) {\n                    op = new Promise( function ( res, rej ) {\n                        op.onabort =\n                        op.onerror = function ( e ) {\n                            rej(e);\n                        };\n\n                        op.oncomplete = function ( r ) {\n                            var r = r.target.result;\n\n                            if ( m === 'encrypt' && r instanceof AesGcmEncryptResult ) {\n                                var c = r.ciphertext, t = r.tag;\n                                r = new Uint8Array( c.byteLength + t.byteLength );\n                                r.set( new Uint8Array(c), 0 );\n                                r.set( new Uint8Array(t), c.byteLength );\n                                r = r.buffer;\n                            }\n\n                            res(r);\n                        };\n                    });\n                }\n\n                return op;\n            }\n        });\n\n    if ( isIE ) {\n        var _digest = _subtle.digest;\n\n        _subtle['digest'] = function ( a, b ) {\n            if ( !b.byteLength )\n                throw new Error(\"Empy input is not allowed\");\n\n            var op;\n            try {\n                op = _digest.call( _subtle, a, b );\n            }\n            catch ( e ) {\n                return Promise.reject(e);\n            }\n\n            op = new Promise( function ( res, rej ) {\n                op.onabort =\n                op.onerror =    function ( e ) { rej(e)               };\n                op.oncomplete = function ( r ) { res(r.target.result) };\n            });\n\n            return op;\n        };\n\n        global.crypto = Object.create( _crypto, {\n            getRandomValues: { value: function ( a ) { return _crypto.getRandomValues(a) } },\n            subtle:          { value: _subtle },\n        });\n\n        global.CryptoKey = CryptoKey;\n    }\n\n    if ( isWebkit ) {\n        _crypto.subtle = _subtle;\n\n        global.Crypto = _Crypto;\n        global.SubtleCrypto = _SubtleCrypto;\n        global.CryptoKey = CryptoKey;\n    }\n}));\n\n export default {} // section modified by isomorphic-webcrypto build \n","const {crc16, hexToBytes, bytesToHex, stringToBytes, base64toString, stringToBase64} = require(\"./Utils\");\n\nconst bounceable_tag = 0x11;\nconst non_bounceable_tag = 0x51;\nconst test_flag = 0x80;\n\n/**\n * @private\n * @param addressString {string}\n * @return {{isTestOnly: boolean, workchain: number, hashPart: Uint8Array, isBounceable: boolean}}\n */\nfunction parseFriendlyAddress(addressString) {\n    if (addressString.length !== 48) {\n        throw new Error(`User-friendly address should contain strictly 48 characters`);\n    }\n    const data = stringToBytes(base64toString(addressString));\n    if (data.length !== 36) { // 1byte tag + 1byte workchain + 32 bytes hash + 2 byte crc\n        throw \"Unknown address type: byte length is not equal to 36\";\n    }\n    const addr = data.slice(0, 34);\n    const crc = data.slice(34, 36);\n    const calcedCrc = crc16(addr);\n    if (!(calcedCrc[0] === crc[0] && calcedCrc[1] === crc[1])) {\n        throw \"Wrong crc16 hashsum\";\n    }\n    let tag = addr[0];\n    let isTestOnly = false;\n    let isBounceable = false;\n    if (tag & test_flag) {\n        isTestOnly = true;\n        tag = tag ^ test_flag;\n    }\n    if ((tag !== bounceable_tag) && (tag !== non_bounceable_tag))\n        throw \"Unknown address tag\";\n\n    isBounceable = tag === bounceable_tag;\n\n    let workchain = null;\n    if (addr[1] === 0xff) { // TODO we should read signed integer here\n        workchain = -1;\n    } else {\n        workchain = addr[1];\n    }\n    if (workchain !== 0 && workchain !== -1) throw new Error('Invalid address wc ' + workchain);\n\n    const hashPart = addr.slice(2, 34);\n    return {isTestOnly, isBounceable, workchain, hashPart};\n}\n\nclass Address {\n    /**\n     * @param anyForm {string | Address}\n     */\n    static isValid(anyForm) {\n        try {\n            new Address(anyForm);\n            return true;\n        } catch (e) {\n            return false;\n        }\n    }\n\n    /**\n     * @param anyForm {string | Address}\n     */\n    constructor(anyForm) {\n        if (anyForm == null) {\n            throw \"Invalid address\";\n        }\n\n        if (anyForm instanceof Address) {\n            this.wc = anyForm.wc;\n            this.hashPart = anyForm.hashPart;\n            this.isTestOnly = anyForm.isTestOnly;\n            this.isUserFriendly = anyForm.isUserFriendly;\n            this.isBounceable = anyForm.isBounceable;\n            this.isUrlSafe = anyForm.isUrlSafe;\n            return;\n        }\n\n        if (anyForm.search(/\\-/) > 0 || anyForm.search(/_/) > 0) {\n            this.isUrlSafe = true;\n            anyForm = anyForm.replace(/\\-/g, '+').replace(/_/g, '\\/');\n        } else {\n            this.isUrlSafe = false;\n        }\n        if (anyForm.indexOf(':') > -1) {\n            const arr = anyForm.split(':');\n            if (arr.length !== 2) throw new Error('Invalid address ' + anyForm);\n            const wc = parseInt(arr[0]);\n            if (wc !== 0 && wc !== -1) throw new Error('Invalid address wc ' + anyForm);\n            const hex = arr[1];\n            if (hex.length !== 64) throw new Error('Invalid address hex ' + anyForm);\n            this.isUserFriendly = false;\n            this.wc = wc;\n            this.hashPart = hexToBytes(hex);\n            this.isTestOnly = false;\n            this.isBounceable = false;\n        } else {\n            this.isUserFriendly = true;\n            const parseResult = parseFriendlyAddress(anyForm);\n            this.wc = parseResult.workchain;\n            this.hashPart = parseResult.hashPart;\n            this.isTestOnly = parseResult.isTestOnly;\n            this.isBounceable = parseResult.isBounceable;\n        }\n    }\n\n    /**\n     * @param isUserFriendly? {boolean}\n     * @param isUrlSafe? {boolean}\n     * @param isBounceable? {boolean}\n     * @param isTestOnly? {boolean}\n     * @return {string}\n     */\n    toString(isUserFriendly,\n             isUrlSafe,\n             isBounceable,\n             isTestOnly) {\n\n        if (isUserFriendly === undefined) isUserFriendly = this.isUserFriendly;\n        if (isUrlSafe === undefined) isUrlSafe = this.isUrlSafe;\n        if (isBounceable === undefined) isBounceable = this.isBounceable;\n        if (isTestOnly === undefined) isTestOnly = this.isTestOnly;\n\n        if (!isUserFriendly) {\n            return this.wc + \":\" + bytesToHex(this.hashPart);\n        } else {\n            let tag = isBounceable ? bounceable_tag : non_bounceable_tag;\n            if (isTestOnly) {\n                tag |= test_flag;\n            }\n\n            const addr = new Int8Array(34);\n            addr[0] = tag;\n            addr[1] = this.wc;\n            addr.set(this.hashPart, 2);\n\n            const addressWithChecksum = new Uint8Array(36);\n            addressWithChecksum.set(addr);\n            addressWithChecksum.set(crc16(addr), 34);\n            let addressBase64 = stringToBase64(String.fromCharCode.apply(null, new Uint8Array(addressWithChecksum)));\n\n            if (isUrlSafe) {\n                addressBase64 = addressBase64.replace(/\\+/g, '-').replace(/\\//g, '_');\n            }\n            return addressBase64;\n        }\n    }\n}\n\nmodule.exports.default = Address;\n","const {BitString} = require(\"./BitString\");\nconst {Cell} = require(\"./Cell\");\n\nmodule.exports = {BitString, Cell};","const {BN, bytesToHex} = require(\"../utils\");\n\nclass BitString {\n    /**\n     * @param length {number}    length of BitString in bits\n     */\n    constructor(length) {\n        this.array = Uint8Array.from({length: Math.ceil(length / 8)}, () => 0);\n        this.cursor = 0;\n        this.length = length;\n    }\n\n    /**\n     * @return {number}\n     */\n    getFreeBits() {\n        return this.length - this.cursor;\n    }\n\n    /**\n     * @return {number}\n     */\n    getUsedBits() {\n        return this.cursor;\n    }\n\n    /**\n     * @return {number}\n     */\n    getUsedBytes() {\n        return Math.ceil(this.cursor / 8);\n    }\n\n    /**\n     * @param n {number}\n     * @return {boolean}    bit value at position `n`\n     */\n    get(n) {\n        return (this.array[(n / 8) | 0] & (1 << (7 - (n % 8)))) > 0;\n    }\n\n    /**\n     * @private\n     * @param n {number}\n     */\n    checkRange(n) {\n        if (n > this.length) {\n            throw Error(\"BitString overflow\");\n        }\n    }\n\n    /**\n     * Set bit value to 1 at position `n`\n     * @param n {number}\n     */\n    on(n) {\n        this.checkRange(n);\n        this.array[(n / 8) | 0] |= 1 << (7 - (n % 8));\n    }\n\n    /**\n     * Set bit value to 0 at position `n`\n     * @param n {number}\n     */\n    off(n) {\n        this.checkRange(n);\n        this.array[(n / 8) | 0] &= ~(1 << (7 - (n % 8)));\n    }\n\n    /**\n     * Toggle bit value at position `n`\n     * @param n {number}\n     */\n    toggle(n) {\n        this.checkRange(n);\n        this.array[(n / 8) | 0] ^= 1 << (7 - (n % 8));\n    }\n\n    /**\n     * forEach every bit\n     * @param callback  {function(boolean): void}\n     */\n    forEach(callback) {\n        const max = this.cursor;\n        for (let x = 0; x < max; x++) {\n            callback(this.get(x));\n        }\n    }\n\n    /**\n     * Write bit and increase cursor\n     * @param b  {boolean | number}\n     */\n    writeBit(b) {\n        if (b && b > 0) {\n            this.on(this.cursor);\n        } else {\n            this.off(this.cursor);\n        }\n        this.cursor = this.cursor + 1;\n    }\n\n    /**\n     * @param ba  {Array<boolean | number>}\n     */\n    writeBitArray(ba) {\n        for (let i = 0; i < ba.length; i++) {\n            this.writeBit(ba[i]);\n        }\n    }\n\n    /**\n     * Write unsigned int\n     * @param number  {number | BN}\n     * @param bitLength  {number}  size of uint in bits\n     */\n    writeUint(number, bitLength) {\n        number = new BN(number);\n        if (\n            bitLength == 0 ||\n            (number.toString(2).length > bitLength)\n        ) {\n            if (number == 0) return;\n            throw Error(\"bitLength is too small for number, got number=\" + number + \",bitLength=\" + bitLength);\n        }\n        const s = number.toString(2, bitLength);\n        for (let i = 0; i < bitLength; i++) {\n            this.writeBit(s[i] == 1);\n        }\n    }\n\n    /**\n     * Write signed int\n     * @param number  {number | BN}\n     * @param bitLength  {number}  size of int in bits\n     */\n    writeInt(number, bitLength) {\n        number = new BN(number);\n        if (bitLength == 1) {\n            if (number == -1) {\n                this.writeBit(true);\n                return;\n            }\n            if (number == 0) {\n                this.writeBit(false);\n                return;\n            }\n            throw Error(\"Bitlength is too small for number\");\n        } else {\n            if (number.isNeg()) {\n                this.writeBit(true);\n                const b = new BN(2);\n                const nb = b.pow(new BN(bitLength - 1));\n                this.writeUint(nb.add(number), bitLength - 1);\n            } else {\n                this.writeBit(false);\n                this.writeUint(number, bitLength - 1);\n            }\n        }\n    }\n\n    /**\n     * Write unsigned 8-bit int\n     * @param ui8 {number}\n     */\n    writeUint8(ui8) {\n        this.writeUint(ui8, 8);\n    }\n\n    /**\n     * Write array of unsigned 8-bit ints\n     * @param ui8 {Uint8Array}\n     */\n    writeBytes(ui8) {\n        for (let i = 0; i < ui8.length; i++) {\n            this.writeUint8(ui8[i]);\n        }\n    }\n\n    /**\n     * Write UTF-8 string\n     *\n     * @param value {string}\n     */\n    writeString(value) {\n        this.writeBytes(\n            new TextEncoder().encode(value)\n        );\n    }\n\n    /**\n     * @param amount  {number | BN} in nanograms\n     */\n    writeGrams(amount) {\n        if (amount == 0) {\n            this.writeUint(0, 4);\n        } else {\n            amount = new BN(amount);\n            const l = Math.ceil((amount.toString(16).length) / 2);\n            this.writeUint(l, 4);\n            this.writeUint(amount, l * 8);\n        }\n    }\n\n\n    /**\n     * @param amount  {number | BN} in nanotons\n     */\n    writeCoins(amount) {\n        this.writeGrams(amount);\n    }\n\n    //addr_none$00 = MsgAddressExt;\n    //addr_std$10 anycast:(Maybe Anycast)\n    // workchain_id:int8 address:uint256 = MsgAddressInt;\n    /**\n     * @param address {Address | null}\n     */\n    writeAddress(address) {\n        if (address == null) {\n            this.writeUint(0, 2);\n        } else {\n            this.writeUint(2, 2);\n            this.writeUint(0, 1); // TODO split addresses (anycast)\n            this.writeInt(address.wc, 8);\n            this.writeBytes(address.hashPart);\n        }\n    }\n\n    /**\n     * write another BitString to this BitString\n     * @param anotherBitString  {BitString}\n     */\n    writeBitString(anotherBitString) {\n        anotherBitString.forEach(x => {\n            this.writeBit(x);\n        });\n    }\n\n    clone() {\n        const result = new BitString(0);\n        result.array = this.array.slice(0);\n        result.length = this.length\n        result.cursor = this.cursor;\n        return result;\n    }\n\n    /**\n     * @return {string} hex\n     */\n    toString() {\n        return this.toHex();\n    }\n\n    /**\n     * @return {Uint8Array}\n     */\n    getTopUppedArray() {\n        const ret = this.clone();\n\n        let tu = Math.ceil(ret.cursor / 8) * 8 - ret.cursor;\n        if (tu > 0) {\n            tu = tu - 1;\n            ret.writeBit(true);\n            while (tu > 0) {\n                tu = tu - 1;\n                ret.writeBit(false);\n            }\n        }\n        ret.array = ret.array.slice(0, Math.ceil(ret.cursor / 8));\n        return ret.array;\n    }\n\n    /**\n     * like Fift\n     * @return {string}\n     */\n    toHex() {\n        if (this.cursor % 4 === 0) {\n            const s = bytesToHex(this.array.slice(0, Math.ceil(this.cursor / 8))).toUpperCase();\n            if (this.cursor % 8 === 0) {\n                return s;\n            } else {\n                return s.substr(0, s.length - 1);\n            }\n        } else {\n            const temp = this.clone();\n            temp.writeBit(1);\n            while (temp.cursor % 4 !== 0) {\n                temp.writeBit(0);\n            }\n            const hex = temp.toHex().toUpperCase();\n            return hex + '_';\n        }\n    }\n\n    /**\n     * set this cell data to match provided topUppedArray\n     * @param array  {Uint8Array}\n     * @param fullfilledBytes  {boolean}\n     */\n    setTopUppedArray(array, fullfilledBytes = true) {\n        this.length = array.length * 8;\n        this.array = array;\n        this.cursor = this.length;\n        if (fullfilledBytes || !this.length) {\n            return;\n        } else {\n            let foundEndBit = false;\n            for (let c = 0; c < 7; c++) {\n                this.cursor -= 1;\n                if (this.get(this.cursor)) {\n                    foundEndBit = true;\n                    this.off(this.cursor);\n                    break;\n                }\n            }\n            if (!foundEndBit) {\n                console.log(array, fullfilledBytes);\n                throw new Error(\"Incorrect TopUppedArray\");\n            }\n        }\n    }\n}\n\nmodule.exports = {BitString};\n","const {BitString} = require(\"./BitString\");\nconst {\n    bytesToBase64,\n    compareBytes,\n    concatBytes,\n    crc32c,\n    hexToBytes,\n    readNBytesUIntFromArray,\n    sha256,\n    bytesToHex\n} = require(\"../utils\");\n\nconst reachBocMagicPrefix = hexToBytes('B5EE9C72');\nconst leanBocMagicPrefix = hexToBytes('68ff65f3');\nconst leanBocMagicPrefixCRC = hexToBytes('acc3a728');\n\nclass Cell {\n    constructor() {\n        this.bits = new BitString(1023);\n        this.refs = [];\n        this.isExotic = false;\n    }\n\n    /**\n     * @param serializedBoc  {string | Uint8Array} hex or bytearray\n     * @return {Cell[]} root cells\n     */\n    static fromBoc(serializedBoc) {\n        return deserializeBoc(serializedBoc);\n    }\n\n    /**\n     * @param serializedBoc  {string | Uint8Array} hex or bytearray\n     * @return {Cell} root cell\n     */\n    static oneFromBoc(serializedBoc) {\n        const cells = deserializeBoc(serializedBoc);\n        if (cells.length !== 1) throw new Error('expected 1 root cell but have ' + cells.length);\n        return cells[0];\n    }\n\n    /**\n     * Write another cell to this cell\n     * @param anotherCell  {Cell}\n     */\n    writeCell(anotherCell) {\n        // XXX we do not check that there are anough place in cell\n        this.bits.writeBitString(anotherCell.bits);\n        this.refs = this.refs.concat(anotherCell.refs);\n    }\n\n    /**\n     * @return {number}\n     */\n    getMaxLevel() {\n        //TODO level calculation differ for exotic cells\n        let maxLevel = 0;\n        for (let k in this.refs) {\n            const i = this.refs[k];\n            if (i.getMaxLevel() > maxLevel) {\n                maxLevel = i.getMaxLevel();\n            }\n        }\n        return maxLevel;\n    }\n\n    /**\n     * @return {number}\n     */\n    isExplicitlyStoredHashes() {\n        return 0;\n    }\n\n    /**\n     * @return {number}\n     */\n    getMaxDepth() {\n        let maxDepth = 0;\n        if (this.refs.length > 0) {\n            for (let k in this.refs) {\n                const i = this.refs[k];\n                if (i.getMaxDepth() > maxDepth) {\n                    maxDepth = i.getMaxDepth();\n                }\n            }\n            maxDepth = maxDepth + 1;\n        }\n        return maxDepth;\n    }\n\n    /**\n     * @private\n     * @return {Uint8Array}\n     */\n    getMaxDepthAsArray() {\n        const maxDepth = this.getMaxDepth();\n        const d = Uint8Array.from({length: 2}, () => 0);\n        d[1] = maxDepth % 256;\n        d[0] = Math.floor(maxDepth / 256);\n        return d;\n    }\n\n    /**\n     * @return {Uint8Array}\n     */\n    getRefsDescriptor() {\n        const d1 = Uint8Array.from({length: 1}, () => 0);\n        d1[0] = this.refs.length + this.isExotic * 8 + this.getMaxLevel() * 32;\n        return d1;\n    }\n\n    /**\n     * @return {Uint8Array}\n     */\n    getBitsDescriptor() {\n        const d2 = Uint8Array.from({length: 1}, () => 0);\n        d2[0] = Math.ceil(this.bits.cursor / 8) + Math.floor(this.bits.cursor / 8);\n        return d2;\n    }\n\n    /**\n     * @return {Uint8Array}\n     */\n    getDataWithDescriptors() {\n        const d1 = this.getRefsDescriptor();\n        const d2 = this.getBitsDescriptor();\n        const tuBits = this.bits.getTopUppedArray();\n        return concatBytes(concatBytes(d1, d2), tuBits);\n    }\n\n    /**\n     * @return {Promise<Uint8Array>}\n     */\n    async getRepr() {\n        const reprArray = [];\n\n        reprArray.push(this.getDataWithDescriptors());\n        for (let k in this.refs) {\n            const i = this.refs[k];\n            reprArray.push(i.getMaxDepthAsArray());\n        }\n        for (let k in this.refs) {\n            const i = this.refs[k];\n            reprArray.push(await i.hash());\n        }\n        let x = new Uint8Array();\n        for (let k in reprArray) {\n            const i = reprArray[k];\n            x = concatBytes(x, i);\n        }\n        return x;\n    }\n\n    /**\n     * @return {Promise<Uint8Array>}\n     */\n    async hash() {\n        return new Uint8Array(\n            await sha256(await this.getRepr())\n        );\n    }\n\n    /**\n     * Recursively prints cell's content like Fift\n     * @return  {string}\n     */\n    print(indent) {\n        indent = indent || '';\n        let s = indent + 'x{' + this.bits.toHex() + '}\\n';\n        for (let k in this.refs) {\n            const i = this.refs[k];\n            s += i.print(indent + ' ');\n        }\n        return s;\n    }\n\n    //serialized_boc#b5ee9c72 has_idx:(## 1) has_crc32c:(## 1)\n    //  has_cache_bits:(## 1) flags:(## 2) { flags = 0 }\n    //  size:(## 3) { size <= 4 }\n    //  off_bytes:(## 8) { off_bytes <= 8 }\n    //  cells:(##(size * 8))\n    //  roots:(##(size * 8)) { roots >= 1 }\n    //  absent:(##(size * 8)) { roots + absent <= cells }\n    //  tot_cells_size:(##(off_bytes * 8))\n    //  root_list:(roots * ##(size * 8))\n    //  index:has_idx?(cells * ##(off_bytes * 8))\n    //  cell_data:(tot_cells_size * [ uint8 ])\n    //  crc32c:has_crc32c?uint32\n    // = BagOfCells;\n    /**\n     * create boc bytearray\n     * @param has_idx? {boolean}\n     * @param hash_crc32?  {boolean}\n     * @param has_cache_bits?  {boolean}\n     * @param flags? {number}\n     * @return {Promise<Uint8Array>}\n     */\n    async toBoc(has_idx = true, hash_crc32 = true, has_cache_bits = false, flags = 0) {\n        const root_cell = this;\n\n        const allcells = await root_cell.treeWalk();\n        const topologicalOrder = allcells[0];\n        const cellsIndex = allcells[1];\n\n        const cells_num = topologicalOrder.length;\n        const s = cells_num.toString(2).length; // Minimal number of bits to represent reference (unused?)\n        const s_bytes = Math.min(Math.ceil(s / 8), 1);\n        let full_size = 0;\n        let sizeIndex = [];\n        for (let cell_info of topologicalOrder) {\n            //TODO it should be async map or async for\n            sizeIndex.push(full_size);\n            full_size = full_size + await cell_info[1].bocSerializationSize(cellsIndex, s_bytes);\n        }\n        const offset_bits = full_size.toString(2).length; // Minimal number of bits to offset/len (unused?)\n        const offset_bytes = Math.max(Math.ceil(offset_bits / 8), 1);\n\n        const serialization = new BitString((1023 + 32 * 4 + 32 * 3) * topologicalOrder.length);\n        serialization.writeBytes(reachBocMagicPrefix);\n        serialization.writeBitArray([has_idx, hash_crc32, has_cache_bits]);\n        serialization.writeUint(flags, 2);\n        serialization.writeUint(s_bytes, 3);\n        serialization.writeUint8(offset_bytes);\n        serialization.writeUint(cells_num, s_bytes * 8);\n        serialization.writeUint(1, s_bytes * 8); // One root for now\n        serialization.writeUint(0, s_bytes * 8); // Complete BOCs only\n        serialization.writeUint(full_size, offset_bytes * 8);\n        serialization.writeUint(0, s_bytes * 8); // Root shoulh have index 0\n        if (has_idx) {\n            topologicalOrder.forEach(\n                (cell_data, index) =>\n                    serialization.writeUint(sizeIndex[index], offset_bytes * 8));\n        }\n        for (let cell_info of topologicalOrder) {\n            //TODO it should be async map or async for\n            const refcell_ser = await cell_info[1].serializeForBoc(cellsIndex, s_bytes);\n            serialization.writeBytes(refcell_ser);\n        }\n        let ser_arr = serialization.getTopUppedArray();\n        if (hash_crc32) {\n            ser_arr = concatBytes(ser_arr, crc32c(ser_arr));\n        }\n\n        return ser_arr;\n    }\n\n    /**\n     * @private\n     * @param cellsIndex\n     * @param refSize\n     * @return {Promise<Uint8Array>}\n     */\n    async serializeForBoc(cellsIndex, refSize) {\n        const reprArray = [];\n\n        reprArray.push(this.getDataWithDescriptors());\n        if (this.isExplicitlyStoredHashes()) {\n            throw new Error(\"Cell hashes explicit storing is not implemented\");\n        }\n        for (let k in this.refs) {\n            const i = this.refs[k];\n            const refHash = await i.hash();\n            const refIndexInt = cellsIndex[refHash];\n            let refIndexHex = refIndexInt.toString(16);\n            if (refIndexHex.length % 2) {\n                refIndexHex = \"0\" + refIndexHex;\n            }\n            const reference = hexToBytes(refIndexHex);\n            reprArray.push(reference);\n        }\n        let x = new Uint8Array();\n        for (let k in reprArray) {\n            const i = reprArray[k];\n            x = concatBytes(x, i);\n        }\n        return x;\n    }\n\n    /**\n     * @private\n     * @param cellsIndex\n     * @param refSize\n     * @return {Promise<number>}\n     */\n    async bocSerializationSize(cellsIndex, refSize) {\n        return (await this.serializeForBoc(cellsIndex, refSize)).length;\n    }\n\n    /**\n     * @private\n     * @return {[[], {}]} topologicalOrderArray and indexHashmap\n     */\n    async treeWalk() {\n        return treeWalk(this, [], {});\n    }\n}\n\nasync function moveToTheEnd(indexHashmap, topologicalOrderArray, target) {\n    const targetIndex = indexHashmap[target];\n    for (let h in indexHashmap) {\n        if (indexHashmap[h] > targetIndex) {\n            indexHashmap[h] = indexHashmap[h] - 1;\n        }\n    }\n    indexHashmap[target] = topologicalOrderArray.length - 1;\n    const data = topologicalOrderArray.splice(targetIndex, 1)[0];\n    topologicalOrderArray.push(data);\n    for (let subCell of data[1].refs) {\n        await moveToTheEnd(indexHashmap, topologicalOrderArray, await subCell.hash());\n    }\n}\n\n/**\n * @param cell  {Cell}\n * @param topologicalOrderArray array of pairs: cellHash: Uint8Array, cell: Cell, ...\n * @param indexHashmap cellHash: Uint8Array -> cellIndex: number\n * @return {[[], {}]} topologicalOrderArray and indexHashmap\n */\nasync function treeWalk(cell, topologicalOrderArray, indexHashmap, parentHash = null) {\n    const cellHash = await cell.hash();\n    if (cellHash in indexHashmap) { // Duplication cell\n        //it is possible that already seen cell is a children of more deep cell\n        if (parentHash) {\n            if (indexHashmap[parentHash] > indexHashmap[cellHash]) {\n                await moveToTheEnd(indexHashmap, topologicalOrderArray, cellHash);\n            }\n        }\n        return [topologicalOrderArray, indexHashmap];\n    }\n    indexHashmap[cellHash] = topologicalOrderArray.length;\n    topologicalOrderArray.push([cellHash, cell]);\n    for (let subCell of cell.refs) {\n        const res = await treeWalk(subCell, topologicalOrderArray, indexHashmap, cellHash);\n        topologicalOrderArray = res[0];\n        indexHashmap = res[1];\n    }\n\n    return [topologicalOrderArray, indexHashmap];\n}\n\n\nfunction parseBocHeader(serializedBoc) {\n    // snake_case is used to match TON docs\n    if (serializedBoc.length < 4 + 1)\n        throw \"Not enough bytes for magic prefix\";\n    const inputData = serializedBoc; // Save copy for crc32\n    const prefix = serializedBoc.slice(0, 4);\n    serializedBoc = serializedBoc.slice(4);\n    let has_idx, hash_crc32, has_cache_bits, flags, size_bytes;\n    if (compareBytes(prefix, reachBocMagicPrefix)) {\n        const flags_byte = serializedBoc[0];\n        has_idx = flags_byte & 128;\n        hash_crc32 = flags_byte & 64;\n        has_cache_bits = flags_byte & 32;\n        flags = (flags_byte & 16) * 2 + (flags_byte & 8);\n        size_bytes = flags_byte % 8;\n    }\n    if (compareBytes(prefix, leanBocMagicPrefix)) {\n        has_idx = 1;\n        hash_crc32 = 0;\n        has_cache_bits = 0;\n        flags = 0;\n        size_bytes = serializedBoc[0];\n    }\n    if (compareBytes(prefix, leanBocMagicPrefixCRC)) {\n        has_idx = 1;\n        hash_crc32 = 1;\n        has_cache_bits = 0;\n        flags = 0;\n        size_bytes = serializedBoc[0];\n    }\n    serializedBoc = serializedBoc.slice(1);\n    if (serializedBoc.length < 1 + 5 * size_bytes)\n        throw \"Not enough bytes for encoding cells counters\";\n    const offset_bytes = serializedBoc[0];\n    serializedBoc = serializedBoc.slice(1);\n    const cells_num = readNBytesUIntFromArray(size_bytes, serializedBoc);\n    serializedBoc = serializedBoc.slice(size_bytes);\n    const roots_num = readNBytesUIntFromArray(size_bytes, serializedBoc);\n    serializedBoc = serializedBoc.slice(size_bytes);\n    const absent_num = readNBytesUIntFromArray(size_bytes, serializedBoc);\n    serializedBoc = serializedBoc.slice(size_bytes);\n    const tot_cells_size = readNBytesUIntFromArray(offset_bytes, serializedBoc);\n    serializedBoc = serializedBoc.slice(offset_bytes);\n    if (serializedBoc.length < roots_num * size_bytes)\n        throw \"Not enough bytes for encoding root cells hashes\";\n    let root_list = [];\n    for (let c = 0; c < roots_num; c++) {\n        root_list.push(readNBytesUIntFromArray(size_bytes, serializedBoc));\n        serializedBoc = serializedBoc.slice(size_bytes);\n    }\n    let index = false;\n    if (has_idx) {\n        index = [];\n        if (serializedBoc.length < offset_bytes * cells_num)\n            throw \"Not enough bytes for index encoding\";\n        for (let c = 0; c < cells_num; c++) {\n            index.push(readNBytesUIntFromArray(offset_bytes, serializedBoc));\n            serializedBoc = serializedBoc.slice(offset_bytes);\n        }\n    }\n\n    if (serializedBoc.length < tot_cells_size)\n        throw \"Not enough bytes for cells data\";\n    const cells_data = serializedBoc.slice(0, tot_cells_size);\n    serializedBoc = serializedBoc.slice(tot_cells_size);\n    if (hash_crc32) {\n        if (serializedBoc.length < 4)\n            throw \"Not enough bytes for crc32c hashsum\";\n        const length = inputData.length;\n        if (!compareBytes(crc32c(inputData.slice(0, length - 4)), serializedBoc.slice(0, 4)))\n            throw \"Crc32c hashsum mismatch\";\n        serializedBoc = serializedBoc.slice(4);\n    }\n    if (serializedBoc.length)\n        throw \"Too much bytes in BoC serialization\";\n    return {\n        has_idx: has_idx, hash_crc32: hash_crc32, has_cache_bits: has_cache_bits, flags: flags, size_bytes: size_bytes,\n        off_bytes: offset_bytes, cells_num: cells_num, roots_num: roots_num, absent_num: absent_num,\n        tot_cells_size: tot_cells_size, root_list: root_list, index: index,\n        cells_data: cells_data\n    };\n}\n\nfunction deserializeCellData(cellData, referenceIndexSize) {\n    if (cellData.length < 2)\n        throw \"Not enough bytes to encode cell descriptors\";\n    const d1 = cellData[0], d2 = cellData[1];\n    cellData = cellData.slice(2);\n    const level = Math.floor(d1 / 32);\n    const isExotic = d1 & 8;\n    const refNum = d1 % 8;\n    const dataBytesize = Math.ceil(d2 / 2);\n    const fullfilledBytes = !(d2 % 2);\n    let cell = new Cell();\n    cell.isExotic = isExotic;\n    if (cellData.length < dataBytesize + referenceIndexSize * refNum)\n        throw \"Not enough bytes to encode cell data\";\n    cell.bits.setTopUppedArray(cellData.slice(0, dataBytesize), fullfilledBytes);\n    cellData = cellData.slice(dataBytesize);\n    for (let r = 0; r < refNum; r++) {\n        cell.refs.push(readNBytesUIntFromArray(referenceIndexSize, cellData));\n        cellData = cellData.slice(referenceIndexSize);\n    }\n    return {cell: cell, residue: cellData};\n}\n\n\n/**\n * @param serializedBoc  {string | Uint8Array} hex or bytearray\n * @return {Cell[]} root cells\n */\nfunction deserializeBoc(serializedBoc) {\n    if (typeof (serializedBoc) == 'string') {\n        serializedBoc = hexToBytes(serializedBoc);\n    }\n    const header = parseBocHeader(serializedBoc);\n    let cells_data = header.cells_data;\n    let cells_array = [];\n    for (let ci = 0; ci < header.cells_num; ci++) {\n        let dd = deserializeCellData(cells_data, header.size_bytes);\n        cells_data = dd.residue;\n        cells_array.push(dd.cell);\n    }\n    for (let ci = header.cells_num - 1; ci >= 0; ci--) {\n        let c = cells_array[ci];\n        for (let ri = 0; ri < c.refs.length; ri++) {\n            const r = c.refs[ri];\n            if (r < ci) {\n                throw \"Topological order is broken\";\n            }\n            c.refs[ri] = cells_array[r];\n        }\n    }\n    let root_cells = [];\n    for (let ri of header.root_list) {\n        root_cells.push(cells_array[ri]);\n    }\n    return root_cells;\n}\n\nmodule.exports = {Cell};\n","const {Cell} = require(\"../boc\");\nconst {Address, BN, bytesToHex} = require(\"../utils\");\nconst {Contract} = require(\"../contract\");\n\nclass AppTon {\n\n    /**\n     * @param transport {Transport} @ledgerhq/hw-transport\n     * @param ton   {TonWeb}\n     */\n    constructor(transport, ton) {\n        this.transport = transport;\n        this.ton = ton;\n\n        this.ADDRESS_FORMAT_HEX = 0;\n        this.ADDRESS_FORMAT_USER_FRIENDLY = 1;\n        this.ADDRESS_FORMAT_URL_SAFE = 2;\n        this.ADDRESS_FORMAT_BOUNCEABLE = 4;\n        this.ADDRESS_FORMAT_TEST_ONLY = 8;\n\n        // todo: узнать зачем вызывается decorateAppAPIMethods\n        // const scrambleKey = \"w0w\";\n        // transport.decorateAppAPIMethods(\n        //     this,\n        //     [\n        //         \"getAppConfiguration\",\n        //         \"getAddress\",\n        //         \"sign\",\n        //         \"signTransfer\",\n        //     ],\n        //     scrambleKey\n        // );\n    }\n\n    /***\n     * Get App version\n     * @return {{version: string}}\n     */\n    async getAppConfiguration() {\n        const response = await this.transport.send(0xe0, 0x01, 0x00, 0x00);\n        return {\n            version: \"\" + response[0] + \".\" + response[1] + \".\" + response[2] // major version, minor version, patch version\n        };\n    }\n\n    /**\n     * This command returns a public key for the given account number\n     * @param accountNumber {number}\n     * @param isDisplay {boolean} display public key and confirm before returning\n     * @return {{publicKey: Uint8Array}}\n     */\n    async getPublicKey(accountNumber, isDisplay) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeInt32BE(accountNumber);\n\n        const response = await this.transport\n            .send(\n                0xe0,\n                0x02,\n                isDisplay ? 0x01 : 0x00,\n                0x00,\n                buffer\n            );\n        const len = response[0];\n        const publicKey = new Uint8Array(response.slice(1, 1 + len));\n        return {publicKey};\n    }\n\n    /**\n     * This command returns a wallet v3R1 address for the given account number\n     * @param accountNumber {number}\n     * @param isDisplay {boolean} display address and confirm before returning\n     * @param addressFormat {number} display address format (use sum of ADDRESS_FORMAT_ constants)\n     * @return {{address: Address}}\n     */\n    async getAddress(accountNumber, isDisplay, addressFormat) {\n        const buffer = Buffer.alloc(4);\n        buffer.writeInt32BE(accountNumber);\n\n        const response = await this.transport\n            .send(\n                0xe0,\n                0x05,\n                isDisplay ? 0x01 : 0x00,\n                addressFormat,\n                buffer\n            );\n        const len = response[0];\n        const addressHex = new Uint8Array(response.slice(1, 1 + len));\n        const address = new Address('0:' + bytesToHex(addressHex));\n        return {address};\n    }\n\n    /**\n     * Sign a bytes\n     * @param accountNumber {number}\n     * @param buffer    {Buffer}\n     * @return {{signature: Buffer}}\n     */\n    async sign(accountNumber, buffer) {\n        const accountNumberBuffer = Buffer.alloc(4);\n        accountNumberBuffer.writeInt32BE(accountNumber);\n        const signBuffer = Buffer.concat([accountNumberBuffer, Buffer.from(buffer)]);\n\n        const response = await this.transport\n            .send(\n                0xe0,\n                0x03,\n                0x00,\n                0x00,\n                signBuffer\n            );\n\n        const len = response[0];\n        const signature = response.slice(1, 1 + len);\n        return {signature};\n    }\n\n    /**\n     * Sign a transfer coins message (same with TonWeb.WalletContract.createTransferMessage)\n     * if seqno === 0 it will be deploy wallet + transfer coins message\n     * @param accountNumber {number}\n     * @param wallet {WalletContract}  Sender wallet\n     * @param toAddress {String | Address}  Destination address in any format\n     * @param amount    {BN | number}  Transfer value in nanograms\n     * @param seqno {number}\n     * @param addressFormat {number} display address format (use sum of ADDRESS_FORMAT_ constants)\n     * @return\n     */\n    async transfer(accountNumber, wallet, toAddress, amount, seqno, addressFormat) {\n        const sendMode = 3;\n\n        const query = await wallet.createTransferMessage(null, toAddress, amount, seqno, null, sendMode, true);\n\n        const accountNumberBuffer = Buffer.alloc(4);\n        accountNumberBuffer.writeInt32BE(accountNumber);\n        const msgBuffer = Buffer.concat([accountNumberBuffer, Buffer.from(await query.signingMessage.toBoc())]);\n\n        const response = await this.transport\n            .send(\n                0xe0,\n                0x04,\n                addressFormat,\n                0x00,\n                msgBuffer\n            );\n\n        const len = response[0];\n        const signatureBuffer = response.slice(1, 1 + len);\n        const signature = new Uint8Array(signatureBuffer);\n\n        const body = new Cell();\n        body.bits.writeBytes(signature);\n        body.writeCell(query.signingMessage);\n\n        let stateInit = null, code = null, data = null;\n\n        if (seqno === 0) {\n            const deploy = await wallet.createStateInit();\n            stateInit = deploy.stateInit;\n            code = deploy.code;\n            data = deploy.data;\n        }\n\n        const selfAddress = await wallet.getAddress();\n        const header = Contract.createExternalMessageHeader(selfAddress);\n        const resultMessage = Contract.createCommonMsgInfo(header, stateInit, body);\n\n        const resultPromise = new Promise(resolve => {\n            resolve({\n                address: selfAddress,\n                message: resultMessage, // old wallet_send_generate_external_message\n\n                body: body,\n                signature: signature,\n                signingMessage: query.signingMessage,\n\n                stateInit,\n                code,\n                data,\n            });\n        });\n\n        return Contract.createMethod(\n            this.ton.provider,\n            resultPromise\n        );\n    }\n}\n\nmodule.exports = AppTon;","const {Cell} = require(\"../boc\");\nconst {Address, bytesToBase64, bytesToHex} = require(\"../utils\");\n\nclass Contract {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options    {{code?: Cell, address?: Address | string, wc?: number}}\n     */\n    constructor(provider, options) {\n        this.provider = provider;\n        this.options = options;\n        this.address = options.address ? new Address(options.address) : null;\n        if (!options.wc) options.wc = this.address ? this.address.wc : 0;\n        this.methods = {};\n    }\n\n    /**\n     * @return {Promise<Address>}\n     */\n    async getAddress() {\n        if (!this.address) {\n            this.address = (await this.createStateInit()).address;\n        }\n        return this.address;\n    }\n\n    /**\n     * @private\n     * @return {Cell} cell contains contact code\n     */\n    createCodeCell() {\n        if (!this.options.code) throw new Error('Contract: options.code is not defined')\n        return this.options.code;\n    }\n\n    /**\n     * Method to override\n     * @protected\n     * @return {Cell} cell contains contract data\n     */\n    createDataCell() {\n        return new Cell();\n    }\n\n    /**\n     * @protected\n     * @return {Promise<{stateInit: Cell, address: Address, code: Cell, data: Cell}>}\n     */\n    async createStateInit() {\n        const codeCell = this.createCodeCell();\n        const dataCell = this.createDataCell();\n        const stateInit = Contract.createStateInit(codeCell, dataCell);\n        const stateInitHash = await stateInit.hash();\n        const address = new Address(this.options.wc + \":\" + bytesToHex(stateInitHash));\n        return {\n            stateInit: stateInit,\n            address: address,\n            code: codeCell,\n            data: dataCell,\n        }\n    }\n\n    // _ split_depth:(Maybe (## 5)) special:(Maybe TickTock)\n    // code:(Maybe ^Cell) data:(Maybe ^Cell)\n    // library:(Maybe ^Cell) = StateInit;\n    /**\n     * @param code  {Cell}\n     * @param data  {Cell}\n     * @param library {null}\n     * @param splitDepth {null}\n     * @param ticktock  {null}\n     * @return {Cell}\n     */\n    static createStateInit(code,\n                           data,\n                           library = null,\n                           splitDepth = null,\n                           ticktock = null) {\n        if (library)\n            throw \"Library in state init is not implemented\";\n        if (splitDepth)\n            throw \"Split depth in state init is not implemented\";\n        if (ticktock)\n            throw \"Ticktock in state init is not implemented\";\n\n        const stateInit = new Cell();\n\n        stateInit.bits.writeBitArray([Boolean(splitDepth), Boolean(ticktock), Boolean(code), Boolean(data), Boolean(library)]);\n        if (code)\n            stateInit.refs.push(code);\n        if (data)\n            stateInit.refs.push(data);\n        if (library)\n            stateInit.refs.push(library);\n        return stateInit;\n    }\n\n    // extra_currencies$_ dict:(HashmapE 32 (VarUInteger 32))\n    // = ExtraCurrencyCollection;\n    // currencies$_ grams:Grams other:ExtraCurrencyCollection\n    // = CurrencyCollection;\n\n    //int_msg_info$0 ihr_disabled:Bool bounce:Bool\n    //src:MsgAddressInt dest:MsgAddressInt\n    //value:CurrencyCollection ihr_fee:Grams fwd_fee:Grams\n    //created_lt:uint64 created_at:uint32 = CommonMsgInfo;\n    /**\n     * @param dest  {Address | string}\n     * @param gramValue  {number | BN}\n     * @param ihrDisabled  {boolean}\n     * @param bounce  {null | boolean}\n     * @param bounced {boolean}\n     * @param src  {Address | string}\n     * @param currencyCollection  {null}\n     * @param ihrFees  {number | BN}\n     * @param fwdFees  {number | BN}\n     * @param createdLt  {number | BN}\n     * @param createdAt  {number | BN}\n     * @return {Cell}\n     */\n    static createInternalMessageHeader(dest,\n                                       gramValue = 0,\n                                       ihrDisabled = true,\n                                       bounce = null,\n                                       bounced = false,\n                                       src = null,\n                                       currencyCollection = null,\n                                       ihrFees = 0,\n                                       fwdFees = 0,\n                                       createdLt = 0,\n                                       createdAt = 0) {\n        const message = new Cell();\n        message.bits.writeBit(false);\n        message.bits.writeBit(ihrDisabled);\n        if (!(bounce === null)) {\n            message.bits.writeBit(bounce);\n        } else {\n            message.bits.writeBit((new Address(dest)).isBounceable);\n        }\n        message.bits.writeBit(bounced);\n        message.bits.writeAddress(src ? new Address(src) : null);\n        message.bits.writeAddress(new Address(dest));\n        message.bits.writeGrams(gramValue);\n        if (currencyCollection) {\n            throw \"Currency collections are not implemented yet\";\n        }\n        message.bits.writeBit(Boolean(currencyCollection));\n        message.bits.writeGrams(ihrFees);\n        message.bits.writeGrams(fwdFees);\n        message.bits.writeUint(createdLt, 64);\n        message.bits.writeUint(createdAt, 32);\n        return message;\n    }\n\n    //ext_in_msg_info$10 src:MsgAddressExt dest:MsgAddressInt\n    //import_fee:Grams = CommonMsgInfo;\n    /**\n     * @param dest  {Address | string}\n     * @param src  {Address | string}\n     * @param importFee  {number | BN}\n     * @return {Cell}\n     */\n    static createExternalMessageHeader(dest,\n                                       src = null,\n                                       importFee = 0) {\n        const message = new Cell();\n        message.bits.writeUint(2, 2);\n        message.bits.writeAddress(src ? new Address(src) : null);\n        message.bits.writeAddress(new Address(dest));\n        message.bits.writeGrams(importFee);\n        return message;\n    }\n\n    //tblkch.pdf, page 57\n    /**\n     * Create CommonMsgInfo contains header, stateInit, body\n     * @param header {Cell}\n     * @param stateInit?  {Cell}\n     * @param body?  {Cell}\n     * @return {Cell}\n     */\n    static createCommonMsgInfo(header, stateInit = null, body = null) {\n        const commonMsgInfo = new Cell();\n        commonMsgInfo.writeCell(header);\n\n        if (stateInit) {\n            commonMsgInfo.bits.writeBit(true);\n            //-1:  need at least one bit for body\n            // TODO we also should check for free refs here\n            if (commonMsgInfo.bits.getFreeBits() - 1 >= stateInit.bits.getUsedBits()) {\n                commonMsgInfo.bits.writeBit(false);\n                commonMsgInfo.writeCell(stateInit);\n            } else {\n                commonMsgInfo.bits.writeBit(true);\n                commonMsgInfo.refs.push(stateInit);\n            }\n        } else {\n            commonMsgInfo.bits.writeBit(false);\n        }\n        // TODO we also should check for free refs here\n        if (body) {\n            if (commonMsgInfo.bits.getFreeBits() >= body.bits.getUsedBits()) {\n                commonMsgInfo.bits.writeBit(false);\n                commonMsgInfo.writeCell(body);\n            } else {\n                commonMsgInfo.bits.writeBit(true);\n                commonMsgInfo.refs.push(body);\n            }\n        } else {\n            commonMsgInfo.bits.writeBit(false);\n        }\n        return commonMsgInfo;\n    }\n\n    static createMethod(provider, queryPromise) {\n        return {\n            getQuery: async () => {\n                return (await queryPromise).message;\n            },\n            send: async () => {\n                const query = await queryPromise;\n                const boc = bytesToBase64(await query.message.toBoc(false));\n                return provider.sendBoc(boc);\n            },\n            estimateFee: async () => {\n                const query = await queryPromise;\n                const serialized = query.code ? // deploy\n                    {\n                        address: query.address.toString(true, true, false),\n                        body: bytesToBase64(await query.body.toBoc(false)),\n                        init_code: bytesToBase64(await query.code.toBoc(false)),\n                        init_data: bytesToBase64(await query.data.toBoc(false)),\n                    } : {\n                        address: query.address.toString(true, true, true),\n                        body: bytesToBase64(await query.body.toBoc(false)),\n                    };\n\n                return provider.getEstimateFee(serialized);\n            }\n        }\n    }\n}\n\nmodule.exports = {Contract};\n","const HttpProviderUtils = require('./HttpProviderUtils').default;\n\nif (typeof fetch === 'undefined') {\n    fetch = require('node-fetch');\n}\n\nconst SHARD_ID_ALL = '-9223372036854775808'; // 0x8000000000000000\n\nclass HttpProvider {\n    /**\n     * @param host? {string}\n     * @param options? {{apiKey: string}}\n     */\n    constructor(host, options) {\n        this.host = host || \"https://toncenter.com/api/v2/jsonRPC\";\n        this.options = options || {};\n    }\n\n    /**\n     * @private\n     * @param apiUrl   {string}\n     * @param request   {any}\n     * @return {Promise<any>}\n     */\n    sendImpl(apiUrl, request) {\n        const headers = {\n            'Content-Type': 'application/json'\n        };\n        if (this.options.apiKey) {\n            headers['X-API-Key'] = this.options.apiKey;\n        }\n\n        return fetch(apiUrl, {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(request)\n        })\n            .then((response) => response.json())\n            .then(({ result, error }) => result || Promise.reject(error))\n    }\n\n    /**\n     * @param method    {string}\n     * @param params    {any}  todo: Array<any>\n     * @return {Promise<any>}\n     */\n    send(method, params) {\n        return this.sendImpl(\n            this.host,\n            {id: 1, jsonrpc: \"2.0\", method: method, params: params}\n        );\n    }\n\n    /**\n     * Use this method to get information about address: balance, code, data, last_transaction_id.\n     * @param address {string}\n     */\n    async getAddressInfo(address) {\n        return this.send('getAddressInformation', {address: address});\n    }\n\n    /**\n     * Similar to previous one but tries to parse additional information for known contract types. This method is based on generic.getAccountState thus number of recognizable contracts may grow. For wallets we recommend to use getWalletInformation.\n     * @param address {string}\n     */\n    async getExtendedAddressInfo(address) {\n        return this.send('getExtendedAddressInformation', {address: address});\n    }\n\n    /**\n     * Use this method to retrieve wallet information, this method parse contract state and currently supports more wallet types than getExtendedAddressInformation: simple wallet, stadart wallet and v3 wallet.\n     * @param address {string}\n     */\n    async getWalletInfo(address) {\n        return this.send('getWalletInformation', {address: address});\n    }\n\n    /**\n     * Use this method to get transaction history of a given address.\n     * @param address   {string}\n     * @param limit?    {number}\n     * @param lt?    {number}\n     * @param hash?    {string}\n     * @param to_lt?    {number}\n     * @return array of transaction object\n     */\n    async getTransactions(address, limit = 20, lt = undefined, hash = undefined, to_lt = undefined, archival = undefined) {\n        return this.send(\"getTransactions\", {address, limit, lt, hash, to_lt, archival});\n    };\n\n    /**\n     * Use this method to get balance (in nanograms) of a given address.\n     * @param address {string}\n     */\n    async getBalance(address) {\n        return this.send('getAddressBalance', {address: address});\n    }\n\n    /**\n     * Use this method to send serialized boc file: fully packed and serialized external message.\n     * @param base64 {string} base64 of boc bytes Cell.toBoc\n     */\n    async sendBoc(base64) {\n        return this.send(\"sendBoc\", {'boc': base64});\n    };\n\n    /**\n     * @deprecated\n     * Send external message\n     * @param query     object as described https://toncenter.com/api/test/v2/#sendQuerySimple\n     */\n    async sendQuery(query) {\n        return this.send(\"sendQuerySimple\", query);\n    };\n\n\n    /**\n     * @param query     object as described https://toncenter.com/api/test/v2/#estimateFee\n     * @return fees object\n     */\n    async getEstimateFee(query) {\n        return this.send(\"estimateFee\", query);\n    };\n\n    /**\n     * Invoke get-method of smart contract\n     * todo: think about throw error if result.exit_code !== 0 (the change breaks backward compatibility)\n     * @param address   {string}    contract address\n     * @param method   {string | number}        method name or method id\n     * @param params?   Array of stack elements: [['num',3], ['cell', cell_object], ['slice', slice_object]]\n     */\n    async call(address, method, params = []) {\n        return this.send('runGetMethod', {\n            address: address,\n            method: method,\n            stack: params,\n        });\n    }\n\n    /**\n     * Invoke get-method of smart contract\n     * @param address   {string}    contract address\n     * @param method   {string | number}        method name or method id\n     * @param params?   Array of stack elements: [['num',3], ['cell', cell_object], ['slice', slice_object]]\n     */\n    async call2(address, method, params = []) {\n        const result = await this.send('runGetMethod', {\n            address: address,\n            method: method,\n            stack: params\n        });\n        return HttpProviderUtils.parseResponse(result);\n    }\n\n    /**\n     * Returns ID's of last and init block of masterchain\n     */\n    async getMasterchainInfo() {\n        return this.send('getMasterchainInfo', {});\n    }\n\n    /**\n     * Returns ID's of shardchain blocks included in this masterchain block\n     * @param masterchainBlockNumber {number}\n     */\n    async getBlockShards(masterchainBlockNumber) {\n        return this.send('shards', {\n            seqno: masterchainBlockNumber\n        });\n    }\n\n    /**\n     * Returns transactions hashes included in this block\n     * @param workchain {number}\n     * @param shardId   {string}\n     * @param shardBlockNumber  {number}\n     */\n    async getBlockTransactions(workchain, shardId, shardBlockNumber) {\n        return this.send('getBlockTransactions', {\n            workchain: workchain,\n            shard: shardId,\n            seqno: shardBlockNumber\n        });\n    }\n\n    /**\n     * Returns transactions hashes included in this masterhcain block\n     * @param masterchainBlockNumber  {number}\n     */\n    async getMasterchainBlockTransactions(masterchainBlockNumber) {\n        return this.getBlockTransactions(-1, SHARD_ID_ALL, masterchainBlockNumber);\n    }\n\n    /**\n     * Returns block header and his previous blocks ID's\n     * @param workchain {number}\n     * @param shardId   {string}\n     * @param shardBlockNumber  {number}\n     */\n    async getBlockHeader(workchain, shardId, shardBlockNumber) {\n        return this.send('getBlockHeader', {\n            workchain: workchain,\n            shard: shardId,\n            seqno: shardBlockNumber\n        });\n    }\n\n    /**\n     * Returns masterchain block header and his previous block ID\n     * @param masterchainBlockNumber  {number}\n     */\n    async getMasterchainBlockHeader(masterchainBlockNumber) {\n        return this.getBlockHeader(-1, SHARD_ID_ALL, masterchainBlockNumber);\n    }\n}\n\nHttpProvider.SHARD_ID_ALL = SHARD_ID_ALL;\n\nmodule.exports.default = HttpProvider;\n","const {BN, base64ToBytes} = require(\"../utils\");\nconst {Cell} = require(\"../boc\");\n\nclass HttpProviderUtils {\n\n    static parseObject(x) {\n        const typeName = x['@type'];\n        switch (typeName) {\n            case 'tvm.list':\n            case 'tvm.tuple':\n                return x.elements.map(HttpProviderUtils.parseObject);\n            case 'tvm.cell':\n                return Cell.oneFromBoc(base64ToBytes(x.bytes));\n            case 'tvm.stackEntryCell':\n                return HttpProviderUtils.parseObject(x.cell);\n            case 'tvm.stackEntryTuple':\n                return HttpProviderUtils.parseObject(x.tuple);\n            case 'tvm.stackEntryNumber':\n                return HttpProviderUtils.parseObject(x.number);\n            case 'tvm.numberDecimal':\n                return new BN(x.number, 10);\n            default:\n                throw new Error('unknown type ' + typeName);\n        }\n    }\n\n    /**\n     * @param pair  {any[]}\n     * @return {any}\n     */\n    static parseResponseStack(pair) {\n        const typeName = pair[0];\n        const value = pair[1];\n\n        switch (typeName) {\n            case 'num':\n                return new BN(value.replace(/0x/, ''), 16);\n            case 'list':\n            case 'tuple':\n                return HttpProviderUtils.parseObject(value);\n            case 'cell':\n                const contentBytes = base64ToBytes(value.bytes);\n                return Cell.oneFromBoc(contentBytes);\n            default:\n                throw new Error('unknown type ' + typeName);\n        }\n    }\n\n    static parseResponse(result) {\n        if (result.exit_code !== 0) {\n            const err = new Error('http provider parse response error')\n            err.result = result\n            throw err\n        }\n\n        const arr = result.stack.map(HttpProviderUtils.parseResponseStack);\n        return arr.length === 1 ? arr[0] : arr;\n    }\n\n    static makeArg(arg) {\n        if (arg instanceof BN || arg instanceof Number) {\n            return ['num', arg];\n        } else {\n            throw new Error('unknown arg type ' + arg);\n        }\n    }\n\n    static makeArgs(args) {\n        return args.map(this.makeArg);\n    }\n\n}\n\nmodule.exports.default = HttpProviderUtils;\n","const {Cell} = require(\"../../boc\");\nconst {Address, BN, toNano, bytesToHex, hexToBytes, nacl, stringToBytes, bytesToBase64} = require(\"../../utils\");\nconst {Contract} = require(\"../index.js\");\nconst {SimpleWalletContractR1, SimpleWalletContractR2, SimpleWalletContractR3} = require(\"./WalletContractSimple\");\nconst {WalletV2ContractR1, WalletV2ContractR2} = require(\"./WalletContractV2\");\nconst {WalletV3ContractR1, WalletV3ContractR2} = require(\"./WalletContractV3\");\nconst {WalletV4ContractR1} = require(\"./WalletContractV4\");\nconst {WalletV4ContractR2} = require(\"./WalletContractV4R2\");\n\nconst ALL = {\n    'simpleR1': SimpleWalletContractR1,\n    'simpleR2': SimpleWalletContractR2,\n    'simpleR3': SimpleWalletContractR3,\n    'v2R1': WalletV2ContractR1,\n    'v2R2': WalletV2ContractR2,\n    'v3R1': WalletV3ContractR1,\n    'v3R2': WalletV3ContractR2,\n    'v4R1': WalletV4ContractR1,\n    'v4R2': WalletV4ContractR2\n};\n\nconst LIST = [SimpleWalletContractR1, SimpleWalletContractR2, SimpleWalletContractR3, WalletV2ContractR1, WalletV2ContractR2, WalletV3ContractR1, WalletV3ContractR2, WalletV4ContractR1, WalletV4ContractR2];\n\nclass Wallets {\n    /**\n     * @param provider    {HttpProvider}\n     */\n    constructor(provider) {\n        this.provider = provider;\n        this.all = ALL;\n        this.list = LIST;\n        this.defaultVersion = 'v3R1';\n        this.default = this.all[this.defaultVersion];\n    }\n\n    create(options) {\n        return new this.default(this.provider, options);\n    }\n}\n\nWallets.all = ALL;\nWallets.list = LIST;\n\nmodule.exports.default = Wallets;\n","const {Cell} = require(\"../../boc\");\nconst {WalletContract} = require(\"./WalletContract\");\n\n// attention: no seqno get-method in this wallet\n\nclass SimpleWalletContractR1 extends WalletContract {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options? {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBoc(\"B5EE9C72410101010044000084FF0020DDA4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED5441FDF089\");\n        super(provider, options);\n    }\n\n    getName() {\n        return 'simpleR1';\n    }\n}\n\nclass SimpleWalletContractR2 extends WalletContract {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options? {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBoc(\"B5EE9C724101010100530000A2FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54D0E2786F\");\n        super(provider, options);\n    }\n\n    getName() {\n        return 'simpleR2';\n    }\n}\n\nclass SimpleWalletContractR3 extends WalletContract {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options? {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBoc(\"B5EE9C7241010101005F0000BAFF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F260810200D71820D70B1FED44D0D31FD3FFD15112BAF2A122F901541044F910F2A2F80001D31F3120D74A96D307D402FB00DED1A4C8CB1FCBFFC9ED54B5B86E42\");\n        super(provider, options);\n    }\n\n    getName() {\n        return 'simpleR3';\n    }\n}\n\nmodule.exports = {SimpleWalletContractR1, SimpleWalletContractR2, SimpleWalletContractR3};\n\n","const {Contract} = require(\"../index.js\");\nconst {Cell} = require(\"../../boc\");\nconst {nacl, stringToBytes, Address, BN} = require(\"../../utils\");\n\n/**\n * Abstract standard wallet class\n */\nclass WalletContract extends Contract {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options?    {{code: Uint8Array, publicKey?: Uint8Array, address?: Address | string, wc?: number}}\n     */\n    constructor(provider, options) {\n        if (!options.publicKey && !options.address) throw new Error('WalletContract required publicKey or address in options')\n        super(provider, options);\n\n        this.methods = {\n            /**\n             * @param   params {{secretKey: Uint8Array, toAddress: Address | string, amount: BN | number, seqno: number, payload: string | Uint8Array | Cell, sendMode: number, stateInit?: Cell}}\n             */\n            transfer: (params) => Contract.createMethod(provider, this.createTransferMessage(params.secretKey, params.toAddress, params.amount, params.seqno, params.payload, params.sendMode, !Boolean(params.secretKey), params.stateInit)),\n\n            seqno: () => {\n                return {\n                    /**\n                     * @return {Promise<number>}\n                     */\n                    call: async () => {\n                        const address = await this.getAddress();\n                        let n = null;\n                        try {\n                            n = (await provider.call2(address.toString(), 'seqno')).toNumber();\n                        } catch (e) {\n                        }\n                        return n;\n                    }\n                }\n            }\n        }\n\n        /**\n         * @param secretKey {Uint8Array}\n         */\n        this.deploy = (secretKey) => Contract.createMethod(provider, this.createInitExternalMessage(secretKey));\n    }\n\n    getName() {\n        throw new Error('override me');\n    }\n\n    /**\n     * @override\n     * @protected\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        // 4 byte seqno, 32 byte publicKey\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32); // seqno\n        cell.bits.writeBytes(this.options.publicKey);\n        return cell;\n    }\n\n    /**\n     * @protected\n     * @param   seqno?   {number}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno) {\n        seqno = seqno || 0;\n        const cell = new Cell();\n        cell.bits.writeUint(seqno, 32);\n        return cell;\n    }\n\n    /**\n     * External message for initialization\n     * @param secretKey  {Uint8Array} nacl.KeyPair.secretKey\n     * @return {{address: Address, message: Cell, body: Cell, sateInit: Cell, code: Cell, data: Cell}}\n     */\n    async createInitExternalMessage(secretKey) {\n        if (!this.options.publicKey) {\n            const keyPair = nacl.sign.keyPair.fromSecretKey(secretKey)\n            this.options.publicKey = keyPair.publicKey;\n        }\n        const {stateInit, address, code, data} = await this.createStateInit();\n\n        const signingMessage = this.createSigningMessage();\n        const signature = nacl.sign.detached(await signingMessage.hash(), secretKey);\n\n        const body = new Cell();\n        body.bits.writeBytes(signature);\n        body.writeCell(signingMessage);\n\n        const header = Contract.createExternalMessageHeader(address);\n        const externalMessage = Contract.createCommonMsgInfo(header, stateInit, body);\n\n        return {\n            address: address,\n            message: externalMessage,\n\n            body,\n            signingMessage,\n            stateInit,\n            code,\n            data,\n        };\n    }\n\n    /**\n     * @protected\n     * @param signingMessage {Cell}\n     * @param secretKey {Uint8Array}  nacl.KeyPair.secretKey\n     * @param seqno {number}\n     * @param dummySignature?    {boolean}\n     * @return {Promise<{address: Address, signature: Uint8Array, message: Cell, cell: Cell, body: Cell, resultMessage: Cell}>}\n     */\n    async createExternalMessage(\n        signingMessage,\n        secretKey,\n        seqno,\n        dummySignature = false\n    ) {\n        const signature = dummySignature ? new Uint8Array(64) : nacl.sign.detached(await signingMessage.hash(), secretKey);\n\n        const body = new Cell();\n        body.bits.writeBytes(signature);\n        body.writeCell(signingMessage);\n\n        let stateInit = null, code = null, data = null;\n\n        if (seqno === 0) {\n            if (!this.options.publicKey) {\n                const keyPair = nacl.sign.keyPair.fromSecretKey(secretKey)\n                this.options.publicKey = keyPair.publicKey;\n            }\n            const deploy = await this.createStateInit();\n            stateInit = deploy.stateInit;\n            code = deploy.code;\n            data = deploy.data;\n        }\n\n        const selfAddress = await this.getAddress();\n        const header = Contract.createExternalMessageHeader(selfAddress);\n        const resultMessage = Contract.createCommonMsgInfo(header, stateInit, body);\n\n        return {\n            address: selfAddress,\n            message: resultMessage, // old wallet_send_generate_external_message\n\n            body: body,\n            signature: signature,\n            signingMessage: signingMessage,\n\n            stateInit,\n            code,\n            data,\n        };\n    }\n\n    /**\n     * @param secretKey {Uint8Array}  nacl.KeyPair.secretKey\n     * @param address   {Address | string}\n     * @param amount    {BN | number} in nanograms\n     * @param seqno {number}\n     * @param payload?   {string | Uint8Array | Cell}\n     * @param sendMode?  {number}\n     * @param dummySignature?    {boolean}\n     * @param stateInit? {Cell}\n     * @return {Promise<{address: Address, signature: Uint8Array, message: Cell, cell: Cell, body: Cell, resultMessage: Cell}>}\n     */\n    async createTransferMessage(\n        secretKey,\n        address,\n        amount,\n        seqno,\n        payload = \"\",\n        sendMode = 3,\n        dummySignature = false,\n        stateInit = null\n    ) {\n        let payloadCell = new Cell();\n        if (payload) {\n            if (payload.refs) { // is Cell\n                payloadCell = payload;\n            } else if (typeof payload === 'string') {\n                if (payload.length > 0) {\n                    payloadCell.bits.writeUint(0, 32);\n                    payloadCell.bits.writeString(payload);\n                }\n            } else {\n                payloadCell.bits.writeBytes(payload)\n            }\n        }\n\n        const orderHeader = Contract.createInternalMessageHeader(new Address(address), new BN(amount));\n        const order = Contract.createCommonMsgInfo(orderHeader, stateInit, payloadCell);\n        const signingMessage = this.createSigningMessage(seqno);\n        signingMessage.bits.writeUint8(sendMode);\n        signingMessage.refs.push(order);\n\n        return this.createExternalMessage(signingMessage, secretKey, seqno, dummySignature);\n    }\n}\n\nmodule.exports = {WalletContract};\n","const {Cell} = require(\"../../boc\");\nconst {WalletContract} = require(\"./WalletContract\");\n\nclass WalletV2ContractBase extends WalletContract {\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(seqno, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        return message;\n    }\n}\n\nclass WalletV2ContractR1 extends WalletV2ContractBase {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options? {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBoc(\"B5EE9C724101010100570000AAFF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54A1370BB6\");\n        super(provider, options);\n    }\n\n    getName() {\n        return 'v2R1';\n    }\n}\n\nclass WalletV2ContractR2 extends WalletV2ContractBase {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options? {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBoc(\"B5EE9C724101010100630000C2FF0020DD2082014C97BA218201339CBAB19C71B0ED44D0D31FD70BFFE304E0A4F2608308D71820D31FD31F01F823BBF263ED44D0D31FD3FFD15131BAF2A103F901541042F910F2A2F800029320D74A96D307D402FB00E8D1A4C8CB1FCBFFC9ED54044CD7A1\");\n        super(provider, options);\n    }\n\n    getName() {\n        return 'v2R2';\n    }\n}\n\nmodule.exports = {WalletV2ContractR1, WalletV2ContractR2};\n","const {Cell} = require(\"../../boc\");\nconst {WalletContract} = require(\"./WalletContract\");\n\nclass WalletV3ContractBase extends WalletContract {\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(this.options.walletId, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        message.bits.writeUint(seqno, 32);\n        return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32);\n        cell.bits.writeUint(this.options.walletId, 32);\n        cell.bits.writeBytes(this.options.publicKey);\n        return cell;\n    }\n}\n\nclass WalletV3ContractR1 extends WalletV3ContractBase {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBoc(\"B5EE9C724101010100620000C0FF0020DD2082014C97BA9730ED44D0D70B1FE0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED543FBE6EE0\");\n        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n    }\n\n    getName() {\n        return 'v3R1';\n    }\n}\n\nclass WalletV3ContractR2 extends WalletV3ContractBase {\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBoc(\"B5EE9C724101010100710000DEFF0020DD2082014C97BA218201339CBAB19F71B0ED44D0D31FD31F31D70BFFE304E0A4F2608308D71820D31FD31FD31FF82313BBF263ED44D0D31FD31FD3FFD15132BAF2A15144BAF2A204F901541055F910F2A3F8009320D74A96D307D402FB00E8D101A4C8CB1FCB1FCBFFC9ED5410BD6DAD\");\n        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n    }\n\n    getName() {\n        return 'v3R2';\n    }\n}\n\nmodule.exports = {WalletV3ContractR1, WalletV3ContractR2};\n\n","const {Cell} = require(\"../../boc\");\nconst {Contract} = require(\"../index.js\");\nconst {Address, bytesToHex, BN} = require(\"../../utils\");\nconst {WalletContract} = require(\"./WalletContract\");\n\nclass WalletV4ContractR1 extends WalletContract {\n\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBocn        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n\n        this.methods.getPublicKey = this.getPublicKey.bind(this);\n    }\n\n    getName() {\n        return 'v4R1';\n    }\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @param   withoutOp? {boolean}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno, withoutOp) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(this.options.walletId, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        message.bits.writeUint(seqno, 32);\n        if (!withoutOp) {\n            message.bits.writeUint(0, 8); // op\n        }\n        return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32);\n        cell.bits.writeUint(this.options.walletId, 32);\n        cell.bits.writeBytes(this.options.publicKey);\n        cell.bits.writeUint(0, 1); // plugins dict empty\n        return cell;\n    }\n\n    /**\n     * @return {Promise<BN>}\n     */\n    async getPublicKey() {\n        const myAddress = await this.getAddress();\n        return this.provider.call2(myAddress.toString(), 'get_public_key');\n    }\n}\n\nmodule.exports = {WalletV4ContractR1};\n","const {Cell} = require(\"../../boc\");\nconst {Contract} = require(\"../index.js\");\nconst {Address, bytesToHex, BN, toNano} = require(\"../../utils\");\nconst {WalletContract} = require(\"./WalletContract\");\n\nclass WalletV4ContractR2 extends WalletContract {\n\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {any}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBocn        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = 698983191 + this.options.wc;\n\n        this.methods.deployAndInstallPlugin = (params) => Contract.createMethod(provider, this.deployAndInstallPlugin(params));\n        this.methods.installPlugin = (params) => Contract.createMethod(provider, this.installPlugin(params));\n        this.methods.removePlugin = (params) => Contract.createMethod(provider, this.removePlugin(params));\n        this.methods.getPublicKey = this.getPublicKey.bind(this);\n        this.methods.getWalletId = this.getWalletId.bind(this);\n        this.methods.isPluginInstalled = this.isPluginInstalled.bind(this);\n        this.methods.getPluginsList = this.getPluginsList.bind(this);\n    }\n\n    getName() {\n        return 'v4R2';\n    }\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @param   withoutOp? {boolean}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno, withoutOp) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(this.options.walletId, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        message.bits.writeUint(seqno, 32);\n        if (!withoutOp) {\n            message.bits.writeUint(0, 8); // op\n        }\n        return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32); // seqno\n        cell.bits.writeUint(this.options.walletId, 32);\n        cell.bits.writeBytes(this.options.publicKey);\n        cell.bits.writeUint(0, 1); // plugins dict empty\n        return cell;\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginWc: number, amount: BN, stateInit: Cell, body: Cell}}\n     */\n    async deployAndInstallPlugin(params) {\n        const {secretKey, seqno, pluginWc, amount, stateInit, body} = params;\n\n        const signingMessage = this.createSigningMessage(seqno, true);\n        signingMessage.bits.writeUint(1, 8); // op\n        signingMessage.bits.writeInt(pluginWc, 8);\n        signingMessage.bits.writeGrams(amount);\n        signingMessage.refs.push(stateInit);\n        signingMessage.refs.push(body);\n        return this.createExternalMessage(signingMessage, secretKey, seqno, false);\n    }\n\n    /**\n     * @private\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     * @param   isInstall {boolean} install or uninstall\n     */\n    async _setPlugin(params, isInstall) {\n        const {secretKey, seqno, amount, queryId} = params;\n        const pluginAddress = new Address(params.pluginAddress);\n\n        const signingMessage = this.createSigningMessage(seqno, true);\n        signingMessage.bits.writeUint(isInstall ? 2 : 3, 8); // op\n        signingMessage.bits.writeInt(pluginAddress.wc, 8);\n        signingMessage.bits.writeBytes(pluginAddress.hashPart);\n        signingMessage.bits.writeGrams(amount || toNano('0.1'));\n        signingMessage.bits.writeUint(queryId || 0, 64);\n\n        return this.createExternalMessage(signingMessage, secretKey, seqno, false);\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     */\n    async installPlugin(params) {\n        return this._setPlugin(params, true);\n    }\n\n    /**\n     * @param   params {{secretKey: Uint8Array, seqno: number, pluginAddress: string | Address, amount?: BN, queryId?: number}}\n     */\n    async removePlugin(params) {\n        return this._setPlugin(params, false);\n    }\n\n    /**\n     * @return {Promise<number>}\n     */\n    async getWalletId() {\n        const myAddress = await this.getAddress();\n        const id = await this.provider.call2(myAddress.toString(), 'get_subwallet_id');\n        return id.toNumber();\n    }\n\n    /**\n     * @return {Promise<BN>}\n     */\n    async getPublicKey() {\n        const myAddress = await this.getAddress();\n        return this.provider.call2(myAddress.toString(), 'get_public_key');\n    }\n\n    /**\n     * @param pluginAddress {string | Address}\n     * @return {Promise<boolean>}\n     */\n    async isPluginInstalled(pluginAddress) {\n        pluginAddress = new Address(pluginAddress);\n        const hashPart = '0x' + bytesToHex(pluginAddress.hashPart);\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'is_plugin_installed', [['num', pluginAddress.wc], ['num', hashPart]]);\n        return !result.isZero();\n    }\n\n    /**\n     * @return {Promise<string[]>} plugins addresses\n     */\n    async getPluginsList() {\n        const parseAddress = tuple => tuple[0].toNumber() + ':' + tuple[1].toString(16);\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_plugin_list');\n        return result.map(parseAddress);\n    }\n}\n\nmodule.exports = {WalletV4ContractR2};\n","const {Cell} = require(\"../../boc\");\nconst {Address, BN, toNano, bytesToHex, hexToBytes, nacl, stringToBytes, bytesToBase64, base64ToBytes} = require(\"../../utils\");\nconst {Contract} = require(\"../index.js\");\nconst {WalletContract} = require(\"../wallet/WalletContract\");\n\nconst WALLET_ID_BASE = 698983191;\n\nclass LockupWalletV1 extends WalletContract {\n\n    /**\n     * @param provider    {HttpProvider}\n     * @param options {{publicKey?: Uint8Array, address?: Address | string, wc?: number, config: any}}\n     *\n     * Config json is {config}\n     */\n    constructor(provider, options) {\n        // options.config:\n        // {\n        //     wallet_type: \"lockup-0.1\",\n        //     config_pubkey: <base64-encoded pubkey>,\n        //     allowed_destinations: [ \"addr1\", \"addr2\", ... ]\n        // }\n\n        options.code = Cell.oneFromBocn        super(provider, options);\n        if (!this.options.walletId) this.options.walletId = WALLET_ID_BASE + this.options.wc;\n\n        this.methods.getPublicKey = this.getPublicKey.bind(this);\n        this.methods.getWalletId = this.getWalletId.bind(this);\n        this.methods.getLiquidBalance = this.getLiquidBalance.bind(this);\n        this.methods.getNominalRestrictedBalance = this.getNominalRestrictedBalance.bind(this);\n        this.methods.getNominalLockedBalance = this.getNominalLockedBalance.bind(this);\n    }\n\n    getName() {\n        return 'lockup-0.1';\n    }\n\n    /**\n     * @override\n     * @private\n     * @param   seqno?   {number}\n     * @param   withoutOp? {boolean}\n     * @return {Cell}\n     */\n    createSigningMessage(seqno, withoutOp) {\n        seqno = seqno || 0;\n        const message = new Cell();\n        message.bits.writeUint(this.options.walletId, 32);\n        if (seqno === 0) {\n            // message.bits.writeInt(-1, 32);// todo: dont work\n            for (let i = 0; i < 32; i++) {\n                message.bits.writeBit(1);\n            }\n        } else {\n            const date = new Date();\n            const timestamp = Math.floor(date.getTime() / 1e3);\n            message.bits.writeUint(timestamp + 60, 32);\n        }\n        message.bits.writeUint(seqno, 32);\n        return message;\n    }\n\n    /**\n     * @override\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        // from restricted.fc:\n        // .store_int(seqno, 32)\n        // .store_int(subwallet_id, 32)\n        // .store_uint(public_key, 256)\n        // .store_uint(config_public_key, 256)\n        // .store_dict(allowed_destinations)\n        // .store_grams(total_locked_value)\n        // .store_dict(locked)\n        // .store_grams(total_restricted_value)\n        // .store_dict(restricted).end_cell();\n\n        const cell = new Cell();\n        cell.bits.writeUint(0, 32); // seqno\n        cell.bits.writeUint(this.options.walletId, 32);\n        cell.bits.writeBytes(this.options.publicKey);\n\n        // TODO: write config.config_public_key (need to sort out encoding - the params come in base64),\n        // TODO: write the dict of allowed destinations (address is a key to an empty value).\n        cell.bits.writeBytes(base64ToBytes(this.options.config.config_public_key));\n        if (this.options.config.allowed_destinations) {\n            cell.bits.writeUint(1, 1);\n            cell.refs.push(Cell.oneFromBoc(base64ToBytes(this.options.config.allowed_destinations)));\n        } else {\n            cell.bits.writeUint(0, 1);\n        }\n\n        cell.bits.writeGrams(0);   // .store_grams(total_locked_value)\n        cell.bits.writeUint(0, 1); // empty locked dict\n        cell.bits.writeGrams(0);   // .store_grams(total_restricted_value)\n        cell.bits.writeUint(0, 1); // empty locked dict\n        return cell;\n    }\n\n    /**\n     * @return {Promise<number>}\n     */\n    async getWalletId() {\n        const myAddress = await this.getAddress();\n        const id = await this.provider.call2(myAddress.toString(), 'get_subwallet_id');\n        return id.toNumber();\n    }\n\n    /**\n     * @return {Promise<BN>}\n     */\n    async getPublicKey() {\n        const myAddress = await this.getAddress();\n        return this.provider.call2(myAddress.toString(), 'get_public_key');\n    }\n\n\n    /**\n     * @return {Promise<BN>} Amount of nanotoncoins that can be spent immediately.\n     */\n    async getLiquidBalance() {\n        const balances = await this.getBalances();\n        return balances[0]-balances[1]-balances[2];\n    }\n    /**\n     * @return {Promise<BN>} Amount of nanotoncoins that can be spent after the timelock OR to the whitelisted addresses.\n     */\n     async getNominalRestrictedBalance() {\n        return await this.getBalances()[1];\n    }\n\n    /**\n     * @return {Promise<BN>} Amount of nanotoncoins that can be spent after the timelock only (whitelisted addresses not used).\n     */\n     async getNominalLockedBalance() {\n        return await this.getBalances()[2];\n    }\n    /**\n     * @return {Promise<[BN,BN,BN]>} Total amount of nanotoncoins on the contract,\n     * nominal restricted value\n     * nominal locked value\n     */\n     async getBalances() {\n        const myAddress = await this.getAddress();\n        return this.provider.call2(myAddress.toString(), 'get_balances');\n    }\n}\n\nmodule.exports.default = {\n    LockupWalletV1,\n    all: {\n        'lockup-0.1': LockupWalletV1,\n    },\n    list: [LockupWalletV1]\n};\n","const {NftCollection} = require(\"./NftCollection.js\");\nconst {NftItem} = require(\"./NftItem.js\");\nconst {NftMarketplace} = require(\"./NftMarketplace.js\");\nconst {NftSale} = require(\"./NftSale.js\");\n\nmodule.exports.default = {\n    NftCollection,\n    NftItem,\n    NftMarketplace,\n    NftSale\n};","const {Contract} = require(\"../../index.js\");\nconst {Cell} = require(\"../../../boc\");\nconst {Address, bytesToBase64} = require(\"../../../utils\");\nconst {parseAddress} = require('./NftUtils.js');\nconst {createOffchainUriCell, serializeUri, parseOffchainUriCell, getRoyaltyParams} = require(\"./NftUtils\");\n\nclass NftCollection extends Contract {\n    /**\n     * @param provider\n     * @param options   {{ownerAddress: Address, collectionContentUri: string, nftItemContentBaseUri: string, nftItemCodeHex: string, royalty: number, royaltyAddress: Address, address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        // https://github.com/ton-blockchain/token-contract/blob/1ad314a98d20b41241d5329e1786fc894ad811de/nft/nft-collection-editable.fc\n        options.code = options.code || Cell.oneFromBocn        if (options.royalty > 1) throw new Error('royalty > 1');\n        options.royaltyBase = 1000;\n        options.royaltyFactor = Math.floor(options.royalty * options.royaltyBase);\n        super(provider, options);\n\n        this.methods.getCollectionData = this.getCollectionData.bind(this);\n        this.methods.getNftItemAddressByIndex = this.getNftItemAddressByIndex.bind(this);\n        this.methods.getNftItemContent = this.getNftItemContent.bind(this);\n        this.methods.getRoyaltyParams = this.getRoyaltyParams.bind(this);\n    }\n\n    /**\n     * @private\n     * @param params {{collectionContentUri: string, nftItemContentBaseUri: string}}\n     * @return {Cell}\n     */\n    createContentCell(params) {\n        const collectionContentCell = createOffchainUriCell(params.collectionContentUri);\n\n        const commonContentCell = new Cell();\n        commonContentCell.bits.writeBytes(serializeUri(params.nftItemContentBaseUri));\n\n        const contentCell = new Cell();\n        contentCell.refs[0] = collectionContentCell;\n        contentCell.refs[1] = commonContentCell;\n\n        return contentCell;\n    }\n\n    /**\n     * @private\n     * @param params    {{royaltyFactor: number, royaltyBase: number, royaltyAddress: Address}}\n     * @return {Cell}\n     */\n    createRoyaltyCell(params) {\n        const royaltyCell = new Cell();\n        royaltyCell.bits.writeUint(params.royaltyFactor, 16);\n        royaltyCell.bits.writeUint(params.royaltyBase, 16);\n        royaltyCell.bits.writeAddress(params.royaltyAddress);\n        return royaltyCell;\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains nft collection data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeAddress(this.options.ownerAddress);\n        cell.bits.writeUint(0, 64); // next_item_index\n        cell.refs[0] = this.createContentCell(this.options);\n        cell.refs[1] = Cell.oneFromBoc(this.options.nftItemCodeHex);\n        cell.refs[2] = this.createRoyaltyCell(this.options);\n        return cell;\n    }\n\n    /**\n     * params   {{itemIndex: number, amount: BN, itemOwnerAddress: Address, itemContentUri: string, queryId?: number}}\n     * @return {Cell}\n     */\n    createMintBody(params) {\n        const body = new Cell();\n        body.bits.writeUint(1, 32); // OP deploy new nft\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.bits.writeUint(params.itemIndex, 64);\n        body.bits.writeCoins(params.amount);\n\n        const nftItemContent = new Cell();\n        nftItemContent.bits.writeAddress(params.itemOwnerAddress);\n\n        const uriContent = new Cell();\n        uriContent.bits.writeBytes(serializeUri(params.itemContentUri));\n        nftItemContent.refs[0] = uriContent;\n\n        body.refs[0] = nftItemContent;\n        return body;\n    }\n\n    /**\n     * params   {{queryId?: number}}\n     * @return {Cell}\n     */\n    createGetRoyaltyParamsBody(params) {\n        const body = new Cell();\n        body.bits.writeUint(0x693d3950, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        return body;\n    }\n\n    /**\n     * params   {{queryId?: number, newOwnerAddress: Address}}\n     * @return {Cell}\n     */\n    createChangeOwnerBody(params) {\n        if (params.newOwnerAddress === undefined) throw new Error('Specify newOwnerAddress');\n\n        const body = new Cell();\n        body.bits.writeUint(3, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.bits.writeAddress(params.newOwnerAddress);\n        return body;\n    }\n\n    /**\n     * @param params    {{collectionContentUri: string, nftItemContentBaseUri: string, royalty: number, royaltyAddress: Address, queryId?: number}}\n     * @return {Cell}\n     */\n    createEditContentBody(params) {\n        if (params.royalty > 1) throw new Error('royalty > 1');\n        params.royaltyBase = 1000;\n        params.royaltyFactor = Math.floor(params.royalty * params.royaltyBase);\n\n        const body = new Cell();\n        body.bits.writeUint(4, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.refs[0] = this.createContentCell(params);\n        body.refs[1] = this.createRoyaltyCell(params);\n        return body;\n    }\n\n    /**\n     * @return {Promise<{nextItemIndex: number, ownerAddress: Address, collectionContentUri: string}>}\n     */\n    async getCollectionData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_collection_data');\n\n        const nextItemIndex = result[0].toNumber();\n        const collectionContentUri = parseOffchainUriCell(result[1]);\n        const ownerAddress = parseAddress(result[2]);\n\n        return {nextItemIndex, ownerAddress, collectionContentUri};\n    }\n\n    /**\n     * @param nftItem   {NFTItem}\n     * @return {Promise<{isInitialized: boolean, index: number, collectionAddress: Address, ownerAddress: Address|null, contentUri: string}>}\n     */\n    async getNftItemContent(nftItem) {\n        const myAddress = await this.getAddress();\n        const nftData = await nftItem.getData();\n        if (nftData.isInitialized) {\n            const result = await this.provider.call2(myAddress.toString(), 'get_nft_content', [['num', nftData.index], ['tvm.Cell', bytesToBase64(await nftData.contentCell.toBoc(false))]]);\n            nftData.contentUri = parseOffchainUriCell(result);\n            delete nftData.contentCell;\n        }\n        return nftData;\n    }\n\n    /**\n     * @param index {number}\n     * @return {Promise<Address>}\n     */\n    async getNftItemAddressByIndex(index) {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_nft_address_by_index', [['num', index]]);\n\n        return parseAddress(result);\n    }\n\n    /**\n     * @return {Promise<{royalty: number, royaltyFactor: number, royaltyBase: number, royaltyAddress: Address}>}\n     */\n    async getRoyaltyParams() {\n        const myAddress = await this.getAddress();\n        return getRoyaltyParams(this.provider, myAddress.toString());\n    }\n}\n\nmodule.exports = {NftCollection};\n","const {base64ToBytes, Address} = require(\"../../../utils\");\nconst {Cell} = require(\"../../../boc\");\n\nconst SNAKE_DATA_PREFIX = 0x00;\nconst CHUNK_DATA_PREFIX = 0x01;\nconst ONCHAIN_CONTENT_PREFIX = 0x00;\nconst OFFCHAIN_CONTENT_PREFIX = 0x01;\n\n/**\n * @param uri   {string}\n * @returns {Uint8Array}\n */\nconst serializeUri = (uri) => {\n    return new TextEncoder().encode(encodeURI(uri));\n}\n\n/**\n * @param bytes {Uint8Array}\n * @return {string}\n */\nconst parseUri = (bytes) => {\n    return new TextDecoder().decode(bytes);\n}\n\n/**\n * @param uri {string}\n * @return {Cell}\n */\nconst createOffchainUriCell = (uri) => {\n    const cell = new Cell();\n    cell.bits.writeUint(OFFCHAIN_CONTENT_PREFIX, 8);\n    cell.bits.writeBytes(serializeUri(uri));\n    return cell;\n}\n\n/**\n * @param cell {Cell}\n * @returns {string}\n */\nconst parseOffchainUriCell = (cell) => {\n    let length = 0;\n    let c = cell;\n    while (c) {\n        length += c.bits.array.length;\n        c = c.refs[0];\n    }\n\n    const bytes = new Uint8Array(length);\n    length = 0;\n    c = cell;\n    while (c) {\n        bytes.set(c.bits.array, length)\n        length += c.bits.array.length;\n        c = c.refs[0];\n    }\n    return parseUri(bytes.slice(1)); // slice OFFCHAIN_CONTENT_PREFIX\n}\n\n/**\n * @param bs    {BitString}\n * @param cursor    {number}\n * @param bits  {number}\n * @return {BigInt}\n */\nconst readIntFromBitString = (bs, cursor, bits) => {\n    let n = BigInt(0);\n    for (let i = 0; i < bits; i++) {\n        n *= BigInt(2);\n        n += BigInt(bs.get(cursor + i));\n    }\n    return n;\n}\n\n/**\n * @param cell  {Cell}\n * @return {Address|null}\n */\nconst parseAddress = cell => {\n    let n = readIntFromBitString(cell.bits, 3, 8);\n    if (n > BigInt(127)) {\n        n = n - BigInt(256);\n    }\n    const hashPart = readIntFromBitString(cell.bits, 3 + 8, 256);\n    if (n.toString(10) + \":\" + hashPart.toString(16) === '0:0') return null;\n    const s = n.toString(10) + \":\" + hashPart.toString(16).padStart(64, '0');\n    return new Address(s);\n};\n\n/**\n * @param provider {HttpProvider}\n * @param address {string}\n * @return {Promise<{royalty: number, royaltyFactor: number, royaltyBase: number, royaltyAddress: Address}>}\n */\nconst getRoyaltyParams = async (provider, address) => {\n    const result = await provider.call2(address, 'royalty_params');\n\n    const royaltyFactor = result[0].toNumber();\n    const royaltyBase = result[1].toNumber();\n    const royalty = royaltyFactor / royaltyBase;\n    const royaltyAddress = parseAddress(result[2]);\n\n    return {royalty, royaltyBase, royaltyFactor, royaltyAddress};\n}\n\nmodule.exports = {\n    SNAKE_DATA_PREFIX,\n    CHUNK_DATA_PREFIX,\n    ONCHAIN_CONTENT_PREFIX,\n    OFFCHAIN_CONTENT_PREFIX,\n    parseAddress,\n    serializeUri,\n    parseUri,\n    createOffchainUriCell,\n    parseOffchainUriCell,\n    getRoyaltyParams\n};","const {Contract} = require(\"../../index\");\nconst {Cell} = require(\"../../../boc\");\nconst {Address, BN} = require(\"../../../utils\");\nconst {parseAddress, getRoyaltyParams} = require('./NftUtils.js');\nconst {parseOffchainUriCell} = require(\"./NftUtils\");\n\n// https://github.com/ton-blockchain/token-contract/blob/1ad314a98d20b41241d5329e1786fc894ad811de/nft/nft-item.fc\nconstn\nclass NftItem extends Contract {\n    /**\n     * @param provider\n     * @param options   {{index: number, collectionAddress: Address, address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc(NFT_ITEM_CODE_HEX);\n        super(provider, options);\n\n        this.methods.getData = this.getData.bind(this);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains nft data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(this.options.index, 64);\n        cell.bits.writeAddress(this.options.collectionAddress);\n        return cell;\n    }\n\n    /**\n     * @return {Promise<{isInitialized: boolean, index: number, collectionAddress: Address|null, ownerAddress: Address|null, contentCell: Cell, contentUri: string|null}>}\n     */\n    async getData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_nft_data');\n\n        const isInitialized = result[0].toNumber() === -1;\n        const index = result[1].toNumber();\n        const collectionAddress =  parseAddress(result[2]);\n        const ownerAddress = isInitialized ? parseAddress(result[3]) : null;\n        const contentCell = result[4];\n\n        const contentUri = (isInitialized && collectionAddress === null) ? parseOffchainUriCell(contentCell) : null; // single NFT without collection\n\n        return {isInitialized, index, collectionAddress, ownerAddress, contentCell, contentUri};\n    }\n\n    /**\n     * @param params    {{queryId?: number, newOwnerAddress: Address, forwardAmount?: BN, forwardPayload?: Uint8Array, responseAddress: Address}}\n     */\n    async createTransferBody(params) {\n        const cell = new Cell();\n        cell.bits.writeUint(0x5fcc3d14, 32); // transfer op\n        cell.bits.writeUint(params.queryId || 0, 64);\n        cell.bits.writeAddress(params.newOwnerAddress);\n        cell.bits.writeAddress(params.responseAddress);\n        cell.bits.writeBit(false); // null custom_payload\n        cell.bits.writeCoins(params.forwardAmount || new BN(0));\n        cell.bits.writeBit(false); // forward_payload in this slice, not separate cell\n\n        if (params.forwardPayload) {\n            cell.bits.writeBytes(params.forwardPayload);\n        }\n        return cell;\n    }\n\n    /**\n     * params   {{queryId?: number}}\n     * @return {Cell}\n     */\n    createGetStaticDataBody(params) {\n        const body = new Cell();\n        body.bits.writeUint(0x2fcb26a2, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        return body;\n    }\n\n    /**\n     * for single nft without collection\n     * @return {Promise<{royalty: number, royaltyFactor: number, royaltyBase: number, royaltyAddress: Address}>}\n     */\n    async getRoyaltyParams() {\n        const myAddress = await this.getAddress();\n        return getRoyaltyParams(this.provider, myAddress.toString());\n    }\n\n}\n\nNftItem.codeHex = NFT_ITEM_CODE_HEX;\n\nmodule.exports = {NftItem};","const {Contract} = require(\"../../index.js\");\nconst {Cell} = require(\"../../../boc\");\nconst {Address} = require(\"../../../utils\");\nconst {parseAddress} = require('./NftUtils.js');\n\n/**\n * Not release - will change\n */\nclass NftMarketplace extends Contract {\n    /**\n     * @param provider\n     * @param options   {{ownerAddress: Address, address?: Address | string, cell?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc('B5EE9C7241010401006D000114FF00F4A413F4BCF2C80B01020120020300AAD23221C700915BE0D0D3030171B0915BE0FA40ED44D0FA403012C705F2E19101D31F01C0018E2BFA003001D4D43021F90070C8CA07CBFFC9D077748018C8CB05CB0258CF165004FA0213CB6BCCCCC971FB00915BE20004F2308EF7CCE7');\n        super(provider, options);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains nft marketplace data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeAddress(this.options.ownerAddress);\n        return cell;\n    }\n\n}\n\nmodule.exports = {NftMarketplace};\n","const {Contract} = require(\"../../index\");\nconst {Cell} = require(\"../../../boc\");\nconst {parseAddress} = require(\"./NftUtils\");\nconst {BN} = require(\"../../../utils\");\n\nconstn\n/**\n * Not release - will change\n */\nclass NftSale extends Contract {\n\n    /**\n     * @param provider\n     * @param options   {{marketplaceAddress: Address, nftAddress: Address, fullPrice: BN, marketplaceFee: BN, royaltyAddress: Address, royaltyAmount: BN, address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc(NFT_SALE_HEX_CODE);\n        super(provider, options);\n\n        this.methods.getData = this.getData.bind(this);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains nft sale data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeAddress(this.options.marketplaceAddress);\n        cell.bits.writeAddress(this.options.nftAddress);\n        cell.bits.writeAddress(null); // nft_owner_address\n        cell.bits.writeCoins(this.options.fullPrice);\n\n        const feesCell = new Cell();\n        feesCell.bits.writeCoins(this.options.marketplaceFee);\n        feesCell.bits.writeAddress(this.options.royaltyAddress);\n        feesCell.bits.writeCoins(this.options.royaltyAmount);\n        cell.refs[0] = feesCell;\n\n        return cell;\n    }\n\n    async getData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_sale_data');\n\n        const marketplaceAddress = parseAddress(result[0]);\n        const nftAddress = parseAddress(result[1]);\n        const nftOwnerAddress = parseAddress(result[2]);\n        const fullPrice = result[3];\n        const marketplaceFee = result[4];\n        const royaltyAddress = parseAddress(result[5]);\n        const royaltyAmount = result[6];\n\n        return {marketplaceAddress, nftAddress, nftOwnerAddress, fullPrice, marketplaceFee, royaltyAddress, royaltyAmount};\n    }\n\n    /**\n     * @param params    {{queryId?: number}}\n     */\n    async createCancelBody(params) {\n        const cell = new Cell();\n        cell.bits.writeUint(3, 32); // cancel op\n        cell.bits.writeUint(params.queryId || 0, 64);\n        return cell;\n    }\n\n}\n\nNftSale.codeHex = NFT_SALE_HEX_CODE;\n\nmodule.exports = {NftSale};","const {JettonMinter} = require(\"./JettonMinter.js\");\nconst {JettonWallet} = require(\"./JettonWallet.js\");\n\nmodule.exports.default = {\n    JettonMinter,\n    JettonWallet\n};","const {Contract} = require(\"../../index\");\nconst {Cell} = require(\"../../../boc\");\nconst {createOffchainUriCell, parseOffchainUriCell, parseAddress} = require(\"../nft/NftUtils\");\nconst {Address, BN, bytesToBase64} = require(\"../../../utils\");\n\nclass JettonMinter extends Contract {\n\n    /**\n     * @param provider\n     * @param options   {{adminAddress: Address, jettonContentUri: string, jettonWalletCodeHex: string, address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBocn        super(provider, options);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains jetton minter data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeCoins(0); // total supply\n        cell.bits.writeAddress(this.options.adminAddress);\n        cell.refs[0] = createOffchainUriCell(this.options.jettonContentUri);\n        cell.refs[1] = Cell.oneFromBoc(this.options.jettonWalletCodeHex);\n        return cell;\n    }\n\n    /**\n     * params   {{jettonAmount: BN, destination: Address, amount: BN, queryId?: number}}\n     * @return {Cell}\n     */\n     createMintBody(params) {\n        const body = new Cell();\n        body.bits.writeUint(21, 32); // OP mint\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.bits.writeAddress(params.destination);\n        body.bits.writeCoins(params.amount); // in Toncoins\n\n        const transferBody = new Cell(); // internal transfer\n        transferBody.bits.writeUint(0x178d4519, 32); // internal_transfer op\n        transferBody.bits.writeUint(params.queryId || 0, 64);\n        transferBody.bits.writeCoins(params.jettonAmount);\n        transferBody.bits.writeAddress(null); // from_address\n        transferBody.bits.writeAddress(null); // response_address\n        transferBody.bits.writeCoins(new BN(0)); // forward_amount\n        transferBody.bits.writeBit(false); // forward_payload in this slice, not separate cell\n\n        body.refs[0] = transferBody;\n        return body;\n    }\n\n    /**\n     * params   {{queryId?: number, newAdminAddress: Address}}\n     * @return {Cell}\n     */\n    createChangeAdminBody(params) {\n        if (params.newAdminAddress === undefined) throw new Error('Specify newAdminAddress');\n\n        const body = new Cell();\n        body.bits.writeUint(3, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.bits.writeAddress(params.newAdminAddress);\n        return body;\n    }\n\n    /**\n     * params   {{jettonContentUri: string, queryId?: number}}\n     * @return {Cell}\n     */\n    createEditContentBody(params) {\n        const body = new Cell();\n        body.bits.writeUint(4, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        body.refs[0] = createOffchainUriCell(params.jettonContentUri);\n        return body;\n    }\n\n    /**\n     * @return {Promise<{ totalSupply: BN, isMutable: boolean, adminAddress: Address|null, jettonContentUri: string, jettonWalletCode: Cell }>}\n     */\n    async getJettonData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_jetton_data');\n\n        const totalSupply = result[0];\n        const isMutable = result[1].toNumber() === -1;\n        const adminAddress = parseAddress(result[2]);\n        const jettonContentUri = parseOffchainUriCell(result[3]);\n        const jettonWalletCode = result[4];\n\n        return {totalSupply, isMutable, adminAddress, jettonContentUri, jettonWalletCode};\n    }\n\n    /**\n     * params   {{ownerAddress: Address}}\n     * @return {Promise<Address>}\n     */\n    async getJettonWalletAddress(ownerAddress) {\n        const myAddress = await this.getAddress();\n        const cell = new Cell()\n        cell.bits.writeAddress(ownerAddress)\n\n        const result = await this.provider.call2(\n            myAddress.toString(),\n            'get_wallet_address',\n            [['tvm.Slice', bytesToBase64(await cell.toBoc(false))]],\n        );\n        return parseAddress(result)\n    }\n\n}\n\nmodule.exports = {JettonMinter};\n","const {Contract} = require(\"../../index\");\nconst {Cell} = require(\"../../../boc\");\nconst {parseAddress} = require(\"../nft/NftUtils\");\nconst {BN} = require(\"../../../utils\");\n\nconst JETTON_WALLET_CODE_HEX = 'B5EE9C7241021201000328000114FF00F4A413F4BCF2C80B0102016202030202CC0405001BA0F605DA89A1F401F481F481A8610201D40607020148080900BB0831C02497C138007434C0C05C6C2544D7C0FC02F83E903E900C7E800C5C75C87E800C7E800C00B4C7E08403E29FA954882EA54C4D167C0238208405E3514654882EA58C511100FC02780D60841657C1EF2EA4D67C02B817C12103FCBC2000113E910C1C2EBCB853600201200A0B020120101101F500F4CFFE803E90087C007B51343E803E903E90350C144DA8548AB1C17CB8B04A30BFFCB8B0950D109C150804D50500F214013E809633C58073C5B33248B232C044BD003D0032C032483E401C1D3232C0B281F2FFF274013E903D010C7E801DE0063232C1540233C59C3E8085F2DAC4F3208405E351467232C7C6600C03F73B51343E803E903E90350C0234CFFE80145468017E903E9014D6F1C1551CDB5C150804D50500F214013E809633C58073C5B33248B232C044BD003D0032C0327E401C1D3232C0B281F2FFF274140371C1472C7CB8B0C2BE80146A2860822625A020822625A004AD822860822625A028062849F8C3C975C2C070C008E00D0E0F009ACB3F5007FA0222CF165006CF1625FA025003CF16C95005CC2391729171E25008A813A08208989680AA008208989680A0A014BCF2E2C504C98040FB001023C85004FA0258CF1601CF16CCC9ED5400705279A018A182107362D09CC8CB1F5230CB3F58FA025007CF165007CF16C9718018C8CB0524CF165006FA0215CB6A14CCC971FB0010241023000E10491038375F040076C200B08E218210D53276DB708010C8CB055008CF165004FA0216CB6A12CB1F12CB3FC972FB0093356C21E203C85004FA0258CF1601CF16CCC9ED5400DB3B51343E803E903E90350C01F4CFFE803E900C145468549271C17CB8B049F0BFFCB8B0A0822625A02A8005A805AF3CB8B0E0841EF765F7B232C7C572CFD400FE8088B3C58073C5B25C60063232C14933C59C3E80B2DAB33260103EC01004F214013E809633C58073C5B3327B55200083200835C87B51343E803E903E90350C0134C7E08405E3514654882EA0841EF765F784EE84AC7CB8B174CFCC7E800C04E81408F214013E809633C58073C5B3327B55205ECCF23D';\n\nclass JettonWallet extends Contract {\n    /**\n     * @param provider\n     * @param options   {{address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc(JETTON_WALLET_CODE_HEX);\n        super(provider, options);\n    }\n\n    /**\n     * @param params    {{queryId?: number, jettonAmount: BN, toAddress: Address, responseAddress: Address, forwardAmount: BN, forwardPayload: Uint8Array}}\n     */\n    async createTransferBody(params) {\n        const cell = new Cell();\n        cell.bits.writeUint(0xf8a7ea5, 32); // request_transfer op\n        cell.bits.writeUint(params.queryId || 0, 64);\n        cell.bits.writeCoins(params.jettonAmount);\n        cell.bits.writeAddress(params.toAddress);\n        cell.bits.writeAddress(params.responseAddress);\n        cell.bits.writeBit(false); // null custom_payload\n        cell.bits.writeCoins(params.forwardAmount || new BN(0));\n        cell.bits.writeBit(false); // forward_payload in this slice, not separate cell\n        if (params.forwardPayload) {\n            cell.bits.writeBytes(params.forwardPayload);\n        }\n        return cell;\n    }\n\n    /**\n     * @param params    {{queryId?: number, jettonAmount: BN, responseAddress: Address}}\n     */\n    async createBurnBody(params) {\n        const cell = new Cell();\n        cell.bits.writeUint(0x595f07bc, 32); // burn op\n        cell.bits.writeUint(params.queryId || 0, 64);\n        cell.bits.writeCoins(params.jettonAmount);\n        cell.bits.writeAddress(params.responseAddress);\n        return cell;\n    }\n\n    async getData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_wallet_data');\n\n        const balance = result[0];\n        const ownerAddress = parseAddress(result[1]);\n        const jettonMinterAddress =  parseAddress(result[2]);\n        const jettonWalletCode = result[3];\n\n        return {balance, ownerAddress, jettonMinterAddress, jettonWalletCode};\n    }\n}\n\nJettonWallet.codeHex = JETTON_WALLET_CODE_HEX;\n\nmodule.exports = {JettonWallet};\n","const {BlockSubscription} = require(\"./BlockSubscription\");\nconst {InMemoryBlockStorage} = require(\"./InMemoryBlockStorage\");\n\nmodule.exports = {BlockSubscription, InMemoryBlockStorage};\n","// NOTE: \"mc\" means masterchain, \"shards\" means shardchains\n\nconst MC_INTERVAL = 10 * 1000;\nconst SHARDS_INTERVAL = 1 * 1000;\n\nconst parseShardBlockNumber = x => {\n    return {\n        workchain: x.workchain,\n        shardId: x.shard,\n        shardBlockNumber: x.seqno\n    }\n}\n\nclass BlockSubscription {\n\n    /**\n     * @param provider  {TonWeb.HttpProvider}\n     * @param storage   persistent storage for storing block numbers that we have already processed.\n     * @param onBlock {(blockHeader: BlockHeader) => Promise<void>} callback which is called for of each block.\n     *                                                       callback may throw an error, in this case the block processing will be interrupted and block will not be saved in the storage as processed.\n     *                                                       shardchain blocks are processed OUT of chronological order.\n     *                                                       masterchain blocks are processed in chronological order.\n     *                                                       for masterchain workchain === -1 and shardId === '-9223372036854775808'\n     * @param options? {startMcBlockNumber:? number, mcInterval?: number, shardsInterval?: number} start masterchain block number from which we start to process blocks.\n     *                                     if not specified, the subscription starts from the last block of the network at the time of launch.\n     */\n    constructor(provider, storage, onBlock, options) {\n        this.provider = provider;\n        this.storage = storage;\n        this.onBlock = onBlock;\n        this.startMcBlockNumber = options ? options.startMcBlockNumber : undefined;\n        this.mcInterval = (options ? options.mcInterval : undefined) || MC_INTERVAL;\n        this.shardsInterval = (options ? options.shardsInterval : undefined) || SHARDS_INTERVAL;\n    }\n\n    async start() {\n        this.stop();\n\n        if (!this.startMcBlockNumber) {\n            this.startMcBlockNumber = (await this.provider.getMasterchainInfo()).last.seqno;\n            if (!this.startMcBlockNumber) throw new Error('Cannot get start mc block number from provider');\n        }\n        const startMcBlockHeader = await this.provider.getMasterchainBlockHeader(this.startMcBlockNumber);\n        this.startLT = startMcBlockHeader.end_lt;\n        if (!this.startLT) throw new Error('Cannot get startLT from provider');\n\n        // MASTERCHAIN\n\n        let isMcProcessing = false;\n\n        const mcTick = async () => {\n            if (isMcProcessing) return;\n\n            isMcProcessing = true;\n\n            try {\n                const lastSavedMcBlock = await this.storage.getLastMasterchainBlockNumber() || this.startMcBlockNumber;\n                if (!lastSavedMcBlock) throw new Error('no init masterchain block in storage');\n                const lastMcBlock = (await this.provider.getMasterchainInfo()).last.seqno;\n                if (!lastMcBlock) throw new Error('invalid last masterchain block from provider');\n\n                for (let i = lastSavedMcBlock + 1; i < lastMcBlock; i++) {\n                    const blockShards = await this.provider.getBlockShards(i);\n                    const blockHeader = await this.provider.getMasterchainBlockHeader(i);\n                    await this.onBlock(blockHeader, blockShards);\n                    await this.storage.insertBlocks(i, blockShards.shards.map(parseShardBlockNumber));\n                }\n            } catch (e) {\n                console.error(e);\n            }\n\n            isMcProcessing = false;\n        }\n\n        this.mcIntervalId = setInterval(() => mcTick(), this.mcInterval);\n        mcTick();\n\n        // SHARDCHAINS\n\n        let isShardsProcessing = false;\n\n        const shardsTick = async () => {\n            if (isShardsProcessing) return;\n\n            isShardsProcessing = true;\n            try {\n                const shardBlock = await this.storage.getUnprocessedShardBlock();\n                if (shardBlock) {\n                    const {workchain, shardId, shardBlockNumber} = shardBlock;\n                    const blockHeader = await this.provider.getBlockHeader(workchain, shardId, shardBlockNumber);\n                    if (blockHeader.end_lt < this.startLT) {\n                        await this.storage.setBlockProcessed(workchain, shardId, shardBlockNumber, []);\n                    } else {\n                        await this.onBlock(blockHeader);\n                        const prevBlocks = blockHeader.prev_blocks.map(parseShardBlockNumber);\n                        await this.storage.setBlockProcessed(workchain, shardId, shardBlockNumber, prevBlocks);\n                    }\n                }\n            } catch (e) {\n                console.log(e);\n            }\n            isShardsProcessing = false;\n        }\n\n        this.shardsIntervalId = setInterval(() => shardsTick(), this.shardsInterval);\n    }\n\n    stop() {\n        clearInterval(this.mcIntervalId);\n        clearInterval(this.shardsIntervalId);\n    }\n}\n\nmodule.exports = {BlockSubscription};\n","/**\n * Storage for storing block numbers that we have already processed.\n * Used by `BlockSubscription`.\n *\n * Dumb in-memory implementation.\n */\nclass InMemoryBlockStorage {\n\n    /**\n     * @param logFunction?   {(text: string) => void}\n     */\n    constructor(logFunction) {\n        this.masterchainBlocks = {}; // mcBlockNumber {number} -> isProcessed {boolean}\n        this.shardchainBlocks = {}; // workchain {number} + shardId {string} + shardBlockNumber {number} -> isProcessed {boolean}\n        this.logFunction = logFunction;\n    }\n\n    /**\n     * @private\n     * Insert new UNprocessed shardchain block numbers\n     * Block number (workchain + shardId + shardBlockNumber) should be IGNORED if it is already in the storage\n     * @param   shardBlockNumbers {[{workchain: number, shardId: string, shardBlockNumber: number}]}\n     */\n    async insertShardBlocks(shardBlockNumbers) {\n        for (const {workchain, shardId, shardBlockNumber} of shardBlockNumbers) {\n            if (this.shardchainBlocks[workchain + '_' + shardId + '_' + shardBlockNumber] !== undefined) continue;\n            if (this.logFunction) {\n                this.logFunction('insert shard ' + workchain + ' ' + shardId + ' ' + shardBlockNumber);\n            }\n            // INSERT INTO shardchainBlocks VALUES (workchain, shardId, shardBlockNumber, FALSE);\n            this.shardchainBlocks[workchain + '_' + shardId + '_' + shardBlockNumber] = false;\n        }\n    }\n\n    /**\n     * Insert new processed masterchain block number & new UNprocessed shardchains blocks numbers\n     * Must be in single DB transaction\n     * @param   mcBlockNumber {number}\n     * @param   shardBlockNumbers {[{workchain: number, shardId: string, shardBlockNumber: number}]}\n     */\n    async insertBlocks(mcBlockNumber, shardBlockNumbers) {\n        if (this.logFunction) {\n            this.logFunction('mc processed ' + mcBlockNumber);\n        }\n        // INSERT INTO masterchainBlocks VALUES (blockNumber, TRUE);\n        if (this.masterchainBlocks[mcBlockNumber] !== undefined) throw new Error('mc already exists ' + mcBlockNumber);\n        this.masterchainBlocks[mcBlockNumber] = true;\n\n        await this.insertShardBlocks(shardBlockNumbers);\n    }\n\n    /**\n     * Get last processed masterchain block number\n     * @return {Promise<number | undefined>}\n     */\n    async getLastMasterchainBlockNumber() {\n        // SELECT MAX(blockNumber) FROM masterchainBlocks\n        const blockNumbers = Object.keys(this.masterchainBlocks)\n            .map(x => Number(x))\n            .sort((a, b) => b - a);\n        return blockNumbers[0];\n    }\n\n    /**\n     * Set that this shardchain block number processed & insert new UNprocessed shardchains blocks numbers\n     * Must be in single DB transaction\n     * @param   workchain {number}\n     * @param   shardId {string}\n     * @param   shardBlockNumber    {number}\n     * @param   prevShardBlocks    {[{workchain: number, shardId: string, shardBlockNumber: number}]}\n     */\n    async setBlockProcessed(workchain, shardId, shardBlockNumber, prevShardBlocks) {\n        if (this.logFunction) {\n            this.logFunction('shard processed ' + workchain + ' ' + shardId + ' ' + shardBlockNumber);\n        }\n        // UPDATE shardchainBlocks SET processed = TRUE WHERE workchain = ? AND shardId = ? AND shardBlockNumber = ?\n        if (this.shardchainBlocks[workchain + '_' + shardId + '_' + shardBlockNumber] === undefined) throw new Error('shard not exists ' + workchain + '_' + shardId + '_' + shardBlockNumber);\n        this.shardchainBlocks[workchain + '_' + shardId + '_' + shardBlockNumber] = true;\n\n        await this.insertShardBlocks(prevShardBlocks);\n    }\n\n    /**\n     * Get any unprocesed shard block number (order is not important)\n     * @return {Promise<{workchain: number, shardId: string, shardBlockNumber: number}>}\n     */\n    async getUnprocessedShardBlock() {\n        // SELECT workchain, shardId, shardBlockNumber from sharchainBlocks WHERE processed = FALSE LIMIT 1\n        for (let key in this.shardchainBlocks) {\n            if (this.shardchainBlocks[key] === false) {\n                const arr = key.split('_');\n                return {\n                    workchain: Number(arr[0]),\n                    shardId: arr[1],\n                    shardBlockNumber: Number(arr[2]),\n                }\n            }\n        }\n        return undefined;\n    }\n\n}\n\nmodule.exports = {InMemoryBlockStorage};","const {Contract} = require(\"../index.js\");\nconst {Cell} = require(\"../../boc\");\nconst {hexToBytes, BN, nacl, bytesToBase64} = require(\"../../utils\");\n\n\nclass SubscriptionContract extends Contract {\n    /**\n     * @param provider\n     * @param options   {{wc: number, wallet: Address, beneficiary: Address, amount: BN, period: number, timeout: number, startAt: number, subscriptionId: number, address?: Address | string}}\n     */\n    constructor(provider, options) {\n        options.code = Cell.oneFromBocn        super(provider, options);\n\n        this.methods.pay = () => Contract.createMethod(provider, this.createPayExternalMessage());\n        this.methods.getSubscriptionData = this.getSubscriptionData.bind(this);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains wallet data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeAddress(this.options.wallet);\n        cell.bits.writeAddress(this.options.beneficiary);\n        cell.bits.writeGrams(this.options.amount);\n        cell.bits.writeUint(this.options.period, 32);\n        cell.bits.writeUint(this.options.startAt, 32); // start_time\n        cell.bits.writeUint(this.options.timeout, 32);\n        cell.bits.writeUint(0, 32); // last_payment_time\n        cell.bits.writeUint(0, 32); // last_request_time\n        cell.bits.writeUint(0, 8); // failed_attempts\n        cell.bits.writeUint(this.options.subscriptionId, 32); // subscription_id\n        return cell;\n    }\n\n    /**\n     * Payment body (from wallet to subscription)\n     * @return {Cell}\n     */\n    createBody() {\n        const body = new Cell();\n        body.bits.writeUint(new BN(0x706c7567).add(new BN(0x80000000)), 32); // op\n        return body;\n    }\n\n    /**\n     * Destroy plugin body (from wallet to subscription OR from beneficiary to subscription)\n     * @return {Cell}\n     */\n    createSelfDestructBody() {\n        const body = new Cell();\n        body.bits.writeUint(0x64737472, 32); // op\n        return body;\n    }\n\n    async getSubscriptionData() {\n        const parseAddress = tuple => tuple[0].toNumber() + ':' + tuple[1].toString(16);\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_subscription_data');\n\n        const wallet = parseAddress(result[0]);\n        const beneficiary = parseAddress(result[1]);\n        const amount = result[2];\n        const period = result[3].toNumber();\n        const startAt = result[4].toNumber(); // start_time\n        const timeout = result[5].toNumber();\n        const lastPayment = result[6].toNumber(); // last_payment_time\n        const lastRequest = result[7].toNumber(); // last_request_time\n        const failedAttempts = result[8].toNumber();\n        const subscriptionId = result[9].toNumber();\n\n        return {wallet, beneficiary, amount, period, startAt, timeout, lastPayment, lastRequest, failedAttempts, subscriptionId};\n    }\n\n    /**\n     * @protected\n     * @return {Promise<{address: Address, signature: Uint8Array, message: Cell, cell: Cell, body: Cell, resultMessage: Cell}>}\n     */\n    async createPayExternalMessage() {\n        const selfAddress = await this.getAddress();\n        const header = Contract.createExternalMessageHeader(selfAddress);\n        const resultMessage = Contract.createCommonMsgInfo(header, null, null);\n        const body = new Cell();\n        body.bits.writeUint(Math.floor(Date.now() / 1000), 64); // this is not required by the contract; just to make it easier to distinguish messages\n\n        return {\n            address: selfAddress,\n            message: resultMessage,\n            body: body\n        };\n    }\n}\n\nmodule.exports = {SubscriptionContract};\n","const {PaymentChannel} = require(\"./PaymentChannel\");\n\nclass Payments {\n    /**\n     * @param provider    {HttpProvider}\n     */\n    constructor(provider) {\n        this.provider = provider;\n    }\n\n    createChannel(options) {\n        return new PaymentChannel(this.provider, options);\n    }\n}\n\nmodule.exports = {Payments, PaymentChannel};","const {Contract} = require(\"../index\");\nconst {Cell} = require(\"../../boc\");\nconst {nacl, hexToBytes, BN} = require(\"../../utils\");\nconst {parseAddress} = require(\"../token/nft/NftUtils\");\nconst {\n    writePublicKey,\n    writeSignature,\n    createSignatureCell,\n    tag_init,\n    tag_cooperative_close,\n    tag_cooperative_commit,\n    tag_start_uncooperative_close,\n    tag_challenge_state,\n    tag_settle_conditionals,\n    tag_state,\n    op_top_up_balance,\n    op_init_channel,\n    op_cooperative_close,\n    op_cooperative_commit,\n    op_start_uncooperative_close,\n    op_challenge_quarantined_state,\n    op_settle_conditionals,\n    op_finish_uncooperative_close,\n    op_channel_closed,\n    createTopUpBalance,\n    createInitChannelBody,\n    createCooperativeCloseChannelBody,\n    createCooperativeCommitBody,\n    createConditionalPayment,\n    createSemiChannelBody,\n    createSemiChannelState,\n    createSignedSemiChannelState,\n    createStartUncooperativeCloseBody,\n    createChallengeQuarantinedStateBody,\n    createSettleConditionalsBody,\n    createFinishUncooperativeClose,\n    createOneSignature,\n    createTwoSignature\n} = require(\"./PaymentUtils\");\n\nconst PAYMENT_CHANNEL_CODE_HEX = 'B5EE9C72410230010007FB000114FF00F4A413F4BCF2C80B0102012002030201480405000AF26C21F0190202CB06070201202E2F020120080902012016170201200A0B0201200C0D0009D3610F80CC001D6B5007434C7FE8034C7CC1BC0FE19E0201580E0F0201201011002D3E11DBC4BE11DBC43232C7FE11DBC47E80B2C7F2407320008B083E1B7B51343480007E187E80007E18BE80007E18F4FFC07E1934FFC07E1974DFC07E19BC01887080A7F4C7C07E1A34C7C07E1A7D01007E1AB7807080E535007E1AF7BE1B2002012012130201201415008D3E13723E11BE117E113E10540132803E10BE80BE10FE8084F2FFC4B2FFF2DFFC02887080A7FE12BE127E121400F2C7C4B2C7FD0037807080E53E12C073253E1333C5B8B27B5520004D1C3C02FE106CFCB8193E803E800C3E1096283E18BE10C0683E18FE10BE10E8006EFCB819BC032000CF1D3C02FE106CFCB819348020C235C6083E4040E4BE1124BE117890CC3E443CB81974C7C060841A5B9A5D2EBCB81A3E118074DFD66EBCB81CBE803E800C3E1094882FBE10D4882FAC3CB819807E18BE18FE12F43E800C3E10BE10E80068006E7CB8199FFE187C0320004120843777222E9C20043232C15401B3C594013E808532DA84B2C7F2DFF2407EC02002012018190201D42B2C0201201A1B0201201E1F0201201C1D00E5473F00BD401D001D401D021F90102D31F01821043436D74BAF2E068F84601D37F59BAF2E072F844544355F910F8454330F910B0F2E065D33FD33F30F84822B9F84922B9B0F2E06C21F86820F869F84A6E915B8E19F84AD0D33FFA003171D721D33F305033BC02BCB1936DF86ADEE2F800F00C8006F3E12F43E800C7E903E900C3E09DBC41CBE10D62F24CC20C1B7BE10FE11963C03FE10BE11A04020BC03DC3E185C3E189C3E18DB7E1ABC032000B51D3C02F5007400750074087E4040B4C7C0608410DB1BDCEEBCB81A3E118074DFD66EBCB81CBE111510D57E443E1150CC3E442C3CB8197E80007E18BE80007E18F4CFF4CFCC3E1208AE7E1248AE6C3CB81B007E1A3E1A7E003C042001C1573F00BF84A6EF2E06AD2008308D71820F9012392F84492F845E24130F910F2E065D31F018210556E436CBAF2E068F84601D37F59BAF2E072D401D08308D71820F901F8444130F910F2E06501D430D08308D71820F901F8454130F910F2E06501820020120222301FED31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE2303205D31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE23032F8485280BEF8495250BEB0524BBE1AB0527ABE19210064B05215BE14B05248BE17B0F2E06970F82305C8CB3F5004FA0215F40015CB3F5004FA0212F400CB1F12CA00CA00C9F86AF00C01C31CFC02FE129BACFCB81AF48020C235C6083E4048E4BE1124BE1178904C3E443CB81974C7C0608410DA19D46EBCB81A3E118074DFD66EBCB81CB5007420C235C6083E407E11104C3E443CB81940750C3420C235C6083E407E11504C3E443CB81940602403F71CFC02FE129BACFCB81AF48020C235C6083E4048E4BE1124BE1178904C3E443CB81974C7C0608410DB10DBAEBCB81A3E118074DFD66EBCB81CBD010C3E12B434CFFE803D0134CFFE803D0134C7FE11DBC4148828083E08EE7CB81BBE11DBC4A83E08EF3CB81C34800C151D5A64D6D4C8F7A2B98E82A49B08B8C3816028292A01FCD31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE2303205D31F01821043685374BAF2E068F84601D37F59BAF2E072D33FFA00F404552003D200019AD401D0D33FFA00F40430937F206DE230325339BE5381BEB0F8495250BEB0F8485290BEB02502FE5237BE16B05262BEB0F2E06927C20097F84918BEF2E0699137E222C20097F84813BEF2E0699132E2F84AD0D33FFA00F404D33FFA00F404D31FF8476F105220A0F823BCF2E06FD200D20030B3F2E073209C3537373A5274BC5263BC12B18E11323939395250BC5299BC18B14650134440E25319BAB3F2E06D9130E30D7F05C82627002496F8476F1114A098F8476F1117A00603E203003ECB3F5004FA0215F40012CB3F5004FA0213F400CB1F12CA00CA00C9F86AF00C00620A8020F4966FA5208E213050038020F4666FA1208E1001FA00ED1E15DA119450C3A00B9133E2923430E202926C21E2B31B000C3535075063140038C8CB3F5004FA0212F400CB3F5003FA0213F400CB1FCA00C9F86AF00C00D51D3C02FE129BACFCB81AFE12B434CFFE803D010C74CFFE803D010C74C7CC3E11DBC4283E11DBC4A83E08EE7CB81C7E003E10886808E87E18BE10D400E816287E18FE10F04026BE10BE10E83E189C3E18F7BE10B04026BE10FE10A83E18DC3E18F780693E1A293E1A7C042001F53B7EF4C7C8608419F1F4A06EA4CC7C037808608403818830AEA54C7C03B6CC780C882084155DD61FAEA54C3C0476CC780820841E6849BBEEA54C3C04B6CC7808208407C546B3EEA54C3C0576CC780820840223AA8CAEA54C3C05B6CC7808208419BDBC1A6EA54C3C05F6CC780C60840950CAA46EA53C0636CC78202D0008840FF2F00075BC7FE3A7805FC25E87D007D207D20184100D0CAF6A1EC7C217C21B7817C227C22B7817C237C23FC247C24B7817C2524C3B7818823881B22A021984008DBD0CABA7805FC20C8B870FC253748B8F07C256840206B90FD0018C020EB90FD0018B8EB90E98F987C23B7882908507C11DE491839707C23B788507C23B789507C11DE48B9F03A4331C4966';\n\nclass PaymentChannel extends Contract {\n\n    /**\n     * @param provider  {HttpProvider}\n     * @param options   {{isA: boolean, channelId: BN, myKeyPair: nacl.SignKeyPair, hisPublicKey: Uint8Array, initBalanceA: BN, initBalanceB: BN, addressA: Address, addressB: Address, closingConfig?: {quarantineDuration: number, misbehaviorFine: BN, conditionalCloseDuration: number}, excessFee?: BN}}\n     */\n    constructor(provider, options) {\n        options.publicKeyA = options.isA ? options.myKeyPair.publicKey : options.hisPublicKey;\n        options.publicKeyB = !options.isA ? options.myKeyPair.publicKey : options.hisPublicKey;\n\n        options.wc = options.wc || 0;\n        options.code = options.code || Cell.oneFromBoc(PAYMENT_CHANNEL_CODE_HEX);\n        super(provider, options);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains payment channel data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeBit(0); // inited\n        cell.bits.writeCoins(0); // balance_A\n        cell.bits.writeCoins(0); // balance_B\n        writePublicKey(cell, this.options.publicKeyA); // key_A\n        writePublicKey(cell, this.options.publicKeyB); // key_B\n        cell.bits.writeUint(this.options.channelId, 128); // channel_id\n\n        const closingConfig = new Cell();\n        closingConfig.bits.writeUint(this.options.closingConfig?.quarantineDuration || 0, 32); // quarantin_duration\n        closingConfig.bits.writeCoins(this.options.closingConfig?.misbehaviorFine || new BN(0)); // misbehavior_fine\n        closingConfig.bits.writeUint(this.options.closingConfig?.conditionalCloseDuration || 0, 32); // conditional_close_duration\n        cell.refs[0] = closingConfig;\n\n        cell.bits.writeUint(0, 32); // commited_seqno_A\n        cell.bits.writeUint(0, 32); // commited_seqno_B\n        cell.bits.writeBit(false); // quarantin ref\n\n        const paymentConfig = new Cell();\n        paymentConfig.bits.writeCoins(this.options.excessFee || new BN(0)); // excess_fee\n        paymentConfig.bits.writeAddress(this.options.addressA); // addr_A\n        paymentConfig.bits.writeAddress(this.options.addressB); // addr_B\n        cell.refs[1] = paymentConfig;\n\n        return cell;\n    }\n\n    /**\n     * @private\n     * @param op    {number}\n     * @param cellForSigning    {Cell}\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createOneSignature(op, cellForSigning) {\n        const signature = nacl.sign.detached(await cellForSigning.hash(), this.options.myKeyPair.secretKey);\n\n        const cell = createOneSignature({\n            op,\n            isA: this.options.isA,\n            signature,\n            cell: cellForSigning\n        });\n\n        return {cell, signature};\n    }\n\n    /**\n     * @private\n     * @param op    {number}\n     * @param hisSignature {Uint8Array}\n     * @param cellForSigning    {Cell}\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createTwoSignature(op, hisSignature, cellForSigning) {\n        const signature = nacl.sign.detached(await cellForSigning.hash(), this.options.myKeyPair.secretKey);\n\n        const signatureA = this.options.isA ? signature : hisSignature;\n        const signatureB = !this.options.isA ? signature : hisSignature;\n\n        const cell = createTwoSignature({\n            op,\n            signatureA,\n            signatureB,\n            cell: cellForSigning\n        });\n\n        return {cell, signature};\n    }\n\n    /**\n     * @param params    {{coinsA: BN, coinsB: BN}}\n     * @returns {Promise<Cell>}\n     */\n    async createTopUpBalance(params) {\n        return createTopUpBalance(params);\n    }\n\n    /**\n     * @param params    {{balanceA: BN, balanceB: BN}}\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createInitChannel(params) {\n        return this.createOneSignature(\n            op_init_channel,\n            createInitChannelBody({...params, channelId: this.options.channelId})\n        );\n    }\n\n    /**\n     * @param params    {{hisSignature?: Uint8Array, balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createCooperativeCloseChannel(params) {\n        if (!params.hisSignature) {\n            params.hisSignature = new Uint8Array(512 / 8);\n        }\n        return this.createTwoSignature(\n            op_cooperative_close,\n            params.hisSignature,\n            createCooperativeCloseChannelBody({...params, channelId: this.options.channelId})\n        )\n    }\n\n    /**\n     * @param params    {{hisSignature?: Uint8Array, seqnoA: BN, seqnoB: BN}}\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createCooperativeCommit(params) {\n        if (!params.hisSignature) {\n            params.hisSignature = new Uint8Array(512 / 8);\n        }\n        return this.createTwoSignature(\n            op_cooperative_commit,\n            params.hisSignature,\n            createCooperativeCommitBody({...params, channelId: this.options.channelId})\n        )\n    }\n\n    /**\n     * @private\n     * @param params    {{mySeqno: BN, mySentCoins: BN, hisSeqno?: BN, hisSentCoins?: BN}}\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createSignedSemiChannelState(params) {\n        const state = createSemiChannelState({\n            channelId: this.options.channelId,\n            semiChannelBody: createSemiChannelBody({\n                seqno: params.mySeqno,\n                sentCoins: params.mySentCoins,\n                conditionals: null\n            }),\n            counterpartySemiChannelBody: params.hisSeqno === undefined ? null : createSemiChannelBody({\n                seqno: params.hisSeqno,\n                sentCoins: params.hisSentCoins,\n                conditionals: null\n            }),\n        });\n        const signature = nacl.sign.detached(await state.hash(), this.options.myKeyPair.secretKey);\n        const cell = createSignedSemiChannelState({signature, state});\n        return {cell, signature};\n    }\n\n    /**\n     * @param params    {{balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n     * @returns {Promise<Uint8Array>} signature\n     */\n    async signState(params) {\n        const mySeqno = this.options.isA ? params.seqnoA : params.seqnoB;\n        const hisSeqno = !this.options.isA ? params.seqnoA : params.seqnoB;\n\n        const sentCoinsA = this.options.initBalanceA.gt(params.balanceA) ? this.options.initBalanceA.sub(params.balanceA) : new BN(0);\n        const sentCoinsB = this.options.initBalanceB.gt(params.balanceB) ? this.options.initBalanceB.sub(params.balanceB) : new BN(0);\n\n        const mySentCoins = this.options.isA ? sentCoinsA : sentCoinsB;\n        const hisSentCoins = !this.options.isA ? sentCoinsA : sentCoinsB;\n\n        const {cell, signature} = await this.createSignedSemiChannelState({\n            mySeqno,\n            mySentCoins,\n            hisSeqno,\n            hisSentCoins\n        });\n\n        return signature;\n    }\n\n    /**\n     * @param params    {{balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n     * @param hisSignature  {Uint8Array}\n     * @returns {Promise<boolean>}\n     */\n    async verifyState(params, hisSignature) {\n        const mySeqno = !this.options.isA ? params.seqnoA : params.seqnoB;\n        const hisSeqno = this.options.isA ? params.seqnoA : params.seqnoB;\n\n        const sentCoinsA = this.options.initBalanceA.gt(params.balanceA) ? this.options.initBalanceA.sub(params.balanceA) : new BN(0);\n        const sentCoinsB = this.options.initBalanceB.gt(params.balanceB) ? this.options.initBalanceB.sub(params.balanceB) : new BN(0);\n\n        const mySentCoins = !this.options.isA ? sentCoinsA : sentCoinsB;\n        const hisSentCoins = this.options.isA ? sentCoinsA : sentCoinsB;\n\n        const state = createSemiChannelState({\n            channelId: this.options.channelId,\n            semiChannelBody: createSemiChannelBody({\n                seqno: mySeqno,\n                sentCoins: mySentCoins,\n                conditionals: null\n            }),\n            counterpartySemiChannelBody: hisSeqno === undefined ? null : createSemiChannelBody({\n                seqno: hisSeqno,\n                sentCoins: hisSentCoins,\n                conditionals: null\n            }),\n        });\n        const hash = await state.hash();\n        return nacl.sign.detached.verify(hash, hisSignature, this.options.isA ? this.options.publicKeyB : this.options.publicKeyA);\n    }\n\n    /**\n     * @param params    {{balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n     * @return {Uint8Array} signature\n     */\n    async signClose(params) {\n        const {cell, signature} = await this.createCooperativeCloseChannel(params);\n        return signature;\n    }\n\n    /**\n     * @param params    {{balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n     * @param hisSignature {Uint8Array}\n     * @return {boolean}\n     */\n    async verifyClose(params, hisSignature) {\n        const cell = await createCooperativeCloseChannelBody({...params, channelId: this.options.channelId});\n        const hash = await cell.hash();\n        return nacl.sign.detached.verify(hash, hisSignature, this.options.isA ? this.options.publicKeyB : this.options.publicKeyA);\n    }\n\n    /**\n     * @param params    {{signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}} `signedSemiChannelState` created by `createSignedSemiChannelState`\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createStartUncooperativeClose(params) {\n        return this.createOneSignature(\n            op_start_uncooperative_close,\n            createStartUncooperativeCloseBody({...params, channelId: this.options.channelId})\n        );\n    }\n\n    /**\n     * @param params   {{signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}} `signedSemiChannelState` created by `createSignedSemiChannelState`\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createChallengeQuarantinedState(params) {\n        return this.createOneSignature(\n            op_challenge_quarantined_state,\n            createChallengeQuarantinedStateBody({...params, channelId: this.options.channelId})\n        );\n    }\n\n    /**\n     * @param params    {{conditionalsToSettle: Cell | null}} dictionary with uint32 keys and values created by `createConditionalPayment`\n     * @returns {Promise<{cell: Cell, signature: Uint8Array}>}\n     */\n    async createSettleConditionals(params) {\n        return this.createOneSignature(\n            op_settle_conditionals,\n            createSettleConditionalsBody({...params, channelId: this.options.channelId})\n        );\n    }\n\n    /**\n     * @returns {Promise<Cell>}\n     */\n    async createFinishUncooperativeClose() {\n        return createFinishUncooperativeClose();\n    }\n\n    static STATE_UNINITED = 0;\n    static STATE_OPEN = 1;\n    static STATE_CLOSURE_STARTED = 2;\n    static STATE_SETTLING_CONDITIONALS = 3;\n    static STATE_AWAITING_FINALIZATION = 4;\n\n    /**\n     * @returns {Promise<number>}\n     */\n    async getChannelState() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_channel_state', []);\n        return result.toNumber();\n    }\n\n    /**\n     * @returns {Promise<{state: number, balanceA: BN, balanceB: BN, publicKeyA: Uint8Array, publicKeyB: Uint8Array, channelId: BN, quarantineDuration: number, misbehaviorFine: BN, conditionalCloseDuration: number, seqnoA: BN, seqnoB: BN, quarantine: Cell, excessFee: BN, addressA: Address, addressB: Address}>}\n     */\n    async getData() {\n        /**\n         * @param bn    {BN}\n         * @return  {Uint8Array}\n         */\n        const bnToBytes = (bn) => {\n            let hex = bn.toString(16);\n            if (hex.length % 2 !== 0) hex = '0' + hex;\n            return hexToBytes(hex);\n        }\n\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_channel_data', []);\n\n        const state = result[0].toNumber();\n        const balanceA = result[1][0];\n        const balanceB = result[1][1];\n        const publicKeyA = bnToBytes(result[2][0]);\n        const publicKeyB = bnToBytes(result[2][1]);\n        const channelId = result[3];\n        const quarantineDuration = result[4][0].toNumber();\n        const misbehaviorFine = result[4][1];\n        const conditionalCloseDuration = result[4][2].toNumber();\n        const seqnoA = result[5][0];\n        const seqnoB = result[5][1];\n        const quarantine = result[6]; // Cell\n        const excessFee = result[7][0];\n        const addressA = parseAddress(result[7][1]);\n        const addressB = parseAddress(result[7][2]);\n        return {\n            state,\n            balanceA,\n            balanceB,\n            publicKeyA,\n            publicKeyB,\n            channelId,\n            quarantineDuration,\n            misbehaviorFine,\n            conditionalCloseDuration,\n            seqnoA,\n            seqnoB,\n            quarantine,\n            excessFee,\n            addressA,\n            addressB\n        }\n    }\n\n    /**\n     * @param params {{wallet: WalletContract, secretKey: Uint8Array}}\n     * @return {{deploy: Function, init: Function, topUp: Function, close: Function, commit: Function, startUncooperativeClose: Function, challengeQuarantinedState: Function, settleConditionals: Function, finishUncooperativeClose: Function}}\n     */\n    fromWallet(params) {\n        const {wallet, secretKey} = params;\n\n        const transfer = (payloadPromise, needStateInit) => {\n\n            const createPromise = async (amount) => {\n                const stateInit = needStateInit ? (await this.createStateInit()).stateInit : null\n                const myAddress = await this.getAddress();\n                const seqno = (await wallet.methods.seqno().call()) || 0;\n                const payload = await payloadPromise;\n\n                return wallet.methods.transfer({\n                    secretKey: secretKey,\n                    toAddress: myAddress.toString(true, true, true),\n                    amount: amount,\n                    seqno: seqno,\n                    payload, // body\n                    stateInit,\n                    sendMode: 3\n                });\n            }\n\n            return {\n                /**\n                 * @param amount    {BN}    in Toncoins\n                 */\n                send: (amount) => {\n                    return createPromise(amount).then(x => x.send());\n                },\n                /**\n                 * @param amount    {BN}    in Toncoins\n                 */\n                estimateFee: (amount) => {\n                    return createPromise(amount).then(x => x.estimateFee());\n                }\n            }\n        }\n\n        return {\n            deploy: () => {\n                return transfer(null, true);\n            },\n            /**\n             * @param params    {{balanceA: BN, balanceB: BN}}\n             */\n            init: (params) => {\n                return transfer(this.createInitChannel(params).then(x => x.cell));\n            },\n            /**\n             * @param params    {{coinsA: BN, coinsB: BN}}\n             */\n            topUp: (params) => {\n                return transfer(this.createTopUpBalance(params));\n            },\n            /**\n             * @param params    {{hisSignature: Uint8Array, balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n             */\n            close: (params) => {\n                return transfer(this.createCooperativeCloseChannel(params).then(x => x.cell));\n            },\n            /**\n             * @param params    {{hisSignature: Uint8Array, seqnoA: BN, seqnoB: BN}}\n             */\n            commit: (params) => {\n                return transfer(this.createCooperativeCommit(params).then(x => x.cell));\n            },\n            /**\n             * @param params    {{signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}}\n             */\n            startUncooperativeClose: (params) => {\n                return transfer(this.createStartUncooperativeClose(params).then(x => x.cell));\n            },\n            /**\n             * @param params    {{signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}}\n             */\n            challengeQuarantinedState: (params) => {\n                return transfer(this.createChallengeQuarantinedState(params).then(x => x.cell));\n            },\n            /**\n             * @param params    {{conditionalsToSettle: Cell | null}}\n             */\n            settleConditionals: (params) => {\n                return transfer(this.createSettleConditionals(params).then(x => x.cell));\n            },\n            /**\n             */\n            finishUncooperativeClose: () => {\n                return transfer(this.createFinishUncooperativeClose());\n            }\n        }\n    }\n\n}\n\nPaymentChannel.codeHex = PAYMENT_CHANNEL_CODE_HEX;\n\nmodule.exports = {PaymentChannel};","const {Cell} = require(\"../../boc\");\n\n/**\n * @param cell  {Cell}\n * @param publicKey {Uint8Array}\n */\nconst writePublicKey = (cell, publicKey) => {\n    if (publicKey.length !== 256 / 8) {\n        throw new Error('invalid publicKey length');\n    }\n    cell.bits.writeBytes(publicKey);\n}\n\n/**\n * @param cell  {Cell}\n * @param signature {Uint8Array}\n */\nconst writeSignature = (cell, signature) => {\n    if (signature.length !== 512 / 8) {\n        throw new Error('invalid signature length');\n    }\n    cell.bits.writeBytes(signature);\n}\n\n/**\n * @param signature {Uint8Array}\n * @returns {Cell}\n */\nconst createSignatureCell = (signature) => {\n    const cell = new Cell();\n    writeSignature(cell, signature);\n    return cell;\n}\n\n/**\n * @param cell  {Cell}\n * @param ref   {Cell}\n */\nconst writeMayBe = (cell, ref) => {\n    if (ref) {\n        cell.bits.writeBit(1);\n        if (cell.refs.length >= 4) {\n            throw new Error('refs overflow')\n        }\n        cell.refs.push(ref);\n    } else {\n        cell.bits.writeBit(0);\n    }\n}\n\n/**\n * @param cell  {Cell}\n * @param ref   {Cell}\n */\nconst writeDict = writeMayBe;\n\nconst tag_init = 0x696e6974;\nconst tag_cooperative_close = 0x436c6f73;\nconst tag_cooperative_commit = 0x43436d74;\nconst tag_start_uncooperative_close = 0x556e436c;\nconst tag_challenge_state = 0x43686751;\nconst tag_settle_conditionals = 0x436c436e;\nconst tag_state = 0x43685374;\n\nconst op_top_up_balance = 1741148801; // crc32(\"top_up_balance add_A:Coins add_B:Coins = InternalMsgBody\");\nconst op_init_channel = 235282626; // crc32(\"init_channel is_A:Bool signature:bits512 tag:# = tag 1768843636 channel_id:uint128 balance_A:Coins balance_B:Coins = InternalMsgBody\");\nconst op_cooperative_close = 1433884798; // crc32(\"cooperative_close sig_A:^bits512 sig_B:^bits512 tag:# = tag 1131179891 channel_id:uint128 balance_A:Coins balance_B:Coins seqno_A:uint64 seqno_B:uint64 = InternalMsgBody\");\nconst op_cooperative_commit = 2040604399; // crc32(\"cooperative_commit sig_A:^bits512 sig_B:^bits512 tag:# = tag 1128492404 channel_id:uint128 seqno_A:uint64 seqno_B:uint64 = InternalMsgBody\");\nconst op_start_uncooperative_close = 521476815; // crc32(\"start_uncooperative_close signed_by_A:Bool signature:bits512 tag:# = tag 1433289580 channel_id:uint128 sch_A:^SignedSemiChannel sch_B:^SignedSemiChannel = InternalMsgBody\");\nconst op_challenge_quarantined_state = 143567410; // crc32(\"challenge_quarantined_state challenged_by_A:Bool signature:bits512 tag:# = tag 1130915665 channel_id:uint128 sch_A:^SignedSemiChannel sch_B:^SignedSemiChannel = InternalMsgBody\");\nconst op_settle_conditionals = 1727459433; // crc32(\"settle_conditionals from_A:Bool signature:bits512 tag:# = tag 1131168622 channel_id:uint128 conditionals_to_settle:HashmapE 32 Cell = InternalMsgBody\");\nconst op_finish_uncooperative_close = 625158801; // crc32(\"finish_uncooperative_close = InternalMsgBody\");\nconst op_channel_closed = -572749638; // crc32(\"channel_closed channel_id:uint128 = InternalMsgBody\");\n\n/**\n * @param params    {{coinsA: BN, coinsB: BN}}\n * @returns {Cell}\n */\nconst createTopUpBalance = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(op_top_up_balance, 32); // OP\n    cell.bits.writeCoins(params.coinsA);\n    cell.bits.writeCoins(params.coinsB);\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, balanceA: BN, balanceB: BN}}\n * @returns {Cell}\n */\nconst createInitChannelBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_init, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.bits.writeCoins(params.balanceA);\n    cell.bits.writeCoins(params.balanceB);\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, balanceA: BN, balanceB: BN, seqnoA: BN, seqnoB: BN}}\n * @returns {Cell}\n */\nconst createCooperativeCloseChannelBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_cooperative_close, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.bits.writeCoins(params.balanceA);\n    cell.bits.writeCoins(params.balanceB);\n    cell.bits.writeUint(params.seqnoA, 64);\n    cell.bits.writeUint(params.seqnoB, 64);\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, seqnoA: BN, seqnoB: BN}}\n * @returns {Cell}\n */\nconst createCooperativeCommitBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_cooperative_commit, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.bits.writeUint(params.seqnoA, 64);\n    cell.bits.writeUint(params.seqnoB, 64);\n    return cell;\n}\n\n/**\n * @param params    {{amount: BN, condition: Cell}} condition is code\n * @returns {Cell}\n */\nconst createConditionalPayment = (params) => {\n    const cell = new Cell();\n    cell.bits.writeCoins(params.amount);\n    cell.writeCell(params.condition);\n    return cell;\n}\n\n/**\n * @param params    {{seqno: BN, sentCoins: BN, conditionals: Cell | null}} conditionals - dictionary with uint32 keys and values created by `createConditionalPayment`\n * @returns {Cell}\n */\nconst createSemiChannelBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(params.seqno, 64); // body start\n    cell.bits.writeCoins(params.sentCoins);\n    writeDict(cell, params.conditionals);  // HashmapE 32 ConditionalPayment\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, semiChannelBody: Cell, counterpartySemiChannelBody?: Cell}} created by `createSemiChannelBody`\n * @returns {Cell}\n */\nconst createSemiChannelState = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_state, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.writeCell(params.semiChannelBody);\n    writeMayBe(cell, params.counterpartySemiChannelBody)\n    return cell;\n}\n\n/**\n * @param params    {{signature: Uint8Array, state: Cell}}  `state` created by `createSemiChannelState`\n */\nconst createSignedSemiChannelState = (params) => {\n    const cell = new Cell();\n    writeSignature(cell, params.signature);\n    cell.writeCell(params.state);\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}} `signedSemiChannelState` created by `createSignedSemiChannelState`\n * @returns {Cell}\n */\nconst createStartUncooperativeCloseBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_start_uncooperative_close, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.refs[0] = params.signedSemiChannelStateA;\n    cell.refs[1] = params.signedSemiChannelStateB;\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, signedSemiChannelStateA: Cell, signedSemiChannelStateB: Cell}} `signedSemiChannelState` created by `createSignedSemiChannelState`\n * @returns {Cell}\n */\nconst createChallengeQuarantinedStateBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_challenge_state, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    cell.refs[0] = params.signedSemiChannelStateA;\n    cell.refs[1] = params.signedSemiChannelStateB;\n    return cell;\n}\n\n/**\n * @param params    {{channelId: BN, conditionalsToSettle: Cell | null}} conditionalsToSettle - dictionary with uint32 keys and values created by `createConditionalPayment`\n * @returns {Cell}\n */\nconst createSettleConditionalsBody = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(tag_settle_conditionals, 32);\n    cell.bits.writeUint(params.channelId, 128);\n    writeDict(cell, params.conditionalsToSettle); // HashmapE 32 Cell\n    return cell;\n}\n\n/**\n * @returns {Cell}\n */\nconst createFinishUncooperativeClose = () => {\n    const cell = new Cell();\n    cell.bits.writeUint(op_finish_uncooperative_close, 32); // OP\n    return cell;\n}\n\n/**\n * @param params    {{op: number, isA: boolean, signature: Uint8Array, cell: Cell}}\n * @return {Cell}\n */\nconst createOneSignature = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(params.op, 32); // OP\n    cell.bits.writeBit(params.isA);\n    writeSignature(cell, params.signature);\n    cell.writeCell(params.cell);\n    return cell;\n}\n\n/**\n * @param params    {{op: number, signatureA: Uint8Array, signatureB: Uint8Array, cell: Cell}}\n * @return {Cell}\n */\nconst createTwoSignature = (params) => {\n    const cell = new Cell();\n    cell.bits.writeUint(params.op, 32); // OP\n    cell.refs[0] = createSignatureCell(params.signatureA);\n    cell.refs[1] = createSignatureCell(params.signatureB);\n    cell.writeCell(params.cell);\n    return cell;\n}\n\nmodule.exports = {\n    writePublicKey,\n    writeSignature,\n    createSignatureCell,\n    tag_init,\n    tag_cooperative_close,\n    tag_cooperative_commit,\n    tag_start_uncooperative_close,\n    tag_challenge_state,\n    tag_settle_conditionals,\n    tag_state,\n    op_top_up_balance,\n    op_init_channel,\n    op_cooperative_close,\n    op_cooperative_commit,\n    op_start_uncooperative_close,\n    op_challenge_quarantined_state,\n    op_settle_conditionals,\n    op_finish_uncooperative_close,\n    op_channel_closed,\n    createTopUpBalance,\n    createInitChannelBody,\n    createCooperativeCloseChannelBody,\n    createCooperativeCommitBody,\n    createConditionalPayment,\n    createSemiChannelBody,\n    createSemiChannelState,\n    createSignedSemiChannelState,\n    createStartUncooperativeCloseBody,\n    createChallengeQuarantinedStateBody,\n    createSettleConditionalsBody,\n    createFinishUncooperativeClose,\n    createOneSignature,\n    createTwoSignature\n};",null,"//@flow\nimport Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  TransportInterfaceNotAvailable,\n  TransportWebUSBGestureRequired,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n} from \"@ledgerhq/errors\";\nimport {\n  getLedgerDevices,\n  getFirstLedgerDevice,\n  requestLedgerDevice,\n  isSupported,\n} from \"./webusb\";\n\nconst configurationValue = 1;\nconst endpointNumber = 3;\n\n/**\n * WebUSB Transport implementation\n * @example\n * import TransportWebUSB from \"@ledgerhq/hw-transport-webusb\";\n * ...\n * TransportWebUSB.create().then(transport => ...)\n */\nexport default class TransportWebUSB extends Transport<USBDevice> {\n  device: USBDevice;\n  deviceModel: ?DeviceModel;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n  interfaceNumber: number;\n\n  constructor(device: USBDevice, interfaceNumber: number) {\n    super();\n    this.device = device;\n    this.interfaceNumber = interfaceNumber;\n    this.deviceModel = identifyUSBProductId(device.productId);\n  }\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<USBDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!unsubscribed) {\n          const deviceModel = identifyUSBProductId(device.productId);\n          observer.next({ type: \"add\", descriptor: device, deviceModel });\n          observer.complete();\n        }\n      },\n      (error) => {\n        if (\n          window.DOMException &&\n          error instanceof window.DOMException &&\n          error.code === 18\n        ) {\n          observer.error(new TransportWebUSBGestureRequired(error.message));\n        } else {\n          observer.error(new TransportOpenUserCancelled(error.message));\n        }\n      }\n    );\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n    return { unsubscribe };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const device = await requestLedgerDevice();\n    return TransportWebUSB.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebUSB.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a USBDevice\n   */\n  static async open(device: USBDevice) {\n    await device.open();\n    if (device.configuration === null) {\n      await device.selectConfiguration(configurationValue);\n    }\n    await gracefullyResetDevice(device);\n    const iface = device.configurations[0].interfaces.find(({ alternates }) =>\n      alternates.some((a) => a.interfaceClass === 255)\n    );\n    if (!iface) {\n      throw new TransportInterfaceNotAvailable(\n        \"No WebUSB interface found for your Ledger device. Please upgrade firmware or contact techsupport.\"\n      );\n    }\n    const interfaceNumber = iface.interfaceNumber;\n    try {\n      await device.claimInterface(interfaceNumber);\n    } catch (e) {\n      await device.close();\n      throw new TransportInterfaceNotAvailable(e.message);\n    }\n    const transport = new TransportWebUSB(device, interfaceNumber);\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        // $FlowFixMe\n        navigator.usb.removeEventListener(\"disconnect\", onDisconnect);\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n    // $FlowFixMe\n    navigator.usb.addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    await this.device.releaseInterface(this.interfaceNumber);\n    await gracefullyResetDevice(this.device);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = (apdu: Buffer): Promise<Buffer> =>\n    this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n\n      const framing = hidFraming(channel, packetSize);\n\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.transferOut(endpointNumber, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n      while (!(result = framing.getReducedResult(acc))) {\n        const r = await this.device.transferIn(endpointNumber, packetSize);\n        const buffer = Buffer.from(r.data.buffer);\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"disconnected\")) {\n        this._emitDisconnect(e);\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n      throw e;\n    });\n\n  setScrambleKey() {}\n}\n\nasync function gracefullyResetDevice(device: USBDevice) {\n  try {\n    await device.reset();\n  } catch (err) {\n    console.warn(err);\n  }\n}\n",null,"//@flow\n\nimport EventEmitter from \"events\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport {\n  TransportRaceCondition,\n  TransportError,\n  StatusCodes,\n  getAltStatusMessage,\n  TransportStatusError,\n} from \"@ledgerhq/errors\";\n\nexport {\n  TransportError,\n  TransportStatusError,\n  StatusCodes,\n  getAltStatusMessage,\n};\n\n/**\n */\nexport type Subscription = { unsubscribe: () => void };\n\n/**\n */\nexport type Device = Object;\n\n/**\n * type: add or remove event\n * descriptor: a parameter that can be passed to open(descriptor)\n * deviceModel: device info on the model (is it a nano s, nano x, ...)\n * device: transport specific device info\n */\nexport type DescriptorEvent<Descriptor> = {\n  type: \"add\" | \"remove\",\n  descriptor: Descriptor,\n  deviceModel?: ?DeviceModel,\n  device?: Device,\n};\n/**\n */\nexport type Observer<Ev> = $ReadOnly<{\n  next: (event: Ev) => mixed,\n  error: (e: any) => mixed,\n  complete: () => mixed,\n}>;\n\n/**\n * Transport defines the generic interface to share between node/u2f impl\n * A **Descriptor** is a parametric type that is up to be determined for the implementation.\n * it can be for instance an ID, an file path, a URL,...\n */\nexport default class Transport<Descriptor> {\n  exchangeTimeout: number = 30000;\n  unresponsiveTimeout: number = 15000;\n  deviceModel: ?DeviceModel = null;\n\n  /**\n   * Statically check if a transport is supported on the user's platform/browser.\n   */\n  static +isSupported: () => Promise<boolean>;\n\n  /**\n   * List once all available descriptors. For a better granularity, checkout `listen()`.\n   * @return a promise of descriptors\n   * @example\n   * TransportFoo.list().then(descriptors => ...)\n   */\n  static +list: () => Promise<Array<Descriptor>>;\n\n  /**\n   * Listen all device events for a given Transport. The method takes an Obverver of DescriptorEvent and returns a Subscription (according to Observable paradigm https://github.com/tc39/proposal-observable )\n   * a DescriptorEvent is a `{ descriptor, type }` object. type can be `\"add\"` or `\"remove\"` and descriptor is a value you can pass to `open(descriptor)`.\n   * each listen() call will first emit all potential device already connected and then will emit events can come over times,\n   * for instance if you plug a USB device after listen() or a bluetooth device become discoverable.\n   * @param observer is an object with a next, error and complete function (compatible with observer pattern)\n   * @return a Subscription object on which you can `.unsubscribe()` to stop listening descriptors.\n   * @example\nconst sub = TransportFoo.listen({\n  next: e => {\n    if (e.type===\"add\") {\n      sub.unsubscribe();\n      const transport = await TransportFoo.open(e.descriptor);\n      ...\n    }\n  },\n  error: error => {},\n  complete: () => {}\n})\n   */\n  static +listen: (\n    observer: Observer<DescriptorEvent<Descriptor>>\n  ) => Subscription;\n\n  /**\n   * attempt to create a Transport instance with potentially a descriptor.\n   * @param descriptor: the descriptor to open the transport with.\n   * @param timeout: an optional timeout\n   * @return a Promise of Transport instance\n   * @example\nTransportFoo.open(descriptor).then(transport => ...)\n   */\n  static +open: (\n    descriptor: Descriptor,\n    timeout?: number\n  ) => Promise<Transport<Descriptor>>;\n\n  /**\n   * low level api to communicate with the device\n   * This method is for implementations to implement but should not be directly called.\n   * Instead, the recommanded way is to use send() method\n   * @param apdu the data to send\n   * @return a Promise of response data\n   */\n  exchange(_apdu: Buffer): Promise<Buffer> {\n    throw new Error(\"exchange not implemented\");\n  }\n\n  /**\n   * set the \"scramble key\" for the next exchanges with the device.\n   * Each App can have a different scramble key and they internally will set it at instanciation.\n   * @param key the scramble key\n   */\n  setScrambleKey(_key: string) {}\n\n  /**\n   * close the exchange with the device.\n   * @return a Promise that ends when the transport is closed.\n   */\n  close(): Promise<void> {\n    return Promise.resolve();\n  }\n\n  _events = new EventEmitter();\n\n  /**\n   * Listen to an event on an instance of transport.\n   * Transport implementation can have specific events. Here is the common events:\n   * * `\"disconnect\"` : triggered if Transport is disconnected\n   */\n  on(eventName: string, cb: Function) {\n    this._events.on(eventName, cb);\n  }\n\n  /**\n   * Stop listening to an event on an instance of transport.\n   */\n  off(eventName: string, cb: Function) {\n    this._events.removeListener(eventName, cb);\n  }\n\n  emit(event: string, ...args: *) {\n    this._events.emit(event, ...args);\n  }\n\n  /**\n   * Enable or not logs of the binary exchange\n   */\n  setDebugMode() {\n    console.warn(\n      \"setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.\"\n    );\n  }\n\n  /**\n   * Set a timeout (in milliseconds) for the exchange call. Only some transport might implement it. (e.g. U2F)\n   */\n  setExchangeTimeout(exchangeTimeout: number) {\n    this.exchangeTimeout = exchangeTimeout;\n  }\n\n  /**\n   * Define the delay before emitting \"unresponsive\" on an exchange that does not respond\n   */\n  setExchangeUnresponsiveTimeout(unresponsiveTimeout: number) {\n    this.unresponsiveTimeout = unresponsiveTimeout;\n  }\n\n  /**\n   * wrapper on top of exchange to simplify work of the implementation.\n   * @param cla\n   * @param ins\n   * @param p1\n   * @param p2\n   * @param data\n   * @param statusList is a list of accepted status code (shorts). [0x9000] by default\n   * @return a Promise of response buffer\n   */\n  send = async (\n    cla: number,\n    ins: number,\n    p1: number,\n    p2: number,\n    data: Buffer = Buffer.alloc(0),\n    statusList: Array<number> = [StatusCodes.OK]\n  ): Promise<Buffer> => {\n    if (data.length >= 256) {\n      throw new TransportError(\n        \"data.length exceed 256 bytes limit. Got: \" + data.length,\n        \"DataLengthTooBig\"\n      );\n    }\n    const response = await this.exchange(\n      Buffer.concat([\n        Buffer.from([cla, ins, p1, p2]),\n        Buffer.from([data.length]),\n        data,\n      ])\n    );\n    const sw = response.readUInt16BE(response.length - 2);\n    if (!statusList.some((s) => s === sw)) {\n      throw new TransportStatusError(sw);\n    }\n    return response;\n  };\n\n  /**\n   * create() allows to open the first descriptor available or\n   * throw if there is none or if timeout is reached.\n   * This is a light helper, alternative to using listen() and open() (that you may need for any more advanced usecase)\n   * @example\nTransportFoo.create().then(transport => ...)\n   */\n  static create(\n    openTimeout?: number = 3000,\n    listenTimeout?: number\n  ): Promise<Transport<Descriptor>> {\n    return new Promise((resolve, reject) => {\n      let found = false;\n      const sub = this.listen({\n        next: (e) => {\n          found = true;\n          if (sub) sub.unsubscribe();\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          this.open(e.descriptor, openTimeout).then(resolve, reject);\n        },\n        error: (e) => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          reject(e);\n        },\n        complete: () => {\n          if (listenTimeoutId) clearTimeout(listenTimeoutId);\n          if (!found) {\n            reject(\n              new TransportError(\n                this.ErrorMessage_NoDeviceFound,\n                \"NoDeviceFound\"\n              )\n            );\n          }\n        },\n      });\n      const listenTimeoutId = listenTimeout\n        ? setTimeout(() => {\n            sub.unsubscribe();\n            reject(\n              new TransportError(\n                this.ErrorMessage_ListenTimeout,\n                \"ListenTimeout\"\n              )\n            );\n          }, listenTimeout)\n        : null;\n    });\n  }\n\n  exchangeBusyPromise: ?Promise<void>;\n\n  // $FlowFixMe\n  exchangeAtomicImpl = async (f) => {\n    if (this.exchangeBusyPromise) {\n      throw new TransportRaceCondition(\n        \"An action was already pending on the Ledger device. Please deny or reconnect.\"\n      );\n    }\n    let resolveBusy;\n    const busyPromise = new Promise((r) => {\n      resolveBusy = r;\n    });\n    this.exchangeBusyPromise = busyPromise;\n    let unresponsiveReached = false;\n    const timeout = setTimeout(() => {\n      unresponsiveReached = true;\n      this.emit(\"unresponsive\");\n    }, this.unresponsiveTimeout);\n    try {\n      const res = await f();\n      if (unresponsiveReached) {\n        this.emit(\"responsive\");\n      }\n      return res;\n    } finally {\n      clearTimeout(timeout);\n      if (resolveBusy) resolveBusy();\n      this.exchangeBusyPromise = null;\n    }\n  };\n\n  decorateAppAPIMethods(\n    self: Object,\n    methods: Array<string>,\n    scrambleKey: string\n  ) {\n    for (let methodName of methods) {\n      self[methodName] = this.decorateAppAPIMethod(\n        methodName,\n        self[methodName],\n        self,\n        scrambleKey\n      );\n    }\n  }\n\n  _appAPIlock = null;\n  decorateAppAPIMethod<R, A: any[]>(\n    methodName: string,\n    f: (...args: A) => Promise<R>,\n    ctx: *,\n    scrambleKey: string\n  ): (...args: A) => Promise<R> {\n    return async (...args) => {\n      const { _appAPIlock } = this;\n      if (_appAPIlock) {\n        return Promise.reject(\n          new TransportError(\n            \"Ledger Device is busy (lock \" + _appAPIlock + \")\",\n            \"TransportLocked\"\n          )\n        );\n      }\n      try {\n        this._appAPIlock = methodName;\n        this.setScrambleKey(scrambleKey);\n        return await f.apply(ctx, args);\n      } finally {\n        this._appAPIlock = null;\n      }\n    };\n  }\n\n  static ErrorMessage_ListenTimeout = \"No Ledger device found (timeout)\";\n  static ErrorMessage_NoDeviceFound = \"No Ledger device found\";\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","/* eslint-disable no-continue */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-param-reassign */\r\n/* eslint-disable no-prototype-builtins */\r\nvar errorClasses = {};\r\nvar deserializers = {};\r\nvar addCustomErrorDeserializer = function (name, deserializer) {\r\n    deserializers[name] = deserializer;\r\n};\r\nvar createCustomErrorClass = function (name) {\r\n    var C = function CustomError(message, fields) {\r\n        Object.assign(this, fields);\r\n        this.name = name;\r\n        this.message = message || name;\r\n        this.stack = new Error().stack;\r\n    };\r\n    C.prototype = new Error();\r\n    errorClasses[name] = C;\r\n    return C;\r\n};\r\n// inspired from https://github.com/programble/errio/blob/master/index.js\r\nvar deserializeError = function (object) {\r\n    if (typeof object === \"object\" && object) {\r\n        try {\r\n            // $FlowFixMe FIXME HACK\r\n            var msg = JSON.parse(object.message);\r\n            if (msg.message && msg.name) {\r\n                object = msg;\r\n            }\r\n        }\r\n        catch (e) {\r\n            // nothing\r\n        }\r\n        var error = void 0;\r\n        if (typeof object.name === \"string\") {\r\n            var name_1 = object.name;\r\n            var des = deserializers[name_1];\r\n            if (des) {\r\n                error = des(object);\r\n            }\r\n            else {\r\n                var constructor = name_1 === \"Error\" ? Error : errorClasses[name_1];\r\n                if (!constructor) {\r\n                    console.warn(\"deserializing an unknown class '\" + name_1 + \"'\");\r\n                    constructor = createCustomErrorClass(name_1);\r\n                }\r\n                error = Object.create(constructor.prototype);\r\n                try {\r\n                    for (var prop in object) {\r\n                        if (object.hasOwnProperty(prop)) {\r\n                            error[prop] = object[prop];\r\n                        }\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    // sometimes setting a property can fail (e.g. .name)\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            error = new Error(object.message);\r\n        }\r\n        if (!error.stack && Error.captureStackTrace) {\r\n            Error.captureStackTrace(error, deserializeError);\r\n        }\r\n        return error;\r\n    }\r\n    return new Error(String(object));\r\n};\r\n// inspired from https://github.com/sindresorhus/serialize-error/blob/master/index.js\r\nvar serializeError = function (value) {\r\n    if (!value)\r\n        return value;\r\n    if (typeof value === \"object\") {\r\n        return destroyCircular(value, []);\r\n    }\r\n    if (typeof value === \"function\") {\r\n        return \"[Function: \" + (value.name || \"anonymous\") + \"]\";\r\n    }\r\n    return value;\r\n};\r\n// https://www.npmjs.com/package/destroy-circular\r\nfunction destroyCircular(from, seen) {\r\n    var to = {};\r\n    seen.push(from);\r\n    for (var _i = 0, _a = Object.keys(from); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        var value = from[key];\r\n        if (typeof value === \"function\") {\r\n            continue;\r\n        }\r\n        if (!value || typeof value !== \"object\") {\r\n            to[key] = value;\r\n            continue;\r\n        }\r\n        if (seen.indexOf(from[key]) === -1) {\r\n            to[key] = destroyCircular(from[key], seen.slice(0));\r\n            continue;\r\n        }\r\n        to[key] = \"[Circular]\";\r\n    }\r\n    if (typeof from.name === \"string\") {\r\n        to.name = from.name;\r\n    }\r\n    if (typeof from.message === \"string\") {\r\n        to.message = from.message;\r\n    }\r\n    if (typeof from.stack === \"string\") {\r\n        to.stack = from.stack;\r\n    }\r\n    return to;\r\n}\n\nvar AccountNameRequiredError = createCustomErrorClass(\"AccountNameRequired\");\r\nvar AccountNotSupported = createCustomErrorClass(\"AccountNotSupported\");\r\nvar AmountRequired = createCustomErrorClass(\"AmountRequired\");\r\nvar BluetoothRequired = createCustomErrorClass(\"BluetoothRequired\");\r\nvar BtcUnmatchedApp = createCustomErrorClass(\"BtcUnmatchedApp\");\r\nvar CantOpenDevice = createCustomErrorClass(\"CantOpenDevice\");\r\nvar CashAddrNotSupported = createCustomErrorClass(\"CashAddrNotSupported\");\r\nvar CurrencyNotSupported = createCustomErrorClass(\"CurrencyNotSupported\");\r\nvar DeviceAppVerifyNotSupported = createCustomErrorClass(\"DeviceAppVerifyNotSupported\");\r\nvar DeviceGenuineSocketEarlyClose = createCustomErrorClass(\"DeviceGenuineSocketEarlyClose\");\r\nvar DeviceNotGenuineError = createCustomErrorClass(\"DeviceNotGenuine\");\r\nvar DeviceOnDashboardExpected = createCustomErrorClass(\"DeviceOnDashboardExpected\");\r\nvar DeviceOnDashboardUnexpected = createCustomErrorClass(\"DeviceOnDashboardUnexpected\");\r\nvar DeviceInOSUExpected = createCustomErrorClass(\"DeviceInOSUExpected\");\r\nvar DeviceHalted = createCustomErrorClass(\"DeviceHalted\");\r\nvar DeviceNameInvalid = createCustomErrorClass(\"DeviceNameInvalid\");\r\nvar DeviceSocketFail = createCustomErrorClass(\"DeviceSocketFail\");\r\nvar DeviceSocketNoBulkStatus = createCustomErrorClass(\"DeviceSocketNoBulkStatus\");\r\nvar DisconnectedDevice = createCustomErrorClass(\"DisconnectedDevice\");\r\nvar DisconnectedDeviceDuringOperation = createCustomErrorClass(\"DisconnectedDeviceDuringOperation\");\r\nvar EnpointConfigError = createCustomErrorClass(\"EnpointConfig\");\r\nvar EthAppPleaseEnableContractData = createCustomErrorClass(\"EthAppPleaseEnableContractData\");\r\nvar FeeEstimationFailed = createCustomErrorClass(\"FeeEstimationFailed\");\r\nvar FirmwareNotRecognized = createCustomErrorClass(\"FirmwareNotRecognized\");\r\nvar HardResetFail = createCustomErrorClass(\"HardResetFail\");\r\nvar InvalidXRPTag = createCustomErrorClass(\"InvalidXRPTag\");\r\nvar InvalidAddress = createCustomErrorClass(\"InvalidAddress\");\r\nvar InvalidAddressBecauseDestinationIsAlsoSource = createCustomErrorClass(\"InvalidAddressBecauseDestinationIsAlsoSource\");\r\nvar LatestMCUInstalledError = createCustomErrorClass(\"LatestMCUInstalledError\");\r\nvar UnknownMCU = createCustomErrorClass(\"UnknownMCU\");\r\nvar LedgerAPIError = createCustomErrorClass(\"LedgerAPIError\");\r\nvar LedgerAPIErrorWithMessage = createCustomErrorClass(\"LedgerAPIErrorWithMessage\");\r\nvar LedgerAPINotAvailable = createCustomErrorClass(\"LedgerAPINotAvailable\");\r\nvar ManagerAppAlreadyInstalledError = createCustomErrorClass(\"ManagerAppAlreadyInstalled\");\r\nvar ManagerAppRelyOnBTCError = createCustomErrorClass(\"ManagerAppRelyOnBTC\");\r\nvar ManagerAppDepInstallRequired = createCustomErrorClass(\"ManagerAppDepInstallRequired\");\r\nvar ManagerAppDepUninstallRequired = createCustomErrorClass(\"ManagerAppDepUninstallRequired\");\r\nvar ManagerDeviceLockedError = createCustomErrorClass(\"ManagerDeviceLocked\");\r\nvar ManagerFirmwareNotEnoughSpaceError = createCustomErrorClass(\"ManagerFirmwareNotEnoughSpace\");\r\nvar ManagerNotEnoughSpaceError = createCustomErrorClass(\"ManagerNotEnoughSpace\");\r\nvar ManagerUninstallBTCDep = createCustomErrorClass(\"ManagerUninstallBTCDep\");\r\nvar NetworkDown = createCustomErrorClass(\"NetworkDown\");\r\nvar NoAddressesFound = createCustomErrorClass(\"NoAddressesFound\");\r\nvar NotEnoughBalance = createCustomErrorClass(\"NotEnoughBalance\");\r\nvar NotEnoughBalanceToDelegate = createCustomErrorClass(\"NotEnoughBalanceToDelegate\");\r\nvar NotEnoughBalanceInParentAccount = createCustomErrorClass(\"NotEnoughBalanceInParentAccount\");\r\nvar NotEnoughSpendableBalance = createCustomErrorClass(\"NotEnoughSpendableBalance\");\r\nvar NotEnoughBalanceBecauseDestinationNotCreated = createCustomErrorClass(\"NotEnoughBalanceBecauseDestinationNotCreated\");\r\nvar NoAccessToCamera = createCustomErrorClass(\"NoAccessToCamera\");\r\nvar NotEnoughGas = createCustomErrorClass(\"NotEnoughGas\");\r\nvar NotSupportedLegacyAddress = createCustomErrorClass(\"NotSupportedLegacyAddress\");\r\nvar GasLessThanEstimate = createCustomErrorClass(\"GasLessThanEstimate\");\r\nvar PasswordsDontMatchError = createCustomErrorClass(\"PasswordsDontMatch\");\r\nvar PasswordIncorrectError = createCustomErrorClass(\"PasswordIncorrect\");\r\nvar RecommendSubAccountsToEmpty = createCustomErrorClass(\"RecommendSubAccountsToEmpty\");\r\nvar RecommendUndelegation = createCustomErrorClass(\"RecommendUndelegation\");\r\nvar TimeoutTagged = createCustomErrorClass(\"TimeoutTagged\");\r\nvar UnexpectedBootloader = createCustomErrorClass(\"UnexpectedBootloader\");\r\nvar MCUNotGenuineToDashboard = createCustomErrorClass(\"MCUNotGenuineToDashboard\");\r\nvar RecipientRequired = createCustomErrorClass(\"RecipientRequired\");\r\nvar UnavailableTezosOriginatedAccountReceive = createCustomErrorClass(\"UnavailableTezosOriginatedAccountReceive\");\r\nvar UnavailableTezosOriginatedAccountSend = createCustomErrorClass(\"UnavailableTezosOriginatedAccountSend\");\r\nvar UpdateFetchFileFail = createCustomErrorClass(\"UpdateFetchFileFail\");\r\nvar UpdateIncorrectHash = createCustomErrorClass(\"UpdateIncorrectHash\");\r\nvar UpdateIncorrectSig = createCustomErrorClass(\"UpdateIncorrectSig\");\r\nvar UpdateYourApp = createCustomErrorClass(\"UpdateYourApp\");\r\nvar UserRefusedDeviceNameChange = createCustomErrorClass(\"UserRefusedDeviceNameChange\");\r\nvar UserRefusedAddress = createCustomErrorClass(\"UserRefusedAddress\");\r\nvar UserRefusedFirmwareUpdate = createCustomErrorClass(\"UserRefusedFirmwareUpdate\");\r\nvar UserRefusedAllowManager = createCustomErrorClass(\"UserRefusedAllowManager\");\r\nvar UserRefusedOnDevice = createCustomErrorClass(\"UserRefusedOnDevice\"); // TODO rename because it's just for transaction refusal\r\nvar TransportOpenUserCancelled = createCustomErrorClass(\"TransportOpenUserCancelled\");\r\nvar TransportInterfaceNotAvailable = createCustomErrorClass(\"TransportInterfaceNotAvailable\");\r\nvar TransportRaceCondition = createCustomErrorClass(\"TransportRaceCondition\");\r\nvar TransportWebUSBGestureRequired = createCustomErrorClass(\"TransportWebUSBGestureRequired\");\r\nvar DeviceShouldStayInApp = createCustomErrorClass(\"DeviceShouldStayInApp\");\r\nvar WebsocketConnectionError = createCustomErrorClass(\"WebsocketConnectionError\");\r\nvar WebsocketConnectionFailed = createCustomErrorClass(\"WebsocketConnectionFailed\");\r\nvar WrongDeviceForAccount = createCustomErrorClass(\"WrongDeviceForAccount\");\r\nvar WrongAppForCurrency = createCustomErrorClass(\"WrongAppForCurrency\");\r\nvar ETHAddressNonEIP = createCustomErrorClass(\"ETHAddressNonEIP\");\r\nvar CantScanQRCode = createCustomErrorClass(\"CantScanQRCode\");\r\nvar FeeNotLoaded = createCustomErrorClass(\"FeeNotLoaded\");\r\nvar FeeRequired = createCustomErrorClass(\"FeeRequired\");\r\nvar FeeTooHigh = createCustomErrorClass(\"FeeTooHigh\");\r\nvar SyncError = createCustomErrorClass(\"SyncError\");\r\nvar PairingFailed = createCustomErrorClass(\"PairingFailed\");\r\nvar GenuineCheckFailed = createCustomErrorClass(\"GenuineCheckFailed\");\r\nvar LedgerAPI4xx = createCustomErrorClass(\"LedgerAPI4xx\");\r\nvar LedgerAPI5xx = createCustomErrorClass(\"LedgerAPI5xx\");\r\nvar FirmwareOrAppUpdateRequired = createCustomErrorClass(\"FirmwareOrAppUpdateRequired\");\r\n// db stuff, no need to translate\r\nvar NoDBPathGiven = createCustomErrorClass(\"NoDBPathGiven\");\r\nvar DBWrongPassword = createCustomErrorClass(\"DBWrongPassword\");\r\nvar DBNotReset = createCustomErrorClass(\"DBNotReset\");\r\n/**\r\n * TransportError is used for any generic transport errors.\r\n * e.g. Error thrown when data received by exchanges are incorrect or if exchanged failed to communicate with the device for various reason.\r\n */\r\nfunction TransportError(message, id) {\r\n    this.name = \"TransportError\";\r\n    this.message = message;\r\n    this.stack = new Error().stack;\r\n    this.id = id;\r\n}\r\nTransportError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportError\", function (e) { return new TransportError(e.message, e.id); });\r\nvar StatusCodes = {\r\n    PIN_REMAINING_ATTEMPTS: 0x63c0,\r\n    INCORRECT_LENGTH: 0x6700,\r\n    MISSING_CRITICAL_PARAMETER: 0x6800,\r\n    COMMAND_INCOMPATIBLE_FILE_STRUCTURE: 0x6981,\r\n    SECURITY_STATUS_NOT_SATISFIED: 0x6982,\r\n    CONDITIONS_OF_USE_NOT_SATISFIED: 0x6985,\r\n    INCORRECT_DATA: 0x6a80,\r\n    NOT_ENOUGH_MEMORY_SPACE: 0x6a84,\r\n    REFERENCED_DATA_NOT_FOUND: 0x6a88,\r\n    FILE_ALREADY_EXISTS: 0x6a89,\r\n    INCORRECT_P1_P2: 0x6b00,\r\n    INS_NOT_SUPPORTED: 0x6d00,\r\n    CLA_NOT_SUPPORTED: 0x6e00,\r\n    TECHNICAL_PROBLEM: 0x6f00,\r\n    OK: 0x9000,\r\n    MEMORY_PROBLEM: 0x9240,\r\n    NO_EF_SELECTED: 0x9400,\r\n    INVALID_OFFSET: 0x9402,\r\n    FILE_NOT_FOUND: 0x9404,\r\n    INCONSISTENT_FILE: 0x9408,\r\n    ALGORITHM_NOT_SUPPORTED: 0x9484,\r\n    INVALID_KCV: 0x9485,\r\n    CODE_NOT_INITIALIZED: 0x9802,\r\n    ACCESS_CONDITION_NOT_FULFILLED: 0x9804,\r\n    CONTRADICTION_SECRET_CODE_STATUS: 0x9808,\r\n    CONTRADICTION_INVALIDATION: 0x9810,\r\n    CODE_BLOCKED: 0x9840,\r\n    MAX_VALUE_REACHED: 0x9850,\r\n    GP_AUTH_FAILED: 0x6300,\r\n    LICENSING: 0x6f42,\r\n    HALTED: 0x6faa,\r\n};\r\nfunction getAltStatusMessage(code) {\r\n    switch (code) {\r\n        // improve text of most common errors\r\n        case 0x6700:\r\n            return \"Incorrect length\";\r\n        case 0x6800:\r\n            return \"Missing critical parameter\";\r\n        case 0x6982:\r\n            return \"Security not satisfied (dongle locked or have invalid access rights)\";\r\n        case 0x6985:\r\n            return \"Condition of use not satisfied (denied by the user?)\";\r\n        case 0x6a80:\r\n            return \"Invalid data received\";\r\n        case 0x6b00:\r\n            return \"Invalid parameter received\";\r\n    }\r\n    if (0x6f00 <= code && code <= 0x6fff) {\r\n        return \"Internal error, please report\";\r\n    }\r\n}\r\n/**\r\n * Error thrown when a device returned a non success status.\r\n * the error.statusCode is one of the `StatusCodes` exported by this library.\r\n */\r\nfunction TransportStatusError(statusCode) {\r\n    this.name = \"TransportStatusError\";\r\n    var statusText = Object.keys(StatusCodes).find(function (k) { return StatusCodes[k] === statusCode; }) ||\r\n        \"UNKNOWN_ERROR\";\r\n    var smsg = getAltStatusMessage(statusCode) || statusText;\r\n    var statusCodeStr = statusCode.toString(16);\r\n    this.message = \"Ledger device: \" + smsg + \" (0x\" + statusCodeStr + \")\";\r\n    this.stack = new Error().stack;\r\n    this.statusCode = statusCode;\r\n    this.statusText = statusText;\r\n}\r\nTransportStatusError.prototype = new Error();\r\naddCustomErrorDeserializer(\"TransportStatusError\", function (e) { return new TransportStatusError(e.statusCode); });\n\nexport { AccountNameRequiredError, AccountNotSupported, AmountRequired, BluetoothRequired, BtcUnmatchedApp, CantOpenDevice, CantScanQRCode, CashAddrNotSupported, CurrencyNotSupported, DBNotReset, DBWrongPassword, DeviceAppVerifyNotSupported, DeviceGenuineSocketEarlyClose, DeviceHalted, DeviceInOSUExpected, DeviceNameInvalid, DeviceNotGenuineError, DeviceOnDashboardExpected, DeviceOnDashboardUnexpected, DeviceShouldStayInApp, DeviceSocketFail, DeviceSocketNoBulkStatus, DisconnectedDevice, DisconnectedDeviceDuringOperation, ETHAddressNonEIP, EnpointConfigError, EthAppPleaseEnableContractData, FeeEstimationFailed, FeeNotLoaded, FeeRequired, FeeTooHigh, FirmwareNotRecognized, FirmwareOrAppUpdateRequired, GasLessThanEstimate, GenuineCheckFailed, HardResetFail, InvalidAddress, InvalidAddressBecauseDestinationIsAlsoSource, InvalidXRPTag, LatestMCUInstalledError, LedgerAPI4xx, LedgerAPI5xx, LedgerAPIError, LedgerAPIErrorWithMessage, LedgerAPINotAvailable, MCUNotGenuineToDashboard, ManagerAppAlreadyInstalledError, ManagerAppDepInstallRequired, ManagerAppDepUninstallRequired, ManagerAppRelyOnBTCError, ManagerDeviceLockedError, ManagerFirmwareNotEnoughSpaceError, ManagerNotEnoughSpaceError, ManagerUninstallBTCDep, NetworkDown, NoAccessToCamera, NoAddressesFound, NoDBPathGiven, NotEnoughBalance, NotEnoughBalanceBecauseDestinationNotCreated, NotEnoughBalanceInParentAccount, NotEnoughBalanceToDelegate, NotEnoughGas, NotEnoughSpendableBalance, NotSupportedLegacyAddress, PairingFailed, PasswordIncorrectError, PasswordsDontMatchError, RecipientRequired, RecommendSubAccountsToEmpty, RecommendUndelegation, StatusCodes, SyncError, TimeoutTagged, TransportError, TransportInterfaceNotAvailable, TransportOpenUserCancelled, TransportRaceCondition, TransportStatusError, TransportWebUSBGestureRequired, UnavailableTezosOriginatedAccountReceive, UnavailableTezosOriginatedAccountSend, UnexpectedBootloader, UnknownMCU, UpdateFetchFileFail, UpdateIncorrectHash, UpdateIncorrectSig, UpdateYourApp, UserRefusedAddress, UserRefusedAllowManager, UserRefusedDeviceNameChange, UserRefusedFirmwareUpdate, UserRefusedOnDevice, WebsocketConnectionError, WebsocketConnectionFailed, WrongAppForCurrency, WrongDeviceForAccount, addCustomErrorDeserializer, createCustomErrorClass, deserializeError, getAltStatusMessage, serializeError };\n",null,"// @flow\n\nimport { TransportError } from \"@ledgerhq/errors\";\n\nexport type ResponseAcc = ?{\n  data: Buffer,\n  dataLength: number,\n  sequence: number,\n};\n\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0,\n};\n\n/**\n *\n */\nconst createHIDframing = (channel: number, packetSize: number) => {\n  return {\n    makeBlocks(apdu: Buffer): Buffer[] {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([\n        data, // fill data with padding\n        Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0),\n      ]);\n\n      const blocks = [];\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n      return blocks;\n    },\n\n    reduceResponse(acc: ResponseAcc, chunk: Buffer): ResponseAcc {\n      let { data, dataLength, sequence } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence,\n      };\n    },\n\n    getReducedResult(acc: ResponseAcc): ?Buffer {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    },\n  };\n};\n\nexport default createHIDframing;\n",null,"// @flow\n\nimport semver from \"semver\";\n\n/**\n * The USB product IDs will be defined as MMII, encoding a model (MM) and an interface bitfield (II)\n *\n ** Model\n * Ledger Nano S : 0x10\n * Ledger Blue : 0x00\n * Ledger Nano X : 0x40\n *\n ** Interface support bitfield\n * Generic HID : 0x01\n * Keyboard HID : 0x02\n * U2F : 0x04\n * CCID : 0x08\n * WebUSB : 0x10\n */\n\nexport const IIGenericHID = 0x01;\nexport const IIKeyboardHID = 0x02;\nexport const IIU2F = 0x04;\nexport const IICCID = 0x08;\nexport const IIWebUSB = 0x10;\n\nconst devices = {\n  blue: {\n    id: \"blue\",\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n  },\n  nanoS: {\n    id: \"nanoS\",\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (firmwareVersion: string): number =>\n      semver.lt(semver.coerce(firmwareVersion), \"2.0.0\") ? 4 * 1024 : 2 * 1024,\n  },\n  nanoX: {\n    id: \"nanoX\",\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: (_firwareVersion: string): number => 4 * 1024,\n    bluetoothSpec: [\n      {\n        // this is the legacy one (prototype version). we will eventually drop it.\n        serviceUuid: \"d973f2e0-b19e-11e2-9e96-0800200c9a66\",\n        notifyUuid: \"d973f2e1-b19e-11e2-9e96-0800200c9a66\",\n        writeUuid: \"d973f2e2-b19e-11e2-9e96-0800200c9a66\",\n      },\n      {\n        serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n        notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n        writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\",\n      },\n    ],\n  },\n};\n\nconst productMap = {\n  Blue: \"blue\",\n  \"Nano S\": \"nanoS\",\n  \"Nano X\": \"nanoX\",\n};\n\n// $FlowFixMe\nconst devicesList: DeviceModel[] = Object.values(devices);\n\n/**\n *\n */\nexport const ledgerUSBVendorId = 0x2c97;\n\n/**\n *\n */\nexport const getDeviceModel = (id: DeviceModelId): DeviceModel => {\n  const info = devices[id];\n  if (!info) throw new Error(\"device '\" + id + \"' does not exist\");\n  return info;\n};\n\n/**\n *\n */\nexport const identifyUSBProductId = (usbProductId: number): ?DeviceModel => {\n  const legacy = devicesList.find((d) => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find((d) => d.productIdMM === mm);\n  return deviceModel;\n};\n\nexport const identifyProductName = (productName: string): ?DeviceModel => {\n  const productId = productMap[productName];\n  const deviceModel = devicesList.find((d) => d.id === productId);\n\n  return deviceModel;\n};\n\nconst bluetoothServices: string[] = [];\nconst serviceUuidToInfos: {\n  [_: string]: BluetoothInfos,\n} = {};\n\nfor (let id in devices) {\n  const deviceModel = devices[id];\n  const { bluetoothSpec } = deviceModel;\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[\n        spec.serviceUuid.replace(/-/g, \"\")\n      ] = { deviceModel, ...spec };\n    }\n  }\n}\n\n/**\n *\n */\nexport const getBluetoothServiceUuids = () => bluetoothServices;\n\n/**\n *\n */\nexport const getInfosForServiceUuid = (uuid: string): ?BluetoothInfos =>\n  serviceUuidToInfos[uuid.toLowerCase()];\n\n/**\n *\n */\nexport type DeviceModelId = $Keys<typeof devices>;\n\n/**\n *\n */\nexport type DeviceModel = {\n  id: DeviceModelId,\n  productName: string,\n  productIdMM: number,\n  legacyUsbProductId: number,\n  usbOnly: boolean,\n  memorySize: number,\n  // blockSize: number, // THIS FIELD IS DEPRECATED, use getBlockSize\n  getBlockSize: (firmwareVersion: string) => number,\n  bluetoothSpec?: Array<{\n    serviceUuid: string,\n    writeUuid: string,\n    notifyUuid: string,\n  }>,\n};\n\n/**\n *\n */\nexport type BluetoothInfos = {\n  deviceModel: DeviceModel,\n  serviceUuid: string,\n  writeUuid: string,\n  notifyUuid: string,\n};\n","// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nmodule.exports = {\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: require('./internal/constants').SEMVER_SPEC_VERSION,\n  SemVer: require('./classes/semver'),\n  compareIdentifiers: require('./internal/identifiers').compareIdentifiers,\n  rcompareIdentifiers: require('./internal/identifiers').rcompareIdentifiers,\n  parse: require('./functions/parse'),\n  valid: require('./functions/valid'),\n  clean: require('./functions/clean'),\n  inc: require('./functions/inc'),\n  diff: require('./functions/diff'),\n  major: require('./functions/major'),\n  minor: require('./functions/minor'),\n  patch: require('./functions/patch'),\n  prerelease: require('./functions/prerelease'),\n  compare: require('./functions/compare'),\n  rcompare: require('./functions/rcompare'),\n  compareLoose: require('./functions/compare-loose'),\n  compareBuild: require('./functions/compare-build'),\n  sort: require('./functions/sort'),\n  rsort: require('./functions/rsort'),\n  gt: require('./functions/gt'),\n  lt: require('./functions/lt'),\n  eq: require('./functions/eq'),\n  neq: require('./functions/neq'),\n  gte: require('./functions/gte'),\n  lte: require('./functions/lte'),\n  cmp: require('./functions/cmp'),\n  coerce: require('./functions/coerce'),\n  Comparator: require('./classes/comparator'),\n  Range: require('./classes/range'),\n  satisfies: require('./functions/satisfies'),\n  toComparators: require('./ranges/to-comparators'),\n  maxSatisfying: require('./ranges/max-satisfying'),\n  minSatisfying: require('./ranges/min-satisfying'),\n  minVersion: require('./ranges/min-version'),\n  validRange: require('./ranges/valid'),\n  outside: require('./ranges/outside'),\n  gtr: require('./ranges/gtr'),\n  ltr: require('./ranges/ltr'),\n  intersects: require('./ranges/intersects'),\n  simplifyRange: require('./ranges/simplify'),\n  subset: require('./ranges/subset'),\n}\n","const { MAX_SAFE_COMPONENT_LENGTH } = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst createToken = (name, value, isGlobal) => {\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '[0-9]+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*')\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+')\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCE', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n","// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\nmodule.exports = {\n  SEMVER_SPEC_VERSION,\n  MAX_LENGTH,\n  MAX_SAFE_INTEGER,\n  MAX_SAFE_COMPONENT_LENGTH,\n}\n","const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier)\n        this.inc('pre', identifier)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier)\n        }\n        this.inc('pre', identifier)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre':\n        if (this.prerelease.length === 0) {\n          this.prerelease = [0]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            this.prerelease.push(0)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = [identifier, 0]\n            }\n          } else {\n            this.prerelease = [identifier, 0]\n          }\n        }\n        break\n\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.format()\n    this.raw = this.version\n    return this\n  }\n}\n\nmodule.exports = SemVer\n","// parse out just the options we care about so we always get a consistent\n// obj with keys in a consistent order.\nconst opts = ['includePrerelease', 'loose', 'rtl']\nconst parseOptions = options =>\n  !options ? {}\n  : typeof options !== 'object' ? { loose: true }\n  : opts.filter(k => options[k]).reduce((o, k) => {\n    o[k] = true\n    return o\n  }, {})\nmodule.exports = parseOptions\n","const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n","const { MAX_LENGTH } = require('../internal/constants')\nconst { re, t } = require('../internal/re')\nconst SemVer = require('../classes/semver')\n\nconst parseOptions = require('../internal/parse-options')\nconst parse = (version, options) => {\n  options = parseOptions(options)\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  const r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nmodule.exports = parse\n","const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n","const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n","const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier) => {\n  if (typeof (options) === 'string') {\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n","const parse = require('./parse')\nconst eq = require('./eq')\n\nconst diff = (version1, version2) => {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    const v1 = parse(version1)\n    const v2 = parse(version2)\n    const hasPre = v1.prerelease.length || v2.prerelease.length\n    const prefix = hasPre ? 'pre' : ''\n    const defaultResult = hasPre ? 'prerelease' : ''\n    for (const key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\nmodule.exports = diff\n","const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n","const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n","const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n","const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n","const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n","const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n","const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n","const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n","const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n","const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n","const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n","const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n","const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n","const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n","const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n","const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n","const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n","const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    let next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(`${match[2]}.${match[3] || '0'}.${match[4] || '0'}`, options)\n}\nmodule.exports = coerce\n","const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (!options || typeof options !== 'object') {\n      options = {\n        loose: !!options,\n        includePrerelease: false,\n      }\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    const sameDirectionIncreasing =\n      (this.operator === '>=' || this.operator === '>') &&\n      (comp.operator === '>=' || comp.operator === '>')\n    const sameDirectionDecreasing =\n      (this.operator === '<=' || this.operator === '<') &&\n      (comp.operator === '<=' || comp.operator === '<')\n    const sameSemVer = this.semver.version === comp.semver.version\n    const differentDirectionsInclusive =\n      (this.operator === '>=' || this.operator === '<=') &&\n      (comp.operator === '>=' || comp.operator === '<=')\n    const oppositeDirectionsLessThan =\n      cmp(this.semver, '<', comp.semver, options) &&\n      (this.operator === '>=' || this.operator === '>') &&\n        (comp.operator === '<=' || comp.operator === '<')\n    const oppositeDirectionsGreaterThan =\n      cmp(this.semver, '>', comp.semver, options) &&\n      (this.operator === '<=' || this.operator === '<') &&\n        (comp.operator === '>=' || comp.operator === '>')\n\n    return (\n      sameDirectionIncreasing ||\n      sameDirectionDecreasing ||\n      (sameSemVer && differentDirectionsInclusive) ||\n      oppositeDirectionsLessThan ||\n      oppositeDirectionsGreaterThan\n    )\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n","// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First, split based on boolean or ||\n    this.raw = range\n    this.set = range\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${range}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => {\n        return comps.join(' ').trim()\n      })\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    range = range.trim()\n\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts = Object.keys(this.options).join(',')\n    const memoKey = `parseRange:${memoOpts}:${range}`\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n    // normalize spaces\n    range = range.split(/\\s+/).join(' ')\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\nmodule.exports = Range\n\nconst LRU = require('lru-cache')\nconst cache = new LRU({ max: 1000 })\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\nconst replaceTildes = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceTilde(c, options)\n  }).join(' ')\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\nconst replaceCarets = (comp, options) =>\n  comp.trim().split(/\\s+/).map((c) => {\n    return replaceCaret(c, options)\n  }).join(' ')\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map((c) => {\n    return replaceXRange(c, options)\n  }).join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp.trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return (`${from} ${to}`).trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n","'use strict'\n\n// A linked list to keep track of recently-used-ness\nconst Yallist = require('yallist')\n\nconst MAX = Symbol('max')\nconst LENGTH = Symbol('length')\nconst LENGTH_CALCULATOR = Symbol('lengthCalculator')\nconst ALLOW_STALE = Symbol('allowStale')\nconst MAX_AGE = Symbol('maxAge')\nconst DISPOSE = Symbol('dispose')\nconst NO_DISPOSE_ON_SET = Symbol('noDisposeOnSet')\nconst LRU_LIST = Symbol('lruList')\nconst CACHE = Symbol('cache')\nconst UPDATE_AGE_ON_GET = Symbol('updateAgeOnGet')\n\nconst naiveLength = () => 1\n\n// lruList is a yallist where the head is the youngest\n// item, and the tail is the oldest.  the list contains the Hit\n// objects as the entries.\n// Each Hit object has a reference to its Yallist.Node.  This\n// never changes.\n//\n// cache is a Map (or PseudoMap) that matches the keys to\n// the Yallist.Node object.\nclass LRUCache {\n  constructor (options) {\n    if (typeof options === 'number')\n      options = { max: options }\n\n    if (!options)\n      options = {}\n\n    if (options.max && (typeof options.max !== 'number' || options.max < 0))\n      throw new TypeError('max must be a non-negative number')\n    // Kind of weird to have a default max of Infinity, but oh well.\n    const max = this[MAX] = options.max || Infinity\n\n    const lc = options.length || naiveLength\n    this[LENGTH_CALCULATOR] = (typeof lc !== 'function') ? naiveLength : lc\n    this[ALLOW_STALE] = options.stale || false\n    if (options.maxAge && typeof options.maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n    this[MAX_AGE] = options.maxAge || 0\n    this[DISPOSE] = options.dispose\n    this[NO_DISPOSE_ON_SET] = options.noDisposeOnSet || false\n    this[UPDATE_AGE_ON_GET] = options.updateAgeOnGet || false\n    this.reset()\n  }\n\n  // resize the cache when the max changes.\n  set max (mL) {\n    if (typeof mL !== 'number' || mL < 0)\n      throw new TypeError('max must be a non-negative number')\n\n    this[MAX] = mL || Infinity\n    trim(this)\n  }\n  get max () {\n    return this[MAX]\n  }\n\n  set allowStale (allowStale) {\n    this[ALLOW_STALE] = !!allowStale\n  }\n  get allowStale () {\n    return this[ALLOW_STALE]\n  }\n\n  set maxAge (mA) {\n    if (typeof mA !== 'number')\n      throw new TypeError('maxAge must be a non-negative number')\n\n    this[MAX_AGE] = mA\n    trim(this)\n  }\n  get maxAge () {\n    return this[MAX_AGE]\n  }\n\n  // resize the cache when the lengthCalculator changes.\n  set lengthCalculator (lC) {\n    if (typeof lC !== 'function')\n      lC = naiveLength\n\n    if (lC !== this[LENGTH_CALCULATOR]) {\n      this[LENGTH_CALCULATOR] = lC\n      this[LENGTH] = 0\n      this[LRU_LIST].forEach(hit => {\n        hit.length = this[LENGTH_CALCULATOR](hit.value, hit.key)\n        this[LENGTH] += hit.length\n      })\n    }\n    trim(this)\n  }\n  get lengthCalculator () { return this[LENGTH_CALCULATOR] }\n\n  get length () { return this[LENGTH] }\n  get itemCount () { return this[LRU_LIST].length }\n\n  rforEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].tail; walker !== null;) {\n      const prev = walker.prev\n      forEachStep(this, fn, walker, thisp)\n      walker = prev\n    }\n  }\n\n  forEach (fn, thisp) {\n    thisp = thisp || this\n    for (let walker = this[LRU_LIST].head; walker !== null;) {\n      const next = walker.next\n      forEachStep(this, fn, walker, thisp)\n      walker = next\n    }\n  }\n\n  keys () {\n    return this[LRU_LIST].toArray().map(k => k.key)\n  }\n\n  values () {\n    return this[LRU_LIST].toArray().map(k => k.value)\n  }\n\n  reset () {\n    if (this[DISPOSE] &&\n        this[LRU_LIST] &&\n        this[LRU_LIST].length) {\n      this[LRU_LIST].forEach(hit => this[DISPOSE](hit.key, hit.value))\n    }\n\n    this[CACHE] = new Map() // hash of items by key\n    this[LRU_LIST] = new Yallist() // list of items in order of use recency\n    this[LENGTH] = 0 // length of items in the list\n  }\n\n  dump () {\n    return this[LRU_LIST].map(hit =>\n      isStale(this, hit) ? false : {\n        k: hit.key,\n        v: hit.value,\n        e: hit.now + (hit.maxAge || 0)\n      }).toArray().filter(h => h)\n  }\n\n  dumpLru () {\n    return this[LRU_LIST]\n  }\n\n  set (key, value, maxAge) {\n    maxAge = maxAge || this[MAX_AGE]\n\n    if (maxAge && typeof maxAge !== 'number')\n      throw new TypeError('maxAge must be a number')\n\n    const now = maxAge ? Date.now() : 0\n    const len = this[LENGTH_CALCULATOR](value, key)\n\n    if (this[CACHE].has(key)) {\n      if (len > this[MAX]) {\n        del(this, this[CACHE].get(key))\n        return false\n      }\n\n      const node = this[CACHE].get(key)\n      const item = node.value\n\n      // dispose of the old one before overwriting\n      // split out into 2 ifs for better coverage tracking\n      if (this[DISPOSE]) {\n        if (!this[NO_DISPOSE_ON_SET])\n          this[DISPOSE](key, item.value)\n      }\n\n      item.now = now\n      item.maxAge = maxAge\n      item.value = value\n      this[LENGTH] += len - item.length\n      item.length = len\n      this.get(key)\n      trim(this)\n      return true\n    }\n\n    const hit = new Entry(key, value, len, now, maxAge)\n\n    // oversized objects fall out of cache automatically.\n    if (hit.length > this[MAX]) {\n      if (this[DISPOSE])\n        this[DISPOSE](key, value)\n\n      return false\n    }\n\n    this[LENGTH] += hit.length\n    this[LRU_LIST].unshift(hit)\n    this[CACHE].set(key, this[LRU_LIST].head)\n    trim(this)\n    return true\n  }\n\n  has (key) {\n    if (!this[CACHE].has(key)) return false\n    const hit = this[CACHE].get(key).value\n    return !isStale(this, hit)\n  }\n\n  get (key) {\n    return get(this, key, true)\n  }\n\n  peek (key) {\n    return get(this, key, false)\n  }\n\n  pop () {\n    const node = this[LRU_LIST].tail\n    if (!node)\n      return null\n\n    del(this, node)\n    return node.value\n  }\n\n  del (key) {\n    del(this, this[CACHE].get(key))\n  }\n\n  load (arr) {\n    // reset the cache\n    this.reset()\n\n    const now = Date.now()\n    // A previous serialized cache has the most recent items first\n    for (let l = arr.length - 1; l >= 0; l--) {\n      const hit = arr[l]\n      const expiresAt = hit.e || 0\n      if (expiresAt === 0)\n        // the item was created without expiration in a non aged cache\n        this.set(hit.k, hit.v)\n      else {\n        const maxAge = expiresAt - now\n        // dont add already expired items\n        if (maxAge > 0) {\n          this.set(hit.k, hit.v, maxAge)\n        }\n      }\n    }\n  }\n\n  prune () {\n    this[CACHE].forEach((value, key) => get(this, key, false))\n  }\n}\n\nconst get = (self, key, doUse) => {\n  const node = self[CACHE].get(key)\n  if (node) {\n    const hit = node.value\n    if (isStale(self, hit)) {\n      del(self, node)\n      if (!self[ALLOW_STALE])\n        return undefined\n    } else {\n      if (doUse) {\n        if (self[UPDATE_AGE_ON_GET])\n          node.value.now = Date.now()\n        self[LRU_LIST].unshiftNode(node)\n      }\n    }\n    return hit.value\n  }\n}\n\nconst isStale = (self, hit) => {\n  if (!hit || (!hit.maxAge && !self[MAX_AGE]))\n    return false\n\n  const diff = Date.now() - hit.now\n  return hit.maxAge ? diff > hit.maxAge\n    : self[MAX_AGE] && (diff > self[MAX_AGE])\n}\n\nconst trim = self => {\n  if (self[LENGTH] > self[MAX]) {\n    for (let walker = self[LRU_LIST].tail;\n      self[LENGTH] > self[MAX] && walker !== null;) {\n      // We know that we're about to delete this one, and also\n      // what the next least recently used key will be, so just\n      // go ahead and set it now.\n      const prev = walker.prev\n      del(self, walker)\n      walker = prev\n    }\n  }\n}\n\nconst del = (self, node) => {\n  if (node) {\n    const hit = node.value\n    if (self[DISPOSE])\n      self[DISPOSE](hit.key, hit.value)\n\n    self[LENGTH] -= hit.length\n    self[CACHE].delete(hit.key)\n    self[LRU_LIST].removeNode(node)\n  }\n}\n\nclass Entry {\n  constructor (key, value, length, now, maxAge) {\n    this.key = key\n    this.value = value\n    this.length = length\n    this.now = now\n    this.maxAge = maxAge || 0\n  }\n}\n\nconst forEachStep = (self, fn, node, thisp) => {\n  let hit = node.value\n  if (isStale(self, hit)) {\n    del(self, node)\n    if (!self[ALLOW_STALE])\n      hit = undefined\n  }\n  if (hit)\n    fn.call(thisp, hit.value, hit.key, self)\n}\n\nmodule.exports = LRUCache\n","'use strict'\nmodule.exports = Yallist\n\nYallist.Node = Node\nYallist.create = Yallist\n\nfunction Yallist (list) {\n  var self = this\n  if (!(self instanceof Yallist)) {\n    self = new Yallist()\n  }\n\n  self.tail = null\n  self.head = null\n  self.length = 0\n\n  if (list && typeof list.forEach === 'function') {\n    list.forEach(function (item) {\n      self.push(item)\n    })\n  } else if (arguments.length > 0) {\n    for (var i = 0, l = arguments.length; i < l; i++) {\n      self.push(arguments[i])\n    }\n  }\n\n  return self\n}\n\nYallist.prototype.removeNode = function (node) {\n  if (node.list !== this) {\n    throw new Error('removing node which does not belong to this list')\n  }\n\n  var next = node.next\n  var prev = node.prev\n\n  if (next) {\n    next.prev = prev\n  }\n\n  if (prev) {\n    prev.next = next\n  }\n\n  if (node === this.head) {\n    this.head = next\n  }\n  if (node === this.tail) {\n    this.tail = prev\n  }\n\n  node.list.length--\n  node.next = null\n  node.prev = null\n  node.list = null\n\n  return next\n}\n\nYallist.prototype.unshiftNode = function (node) {\n  if (node === this.head) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var head = this.head\n  node.list = this\n  node.next = head\n  if (head) {\n    head.prev = node\n  }\n\n  this.head = node\n  if (!this.tail) {\n    this.tail = node\n  }\n  this.length++\n}\n\nYallist.prototype.pushNode = function (node) {\n  if (node === this.tail) {\n    return\n  }\n\n  if (node.list) {\n    node.list.removeNode(node)\n  }\n\n  var tail = this.tail\n  node.list = this\n  node.prev = tail\n  if (tail) {\n    tail.next = node\n  }\n\n  this.tail = node\n  if (!this.head) {\n    this.head = node\n  }\n  this.length++\n}\n\nYallist.prototype.push = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    push(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.unshift = function () {\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    unshift(this, arguments[i])\n  }\n  return this.length\n}\n\nYallist.prototype.pop = function () {\n  if (!this.tail) {\n    return undefined\n  }\n\n  var res = this.tail.value\n  this.tail = this.tail.prev\n  if (this.tail) {\n    this.tail.next = null\n  } else {\n    this.head = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.shift = function () {\n  if (!this.head) {\n    return undefined\n  }\n\n  var res = this.head.value\n  this.head = this.head.next\n  if (this.head) {\n    this.head.prev = null\n  } else {\n    this.tail = null\n  }\n  this.length--\n  return res\n}\n\nYallist.prototype.forEach = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.head, i = 0; walker !== null; i++) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.next\n  }\n}\n\nYallist.prototype.forEachReverse = function (fn, thisp) {\n  thisp = thisp || this\n  for (var walker = this.tail, i = this.length - 1; walker !== null; i--) {\n    fn.call(thisp, walker.value, i, this)\n    walker = walker.prev\n  }\n}\n\nYallist.prototype.get = function (n) {\n  for (var i = 0, walker = this.head; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.next\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.getReverse = function (n) {\n  for (var i = 0, walker = this.tail; walker !== null && i < n; i++) {\n    // abort out of the list early if we hit a cycle\n    walker = walker.prev\n  }\n  if (i === n && walker !== null) {\n    return walker.value\n  }\n}\n\nYallist.prototype.map = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.head; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.next\n  }\n  return res\n}\n\nYallist.prototype.mapReverse = function (fn, thisp) {\n  thisp = thisp || this\n  var res = new Yallist()\n  for (var walker = this.tail; walker !== null;) {\n    res.push(fn.call(thisp, walker.value, this))\n    walker = walker.prev\n  }\n  return res\n}\n\nYallist.prototype.reduce = function (fn, initial) {\n  var acc\n  var walker = this.head\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.head) {\n    walker = this.head.next\n    acc = this.head.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = 0; walker !== null; i++) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.next\n  }\n\n  return acc\n}\n\nYallist.prototype.reduceReverse = function (fn, initial) {\n  var acc\n  var walker = this.tail\n  if (arguments.length > 1) {\n    acc = initial\n  } else if (this.tail) {\n    walker = this.tail.prev\n    acc = this.tail.value\n  } else {\n    throw new TypeError('Reduce of empty list with no initial value')\n  }\n\n  for (var i = this.length - 1; walker !== null; i--) {\n    acc = fn(acc, walker.value, i)\n    walker = walker.prev\n  }\n\n  return acc\n}\n\nYallist.prototype.toArray = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.head; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.next\n  }\n  return arr\n}\n\nYallist.prototype.toArrayReverse = function () {\n  var arr = new Array(this.length)\n  for (var i = 0, walker = this.tail; walker !== null; i++) {\n    arr[i] = walker.value\n    walker = walker.prev\n  }\n  return arr\n}\n\nYallist.prototype.slice = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = 0, walker = this.head; walker !== null && i < from; i++) {\n    walker = walker.next\n  }\n  for (; walker !== null && i < to; i++, walker = walker.next) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.sliceReverse = function (from, to) {\n  to = to || this.length\n  if (to < 0) {\n    to += this.length\n  }\n  from = from || 0\n  if (from < 0) {\n    from += this.length\n  }\n  var ret = new Yallist()\n  if (to < from || to < 0) {\n    return ret\n  }\n  if (from < 0) {\n    from = 0\n  }\n  if (to > this.length) {\n    to = this.length\n  }\n  for (var i = this.length, walker = this.tail; walker !== null && i > to; i--) {\n    walker = walker.prev\n  }\n  for (; walker !== null && i > from; i--, walker = walker.prev) {\n    ret.push(walker.value)\n  }\n  return ret\n}\n\nYallist.prototype.splice = function (start, deleteCount, ...nodes) {\n  if (start > this.length) {\n    start = this.length - 1\n  }\n  if (start < 0) {\n    start = this.length + start;\n  }\n\n  for (var i = 0, walker = this.head; walker !== null && i < start; i++) {\n    walker = walker.next\n  }\n\n  var ret = []\n  for (var i = 0; walker && i < deleteCount; i++) {\n    ret.push(walker.value)\n    walker = this.removeNode(walker)\n  }\n  if (walker === null) {\n    walker = this.tail\n  }\n\n  if (walker !== this.head && walker !== this.tail) {\n    walker = walker.prev\n  }\n\n  for (var i = 0; i < nodes.length; i++) {\n    walker = insert(this, walker, nodes[i])\n  }\n  return ret;\n}\n\nYallist.prototype.reverse = function () {\n  var head = this.head\n  var tail = this.tail\n  for (var walker = head; walker !== null; walker = walker.prev) {\n    var p = walker.prev\n    walker.prev = walker.next\n    walker.next = p\n  }\n  this.head = tail\n  this.tail = head\n  return this\n}\n\nfunction insert (self, node, value) {\n  var inserted = node === self.head ?\n    new Node(value, null, node, self) :\n    new Node(value, node, node.next, self)\n\n  if (inserted.next === null) {\n    self.tail = inserted\n  }\n  if (inserted.prev === null) {\n    self.head = inserted\n  }\n\n  self.length++\n\n  return inserted\n}\n\nfunction push (self, item) {\n  self.tail = new Node(item, self.tail, null, self)\n  if (!self.head) {\n    self.head = self.tail\n  }\n  self.length++\n}\n\nfunction unshift (self, item) {\n  self.head = new Node(item, null, self.head, self)\n  if (!self.tail) {\n    self.tail = self.head\n  }\n  self.length++\n}\n\nfunction Node (value, prev, next, list) {\n  if (!(this instanceof Node)) {\n    return new Node(value, prev, next, list)\n  }\n\n  this.list = list\n  this.value = value\n\n  if (prev) {\n    prev.next = this\n    this.prev = prev\n  } else {\n    this.prev = null\n  }\n\n  if (next) {\n    next.prev = this\n    this.next = next\n  } else {\n    this.next = null\n  }\n}\n\ntry {\n  // add if support for Symbol.iterator is present\n  require('./iterator.js')(Yallist)\n} catch (er) {}\n","'use strict'\nmodule.exports = function (Yallist) {\n  Yallist.prototype[Symbol.iterator] = function* () {\n    for (let walker = this.head; walker; walker = walker.next) {\n      yield walker.value\n    }\n  }\n}\n","const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n","const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n","const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n","const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n","const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n","// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n","const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n","const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\nmodule.exports = intersects\n","// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n","const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = [new Comparator('>=0.0.0-0')]\n    } else {\n      sub = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = [new Comparator('>=0.0.0')]\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n",null,"// @flow\n\n/**\n * A Log object\n */\nexport type Log = {\n  type: string,\n  message?: string,\n  data?: any,\n  id: string, // unique amount all logs\n  date: Date, // date of the log\n};\n\nexport type Unsubscribe = () => void;\n\nlet id = 0;\nconst subscribers = [];\n\n/**\n * log something\n * @param type a namespaced identifier of the log (it is not a level like \"debug\", \"error\" but more like \"apdu-in\", \"apdu-out\", etc...)\n * @param message a clear message of the log associated to the type\n */\nexport const log = (type: string, message?: string, data?: any) => {\n  const obj: Log = { type, id: String(++id), date: new Date() };\n  if (message) obj.message = message;\n  if (data) obj.data = data;\n  dispatch(obj);\n};\n\n/**\n * listen to logs.\n * @param cb that is called for each future log() with the Log object\n * @return a function that can be called to unsubscribe the listener\n */\nexport const listen = (cb: (Log) => void): Unsubscribe => {\n  subscribers.push(cb);\n  return () => {\n    const i = subscribers.indexOf(cb);\n    if (i !== -1) {\n      // equivalent of subscribers.splice(i, 1) // https://twitter.com/Rich_Harris/status/1125850391155965952\n      subscribers[i] = subscribers[subscribers.length - 1];\n      subscribers.pop();\n    }\n  };\n};\n\nfunction dispatch(log: Log) {\n  for (let i = 0; i < subscribers.length; i++) {\n    try {\n      subscribers[i](log);\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n// for debug purpose\nif (typeof window !== \"undefined\") {\n  window.__ledgerLogsListen = listen;\n}\n",null,"// @flow\nimport { ledgerUSBVendorId } from \"@ledgerhq/devices\";\n\nconst ledgerDevices = [{ vendorId: ledgerUSBVendorId }];\n\nexport async function requestLedgerDevice(): Promise<USBDevice> {\n  // $FlowFixMe\n  const device = await navigator.usb.requestDevice({ filters: ledgerDevices });\n  return device;\n}\n\nexport async function getLedgerDevices(): Promise<USBDevice[]> {\n  // $FlowFixMe\n  const devices = await navigator.usb.getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nexport async function getFirstLedgerDevice(): Promise<USBDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  return requestLedgerDevice();\n}\n\nexport const isSupported = (): Promise<boolean> =>\n  Promise.resolve(\n    !!navigator &&\n      // $FlowFixMe\n      !!navigator.usb &&\n      typeof navigator.usb.getDevices === \"function\"\n  );\n",null,"//@flow\nimport Transport from \"@ledgerhq/hw-transport\";\nimport type {\n  Observer,\n  DescriptorEvent,\n  Subscription,\n} from \"@ledgerhq/hw-transport\";\nimport hidFraming from \"@ledgerhq/devices/lib/hid-framing\";\nimport { identifyUSBProductId, ledgerUSBVendorId } from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { log } from \"@ledgerhq/logs\";\nimport {\n  TransportOpenUserCancelled,\n  DisconnectedDeviceDuringOperation,\n  DisconnectedDevice,\n  TransportError,\n} from \"@ledgerhq/errors\";\n\nconst ledgerDevices = [{ vendorId: ledgerUSBVendorId }];\n\nconst isSupported = () =>\n  Promise.resolve(!!(global.navigator && global.navigator.hid));\n\nconst getHID = (): HID => {\n  // $FlowFixMe\n  const { hid } = navigator;\n  if (!hid)\n    throw new TransportError(\n      \"navigator.hid is not supported\",\n      \"HIDNotSupported\"\n    );\n  return hid;\n};\n\nasync function requestLedgerDevices(): Promise<HIDDevice[]> {\n  const device = await getHID().requestDevice({ filters: ledgerDevices });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices(): Promise<HIDDevice[]> {\n  const devices = await getHID().getDevices();\n  return devices.filter((d) => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice(): Promise<HIDDevice> {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\nexport default class TransportWebHID extends Transport<HIDDevice> {\n  device: HIDDevice;\n  deviceModel: ?DeviceModel;\n  channel = Math.floor(Math.random() * 0xffff);\n  packetSize = 64;\n\n  constructor(device: HIDDevice) {\n    super();\n    this.device = device;\n    this.deviceModel = identifyUSBProductId(device.productId);\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  inputs = [];\n  inputCallback: ?(Buffer) => void;\n\n  read = (): Promise<Buffer> => {\n    if (this.inputs.length) {\n      return Promise.resolve(this.inputs.shift());\n    }\n    return new Promise((success) => {\n      this.inputCallback = success;\n    });\n  };\n\n  onInputReport = (e: InputReportEvent) => {\n    const buffer = Buffer.from(e.data.buffer);\n    if (this.inputCallback) {\n      this.inputCallback(buffer);\n      this.inputCallback = null;\n    } else {\n      this.inputs.push(buffer);\n    }\n  };\n\n  /**\n   * Check if WebUSB transport is supported.\n   */\n  static isSupported = isSupported;\n\n  /**\n   * List the WebUSB devices that was previously authorized by the user.\n   */\n  static list = getLedgerDevices;\n\n  /**\n   * Actively listen to WebUSB devices and emit ONE device\n   * that was either accepted before, if not it will trigger the native permission UI.\n   *\n   * Important: it must be called in the context of a UI click!\n   */\n  static listen = (\n    observer: Observer<DescriptorEvent<HIDDevice>>\n  ): Subscription => {\n    let unsubscribed = false;\n    getFirstLedgerDevice().then(\n      (device) => {\n        if (!device) {\n          observer.error(\n            new TransportOpenUserCancelled(\"Access denied to use Ledger device\")\n          );\n        } else if (!unsubscribed) {\n          const deviceModel = identifyUSBProductId(device.productId);\n          observer.next({ type: \"add\", descriptor: device, deviceModel });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n    return { unsubscribe };\n  };\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n  static async open(device: HIDDevice) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n    const onDisconnect = (e) => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  _disconnectEmitted = false;\n  _emitDisconnect = (e: Error) => {\n    if (this._disconnectEmitted) return;\n    this._disconnectEmitted = true;\n    this.emit(\"disconnect\", e);\n  };\n\n  /**\n   * Release the transport device\n   */\n  async close(): Promise<void> {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = (apdu: Buffer): Promise<Buffer> =>\n    this.exchangeAtomicImpl(async () => {\n      const { channel, packetSize } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n\n      const framing = hidFraming(channel, packetSize);\n\n      // Write...\n      const blocks = framing.makeBlocks(apdu);\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      }\n\n      // Read...\n      let result;\n      let acc;\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch((e) => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n      throw e;\n    });\n\n  setScrambleKey() {}\n}\n",null,"// @flow\n/* eslint-disable prefer-template */\n\nimport Transport from \"@ledgerhq/hw-transport\";\nimport {\n  DisconnectedDevice,\n  TransportOpenUserCancelled,\n} from \"@ledgerhq/errors\";\nimport {\n  getBluetoothServiceUuids,\n  getInfosForServiceUuid,\n} from \"@ledgerhq/devices\";\nimport type { DeviceModel } from \"@ledgerhq/devices\";\nimport { sendAPDU } from \"@ledgerhq/devices/lib/ble/sendAPDU\";\nimport { receiveAPDU } from \"@ledgerhq/devices/lib/ble/receiveAPDU\";\nimport { log } from \"@ledgerhq/logs\";\nimport { Observable, defer, merge, from } from \"rxjs\";\nimport { share, ignoreElements, first, map, tap } from \"rxjs/operators\";\nimport type { Device, Characteristic } from \"./types\";\nimport { monitorCharacteristic } from \"./monitorCharacteristic\";\n\nconst requiresBluetooth = () => {\n  // $FlowFixMe\n  const { bluetooth } = navigator;\n  if (typeof bluetooth === \"undefined\") {\n    throw new Error(\"web bluetooth not supported\");\n  }\n  return bluetooth;\n};\n\nconst availability = (): Observable<boolean> =>\n  Observable.create((observer) => {\n    const bluetooth = requiresBluetooth();\n    const onAvailabilityChanged = (e) => {\n      observer.next(e.value);\n    };\n    bluetooth.addEventListener(\"availabilitychanged\", onAvailabilityChanged);\n    let unsubscribed = false;\n    bluetooth.getAvailability().then((available) => {\n      if (!unsubscribed) {\n        observer.next(available);\n      }\n    });\n    return () => {\n      unsubscribed = true;\n      bluetooth.removeEventListener(\n        \"availabilitychanged\",\n        onAvailabilityChanged\n      );\n    };\n  });\n\nconst transportsCache = {};\n\nconst requestDeviceParam = () => ({\n  filters: getBluetoothServiceUuids().map((uuid) => ({\n    services: [uuid],\n  })),\n});\n\nconst retrieveService = async (device) => {\n  if (!device.gatt) throw new Error(\"bluetooth gatt not found\");\n  const [service] = await device.gatt.getPrimaryServices();\n  if (!service) throw new Error(\"bluetooth service not found\");\n  const infos = getInfosForServiceUuid(service.uuid);\n  if (!infos) throw new Error(\"bluetooth service infos not found\");\n  return [service, infos];\n};\n\nasync function open(deviceOrId: Device | string, needsReconnect: boolean) {\n  let device;\n  if (typeof deviceOrId === \"string\") {\n    if (transportsCache[deviceOrId]) {\n      log(\"ble-verbose\", \"Transport in cache, using that.\");\n      return transportsCache[deviceOrId];\n    }\n\n    const bluetooth = requiresBluetooth();\n\n    // TODO instead we should \"query\" the device by its ID\n    device = await bluetooth.requestDevice(requestDeviceParam());\n  } else {\n    device = deviceOrId;\n  }\n\n  if (!device.gatt.connected) {\n    log(\"ble-verbose\", \"not connected. connecting...\");\n    await device.gatt.connect();\n  }\n\n  const [service, infos] = await retrieveService(device);\n  const { deviceModel, writeUuid, notifyUuid } = infos;\n  const [writeC, notifyC] = await Promise.all([\n    service.getCharacteristic(writeUuid),\n    service.getCharacteristic(notifyUuid),\n  ]);\n\n  const notifyObservable = monitorCharacteristic(notifyC).pipe(\n    tap((value) => {\n      log(\"ble-frame\", \"<= \" + value.toString(\"hex\"));\n    }),\n    share()\n  );\n\n  const notif = notifyObservable.subscribe();\n\n  const transport = new BluetoothTransport(\n    device,\n    writeC,\n    notifyObservable,\n    deviceModel\n  );\n\n  if (!device.gatt.connected) {\n    throw new DisconnectedDevice();\n  }\n\n  // eslint-disable-next-line require-atomic-updates\n  transportsCache[transport.id] = transport;\n  const onDisconnect = (e) => {\n    console.log(\"onDisconnect!\", e);\n    delete transportsCache[transport.id];\n    transport.notYetDisconnected = false;\n    notif.unsubscribe();\n    device.removeEventListener(\"gattserverdisconnected\", onDisconnect);\n    log(\"ble-verbose\", `BleTransport(${transport.id}) disconnected`);\n    transport.emit(\"disconnect\", e);\n  };\n  device.addEventListener(\"gattserverdisconnected\", onDisconnect);\n\n  let beforeMTUTime = Date.now();\n  try {\n    await transport.inferMTU();\n  } finally {\n    let afterMTUTime = Date.now();\n\n    // workaround for #279: we need to open() again if we come the first time here,\n    // to make sure we do a disconnect() after the first pairing time\n    // because of a firmware bug\n\n    if (afterMTUTime - beforeMTUTime < 1000) {\n      needsReconnect = false; // (optim) there is likely no new pairing done because mtu answer was fast.\n    }\n\n    if (needsReconnect) {\n      await device.gatt.disconnect();\n      // necessary time for the bonding workaround\n      await new Promise((s) => setTimeout(s, 4000));\n    }\n  }\n\n  if (needsReconnect) {\n    return open(device, false);\n  }\n\n  return transport;\n}\n\n/**\n * react-native bluetooth BLE implementation\n * @example\n * import BluetoothTransport from \"@ledgerhq/hw-transport-web-ble\";\n */\nexport default class BluetoothTransport extends Transport<Device | string> {\n  static isSupported = (): Promise<boolean> =>\n    Promise.resolve()\n      .then(requiresBluetooth)\n      .then(\n        () => true,\n        () => false\n      );\n\n  /**\n   * observe event with { available: bool, type: string }\n   * (available is generic, type is specific)\n   * an event is emit once and then each time it changes\n   */\n  static observeAvailability = (observer: *) =>\n    availability.subscribe(observer);\n\n  static list = (): * => Promise.resolve([]);\n\n  /**\n   * Scan for Ledger Bluetooth devices.\n   * On this web implementation, it only emits ONE device, the one that was selected in the UI (if any).\n   */\n  static listen(observer: *) {\n    log(\"ble-verbose\", \"listen...\");\n    let unsubscribed;\n\n    const bluetooth = requiresBluetooth();\n\n    bluetooth.requestDevice(requestDeviceParam()).then(\n      async (device) => {\n        if (!unsubscribed) {\n          observer.next({\n            type: \"add\",\n            descriptor: device,\n          });\n          observer.complete();\n        }\n      },\n      (error) => {\n        observer.error(new TransportOpenUserCancelled(error.message));\n      }\n    );\n    function unsubscribe() {\n      unsubscribed = true;\n    }\n    return { unsubscribe };\n  }\n\n  /**\n   * open a bluetooth device.\n   */\n  static async open(deviceOrId: Device | string) {\n    return open(deviceOrId, true);\n  }\n\n  /**\n   * globally disconnect a bluetooth device by its id.\n   */\n  static disconnect = async (id: *) => {\n    log(\"ble-verbose\", `user disconnect(${id})`);\n    const transport = transportsCache[id];\n    if (transport) {\n      transport.device.gatt.disconnect();\n    }\n  };\n\n  id: string;\n\n  device: Device;\n\n  mtuSize: number = 20;\n\n  writeCharacteristic: Characteristic;\n\n  notifyObservable: Observable<Buffer>;\n\n  notYetDisconnected = true;\n\n  deviceModel: DeviceModel;\n\n  constructor(\n    device: Device,\n    writeCharacteristic: Characteristic,\n    notifyObservable: Observable<*>,\n    deviceModel: DeviceModel\n  ) {\n    super();\n    this.id = device.id;\n    this.device = device;\n    this.writeCharacteristic = writeCharacteristic;\n    this.notifyObservable = notifyObservable;\n    this.deviceModel = deviceModel;\n\n    log(\"ble-verbose\", `BleTransport(${String(this.id)}) new instance`);\n  }\n\n  async inferMTU() {\n    let mtu = 23;\n\n    await this.exchangeAtomicImpl(async () => {\n      try {\n        mtu =\n          (await merge(\n            this.notifyObservable.pipe(\n              first((buffer) => buffer.readUInt8(0) === 0x08),\n              map((buffer) => buffer.readUInt8(5))\n            ),\n            defer(() => from(this.write(Buffer.from([0x08, 0, 0, 0, 0])))).pipe(\n              ignoreElements()\n            )\n          ).toPromise()) + 3;\n      } catch (e) {\n        log(\"ble-error\", \"inferMTU got \" + String(e));\n        this.device.gatt.disconnect();\n        throw e;\n      }\n    });\n\n    if (mtu > 23) {\n      const mtuSize = mtu - 3;\n      log(\n        \"ble-verbose\",\n        `BleTransport(${String(this.id)}) mtu set to ${String(mtuSize)}`\n      );\n      this.mtuSize = mtuSize;\n    }\n\n    return this.mtuSize;\n  }\n\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n  exchange = (apdu: Buffer): Promise<Buffer> =>\n    this.exchangeAtomicImpl(async () => {\n      try {\n        const msgIn = apdu.toString(\"hex\");\n        log(\"apdu\", `=> ${msgIn}`);\n\n        const data = await merge(\n          this.notifyObservable.pipe(receiveAPDU),\n          sendAPDU(this.write, apdu, this.mtuSize)\n        ).toPromise();\n\n        const msgOut = data.toString(\"hex\");\n        log(\"apdu\", `<= ${msgOut}`);\n\n        return data;\n      } catch (e) {\n        log(\"ble-error\", \"exchange got \" + String(e));\n        if (this.notYetDisconnected) {\n          // in such case we will always disconnect because something is bad.\n          this.device.gatt.disconnect();\n        }\n        throw e;\n      }\n    });\n\n  setScrambleKey() {}\n\n  write = async (buffer: Buffer) => {\n    log(\"ble-frame\", \"=> \" + buffer.toString(\"hex\"));\n    await this.writeCharacteristic.writeValue(buffer);\n  };\n\n  async close() {\n    if (this.exchangeBusyPromise) {\n      await this.exchangeBusyPromise;\n    }\n  }\n}\n",null,"// @flow\n\nimport { Observable } from \"rxjs\";\nimport { log } from \"@ledgerhq/logs\";\n\nconst TagId = 0x05;\n\nfunction chunkBuffer(\n  buffer: Buffer,\n  sizeForIndex: (number) => number\n): Array<Buffer> {\n  const chunks = [];\n  for (\n    let i = 0, size = sizeForIndex(0);\n    i < buffer.length;\n    i += size, size = sizeForIndex(i)\n  ) {\n    chunks.push(buffer.slice(i, i + size));\n  }\n  return chunks;\n}\n\nexport const sendAPDU = (\n  write: (Buffer) => Promise<void>,\n  apdu: Buffer,\n  mtuSize: number\n): Observable<void> => {\n  const chunks = chunkBuffer(apdu, (i) => mtuSize - (i === 0 ? 5 : 3)).map(\n    (buffer, i) => {\n      const head = Buffer.alloc(i === 0 ? 5 : 3);\n      head.writeUInt8(TagId, 0);\n      head.writeUInt16BE(i, 1);\n      if (i === 0) {\n        head.writeUInt16BE(apdu.length, 3);\n      }\n      return Buffer.concat([head, buffer]);\n    }\n  );\n\n  return Observable.create((o) => {\n    let terminated = false;\n\n    async function main() {\n      for (const chunk of chunks) {\n        if (terminated) return;\n        await write(chunk);\n      }\n    }\n\n    main().then(\n      () => {\n        terminated = true;\n        o.complete();\n      },\n      (e) => {\n        terminated = true;\n        log(\"ble-error\", \"sendAPDU failure \" + String(e));\n        o.error(e);\n      }\n    );\n\n    const unsubscribe = () => {\n      if (!terminated) {\n        log(\"ble-verbose\", \"sendAPDU interruption\");\n        terminated = true;\n      }\n    };\n\n    return unsubscribe;\n  });\n};\n",null,null,null,null,null,null,null,null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\n\nimport { TransportError, DisconnectedDevice } from \"@ledgerhq/errors\";\nimport { Observable } from \"rxjs\";\nimport { log } from \"@ledgerhq/logs\";\n\nconst TagId = 0x05;\n\n// operator that transform the input raw stream into one apdu response and finishes\nexport const receiveAPDU = (\n  rawStream: Observable<Buffer>\n): Observable<Buffer> =>\n  Observable.create((o) => {\n    let notifiedIndex = 0;\n    let notifiedDataLength = 0;\n    let notifiedData = Buffer.alloc(0);\n\n    const sub = rawStream.subscribe({\n      complete: () => {\n        o.error(new DisconnectedDevice());\n        sub.unsubscribe();\n      },\n      error: (e) => {\n        log(\"ble-error\", \"in receiveAPDU \" + String(e));\n        o.error(e);\n        sub.unsubscribe();\n      },\n      next: (value) => {\n        const tag = value.readUInt8(0);\n        const index = value.readUInt16BE(1);\n        let data = value.slice(3);\n\n        if (tag !== TagId) {\n          o.error(\n            new TransportError(\"Invalid tag \" + tag.toString(16), \"InvalidTag\")\n          );\n          return;\n        }\n\n        if (notifiedIndex !== index) {\n          o.error(\n            new TransportError(\n              \"BLE: Invalid sequence number. discontinued chunk. Received \" +\n                index +\n                \" but expected \" +\n                notifiedIndex,\n              \"InvalidSequence\"\n            )\n          );\n          return;\n        }\n\n        if (index === 0) {\n          notifiedDataLength = data.readUInt16BE(0);\n          data = data.slice(2);\n        }\n        notifiedIndex++;\n        notifiedData = Buffer.concat([notifiedData, data]);\n        if (notifiedData.length > notifiedDataLength) {\n          o.error(\n            new TransportError(\n              \"BLE: received too much data. discontinued chunk. Received \" +\n                notifiedData.length +\n                \" but expected \" +\n                notifiedDataLength,\n              \"BLETooMuchData\"\n            )\n          );\n          return;\n        }\n        if (notifiedData.length === notifiedDataLength) {\n          o.next(notifiedData);\n          o.complete();\n          sub.unsubscribe();\n        }\n      },\n    });\n\n    return () => {\n      sub.unsubscribe();\n    };\n  });\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"// @flow\nimport { Observable } from \"rxjs\";\nimport type { Characteristic } from \"./types\";\nimport { log } from \"@ledgerhq/logs\";\n\nexport const monitorCharacteristic = (\n  characteristic: Characteristic\n): Observable<Buffer> =>\n  Observable.create((o) => {\n    log(\"ble-verbose\", \"start monitor \" + characteristic.uuid);\n\n    function onCharacteristicValueChanged(event) {\n      const characteristic = event.target;\n      if (characteristic.value) {\n        o.next(Buffer.from(characteristic.value.buffer));\n      }\n    }\n\n    characteristic.startNotifications().then(() => {\n      characteristic.addEventListener(\n        \"characteristicvaluechanged\",\n        onCharacteristicValueChanged\n      );\n    });\n\n    return () => {\n      log(\"ble-verbose\", \"end monitor \" + characteristic.uuid);\n      characteristic.stopNotifications();\n    };\n  });\n","const Dns = require(\"./Dns\").default;\nconst {DnsCollection} = require(\"./DnsCollection\");\nconst {DnsItem} = require(\"./DnsItem\");\n\nmodule.exports.default = {\n    Dns, DnsCollection, DnsItem\n};","const {Cell} = require(\"../../boc\");\nconst {BN, Address} = require(\"../../utils\");\nconst {\n    DNS_CATEGORY_NEXT_RESOLVER,\n    DNS_CATEGORY_SITE,\n    DNS_CATEGORY_WALLET,\n    createSmartContractAddressRecord,\n    createAdnlAddressRecord,\n    createNextResolverRecord,\n    parseNextResolverRecord,\n    parseSmartContractAddressRecord,\n    dnsResolve\n} = require(\"./DnsUtils\");\n\n// Need to get this address from network Config #4\nconst rootDnsAddress = 'Ef_BimcWrQ5pmAWfRqfeVHUCNV8XgsLqeAMBivKryXrghFW3';\n\nclass Dns {\n    /**\n     * @param provider  {HttpProvider}\n     */\n    constructor(provider) {\n        this.provider = provider;\n    }\n\n    /**\n     * @returns {Promise<Address>}\n     */\n    async getRootDnsAddress() {\n        if (this.provider.host.indexOf('testnet') === -1) { // mainnet\n            return null;\n        }\n        return new Address(rootDnsAddress);\n    }\n\n    /**\n     * @param domain    {string} e.g \"sub.alice.ton\"\n     * @param category  {string | undefined} category of requested DNS record, null for all categories\n     * @param oneStep {boolean | undefined}  non-recursive\n     * @returns {Promise<Cell | Address | BN | null>}\n     */\n    resolve(domain, category, oneStep) {\n        if (this.provider.host.indexOf('testnet') === -1) { // mainnet\n            return null;\n        }\n        return dnsResolve(this.provider, rootDnsAddress, domain, category, oneStep)\n    }\n\n    /**\n     * @param domain    {string} e.g \"sub.alice.ton\"\n     * @returns {Promise<Address | null>}\n     */\n    getWalletAddress(domain) {\n        if (this.provider.host.indexOf('testnet') === -1) { // mainnet\n            return null;\n        }\n       return this.resolve(domain, DNS_CATEGORY_WALLET);\n    }\n}\n\nDns.resolve = dnsResolve;\nDns.createSmartContractAddressRecord = createSmartContractAddressRecord;\nDns.createAdnlAddressRecord = createAdnlAddressRecord;\nDns.createNextResolverRecord = createNextResolverRecord;\nDns.parseNextResolverRecord = parseNextResolverRecord;\nDns.parseSmartContractAddressRecord = parseSmartContractAddressRecord;\nDns.DNS_CATEGORY_NEXT_RESOLVER = DNS_CATEGORY_NEXT_RESOLVER;\nDns.DNS_CATEGORY_WALLET = DNS_CATEGORY_WALLET;\nDns.DNS_CATEGORY_SITE = DNS_CATEGORY_SITE;\n\nmodule.exports.default = Dns;","const {parseAddress} = require(\"../token/nft/NftUtils\");\nconst {BN, sha256, bytesToHex, bytesToBase64} = require(\"../../utils\");\nconst {Cell} = require(\"../../boc\");\n\nconst DNS_CATEGORY_NEXT_RESOLVER = 'dns_next_resolver'; // Smart Contract address\nconst DNS_CATEGORY_WALLET = 'wallet'; // Smart Contract address\nconst DNS_CATEGORY_SITE = 'site'; // ADNL address\n\n/**\n * @param category  {string | undefined}\n * @return  {BN}\n */\nconst categoryToBN = async (category) => {\n    if (!category) return new BN(0); // all categories\n    const categoryBytes = new TextEncoder().encode(category);\n    const categoryHash = new Uint8Array(await sha256(categoryBytes));\n    return new BN(bytesToHex(categoryHash), 16);\n}\n\n/**\n * @param smartContractAddress   {Address}\n * @return {Cell}\n */\nconst createSmartContractAddressRecord = (smartContractAddress) => {\n    const cell = new Cell();\n    cell.bits.writeUint(0x9fd3, 16); // https://github.com/ton-blockchain/ton/blob/7e3df93ca2ab336716a230fceb1726d81bac0a06/crypto/block/block.tlb#L827\n    cell.bits.writeAddress(smartContractAddress);\n    cell.bits.writeUint(0, 8); // flags\n    return cell;\n}\n\n/**\n * @param adnlAddress   {BN}\n * @return {Cell}\n */\nconst createAdnlAddressRecord = (adnlAddress) => {\n    const cell = new Cell();\n    cell.bits.writeUint(0xad01, 16); // https://github.com/ton-blockchain/ton/blob/7e3df93ca2ab336716a230fceb1726d81bac0a06/crypto/block/block.tlb#L821\n    cell.bits.writeUint(adnlAddress, 256);\n    cell.bits.writeUint(0, 8); // flags\n    return cell;\n}\n\n/**\n * @param smartContractAddress   {Address}\n * @return {Cell}\n */\nconst createNextResolverRecord = (smartContractAddress) => {\n    const cell = new Cell();\n    cell.bits.writeUint(0xba93, 16); // https://github.com/ton-blockchain/ton/blob/7e3df93ca2ab336716a230fceb1726d81bac0a06/crypto/block/block.tlb#L819\n    cell.bits.writeAddress(smartContractAddress);\n    return cell;\n}\n\n/**\n * @private\n * @param cell  {Cell}\n * @param prefix0 {number}\n * @param prefix1 {number}\n * @return {Address|null}\n */\nconst parseSmartContractAddressImpl = (cell, prefix0, prefix1) => {\n    if (cell.bits.array[0] !== prefix0 || cell.bits.array[1] !== prefix1) throw new Error('Invalid dns record value prefix');\n    cell.bits.array = cell.bits.array.slice(2); // skip prefix - first 16 bits\n    return parseAddress(cell);\n}\n\n/**\n * @param cell  {Cell}\n * @return {Address|null}\n */\nconst parseSmartContractAddressRecord = (cell) => {\n    return parseSmartContractAddressImpl(cell, 0x9f, 0xd3);\n}\n\n/**\n * @param cell  {Cell}\n * @return {Address|null}\n */\nconst parseNextResolverRecord = (cell) => {\n    return parseSmartContractAddressImpl(cell, 0xba, 0x93);\n}\n\n/**\n * @private\n * @param provider  {HttpProvider}\n * @param dnsAddress   {string} address of dns smart contract\n * @param rawDomainBytes {Uint8Array}\n * @param category  {string | undefined} category of requested DNS record\n * @param oneStep {boolean | undefined} non-recursive\n * @returns {Promise<Cell | Address | BN | null>}\n */\nconst dnsResolveImpl = async (provider, dnsAddress, rawDomainBytes, category, oneStep) => {\n    const len = rawDomainBytes.length * 8;\n\n    const domainCell = new Cell();\n    domainCell.bits.writeBytes(rawDomainBytes);\n\n    const categoryBN = await categoryToBN(category);\n    const result = await provider.call2(dnsAddress, 'dnsresolve', [['tvm.Slice', bytesToBase64(await domainCell.toBoc(false))], ['num', categoryBN.toString()]]);\n    if (result.length !== 2) {\n        throw new Error('Invalid dnsresolve response');\n    }\n    const resultLen = result[0].toNumber();\n\n    let cell = result[1];\n    if ((cell instanceof Array) && cell.length === 0) {\n        cell = null;\n    }\n\n    if (cell && !cell.bits) { // not a Cell\n        throw new Error('Invalid dnsresolve response');\n    }\n\n    if (resultLen === 0) {\n        return null;  // domain cannot be resolved\n    }\n\n    if (resultLen % 8 !== 0) {\n        throw new Error('domain split not at a component boundary');\n    }\n    // if (rawDomainBytes[resultLen] !== 0) {\n    //     throw new Error('domain split not at a component boundary');\n    // }\n    if (resultLen > len) {\n        throw new Error('invalid response ' + resultLen + '/' + len);\n    } else if (resultLen === len) {\n        if (category === DNS_CATEGORY_NEXT_RESOLVER) {\n            return cell ? parseNextResolverRecord(cell) : null;\n        } else if (category === DNS_CATEGORY_WALLET) {\n            return cell ? parseSmartContractAddressRecord(cell) : null;\n        } else if (category === DNS_CATEGORY_SITE) {\n            return cell ? cell : null // todo: convert to BN;\n        } else {\n            return cell;\n        }\n    } else {\n        if (!cell) {\n            return null; // domain cannot be resolved\n        } else {\n            const nextAddress = parseNextResolverRecord(cell);\n            if (oneStep) {\n                if (category === DNS_CATEGORY_NEXT_RESOLVER) {\n                    return nextAddress;\n                } else {\n                    return null;\n                }\n            } else {\n                return await dnsResolveImpl(provider, nextAddress.toString(), rawDomainBytes.slice(resultLen / 8), category, false);\n            }\n        }\n    }\n}\n\n/**\n * Verify and convert domain\n * @param domain    {string}\n * @return {Uint8Array}\n */\nconst domainToBytes = (domain) => {\n    if (!domain || !domain.length) {\n        throw new Error('empty domain');\n    }\n    if (domain === '.') {\n        return new Uint8Array([0]);\n    }\n\n    domain = domain.toLowerCase();\n\n    for (let i = 0; i < domain.length; i++) {\n        if (domain.charCodeAt(i) <= 32) {\n            throw new Error('bytes in range 0..32 are not allowed in domain names');\n        }\n    }\n\n    for (let i = 0; i < domain.length; i++) {\n        const s = domain.substring(i, i + 1);\n        for (let c = 127; c <= 159; c++) { // another control codes range\n            if (s === String.fromCharCode(c)) {\n                throw new Error('bytes in range 127..159 are not allowed in domain names');\n            }\n        }\n    }\n\n    const arr = domain.split('.');\n\n    arr.forEach(part => {\n        if (!part.length) {\n            throw new Error('domain name cannot have an empty component');\n        }\n    });\n\n    const rawDomain = '\\0' + arr.reverse().join('\\0') + '\\0';\n    return new TextEncoder().encode(rawDomain);\n}\n\n/**\n * @param provider  {HttpProvider}\n * @param rootDnsAddress {string} address of root DNS smart contract\n * @param domain    {string} e.g \"sub.alice.ton\"\n * @param category  {string | undefined} category of requested DNS record\n * @param oneStep {boolean | undefined} non-recursive\n * @returns {Promise<Cell | Address | BN | null>}\n */\nconst dnsResolve = async (provider, rootDnsAddress, domain, category, oneStep) => {\n    const rawDomainBytes = domainToBytes(domain);\n\n    return dnsResolveImpl(provider, rootDnsAddress, rawDomainBytes, category, oneStep);\n}\n\nmodule.exports = {\n    DNS_CATEGORY_NEXT_RESOLVER,\n    DNS_CATEGORY_SITE,\n    DNS_CATEGORY_WALLET,\n    categoryToBN,\n    domainToBytes,\n    createSmartContractAddressRecord,\n    createAdnlAddressRecord,\n    createNextResolverRecord,\n    parseNextResolverRecord,\n    parseSmartContractAddressRecord,\n    dnsResolve\n};","const {Contract} = require(\"../../contract/index.js\");\nconst {Cell} = require(\"../../boc\");\nconst {Address} = require(\"../../utils\");\nconst {parseAddress} = require('../token/nft/NftUtils.js');\nconst {dnsResolve} = require(\"./DnsUtils.js\")\nconst {parseOffchainUriCell} = require(\"../token/nft/NftUtils\");\n\nclass DnsCollection extends Contract {\n    /**\n     * @param provider\n     * @param options   {{collectionContent: Cell, dnsItemCodeHex: string, address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc('B5EE9C724102170100020E000114FF00F4A413F4BCF2C80B0102016202030202CC0405020120111202012006070201D40F1002012008090201200D0E01F543221C70094840FF2F0DED0D3030171B0915BE0FA403001D31FED44D0D4D4303122C0008E5032F00320D74920C218F2E0C8208103F0BBF2E0C978A908C000F2E0CA20F004F2E0CB20F9018050F833206EB38E10D0F4043052108307F40E6FA131F2D0CC9130E2C858CF16C9C85004CF1613CCC9F009E010235F0380A0201200B0C000EC007DC840FF2F000331C27C074C1C07000082CE500A98200B784B98C4830003CB43260004F3223880875D244B5C61673C58875D2883000082CE6C070007CB83280B50C3400A44C78B98C727420007F47021D7498E355CBA20B38E2E3002D30721C02D23C200B024A6F85240B9B022C22F23C13AB0B122C26003C17B13B012B1B320B39402A60802DE13DEE66C12BA8002D501C8CBFFF828CF16C97020C8CB0113F400F400CB00C98001B3E401D3232C084B281F2FFF274200039167C01DC087C021DE0063232C15633C59C3E80B2DAF3333260103EC020020120131402012015160007B8B5D318001FBA7A3ED44D0D4D43031F0077001F00880019B905BED44D0D4D4303070016D8009DBA30C3020D74978A908C000F2E04620D70A07C00021D749C0085210B0935B786DE0209501D3073101DE21F0025122D71830F9018200BA93C8CB0F01820167A3ED43D8CF16C90191789170E212A0018467EBCAB');\n        super(provider, options);\n\n        if (!options.collectionContent && !options.address) throw new Error('required collectionContent cell');\n\n        this.methods.getCollectionData = this.getCollectionData.bind(this);\n        this.methods.getNftItemAddressByIndex = this.getNftItemAddressByIndex.bind(this);\n        this.methods.getNftItemContent = this.getNftItemContent.bind(this);\n        this.methods.resolve = this.resolve.bind(this);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains dns collection data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.refs[0] = this.options.collectionContent;\n        cell.refs[1] = Cell.oneFromBoc(this.options.dnsItemCodeHex);\n        return cell;\n    }\n\n    /**\n     * @return {Promise<{collectionContent: Cell}>}\n     */\n    async getCollectionData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_collection_data');\n\n        const collectionContent = result[1];\n        const collectionContentUri = parseOffchainUriCell(collectionContent);\n\n        return {collectionContentUri, collectionContent, ownerAddress: null, nextItemIndex: 0};\n    }\n\n    /**\n     * @param nftItem   {DnsItem}\n     * @return {Promise<{isInitialized: boolean, index: BN, collectionAddress: Address|null, ownerAddress: Address|null, contentCell: Cell}>}\n     */\n    async getNftItemContent(nftItem) {\n        const nftData = await nftItem.getData();\n        return nftData;\n    }\n\n    /**\n     * @param index {BN}\n     * @return {Promise<Address>}\n     */\n    async getNftItemAddressByIndex(index) {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_nft_address_by_index', [['num', index.toString()]]);\n\n        return parseAddress(result);\n    }\n\n    /**\n     * @param domain    {string} e.g \"sub.alice.ton\"\n     * @param category?  {string} category of requested DNS record, null for all categories\n     * @param oneStep? {boolean} non-recursive\n     * @returns {Promise<Cell | Address | BN | null>}\n     */\n    async resolve(domain, category, oneStep) {\n        const myAddress = await this.getAddress();\n        return dnsResolve(this.provider, myAddress.toString(), domain, category, oneStep);\n    }\n}\n\nmodule.exports = {DnsCollection: DnsCollection};\n","const {Contract} = require(\"../../contract/index.js\");\nconst {Cell} = require(\"../../boc\");\nconst {Address, BN} = require(\"../../utils\");\nconst {parseAddress} = require('./../token/nft/NftUtils.js');\nconst {dnsResolve, categoryToBN} = require(\"./DnsUtils.js\")\n\nconstn\nclass DnsItem extends Contract {\n    /**\n     * @param provider\n     * @param options   {{index: BN, collectionAddress: Address, address?: Address | string, code?: Cell}}\n     */\n    constructor(provider, options) {\n        options.wc = 0;\n        options.code = options.code || Cell.oneFromBoc(DNS_ITEM_CODE_HEX);\n        super(provider, options);\n\n        this.methods.getData = this.getData.bind(this);\n        this.methods.getDomain = this.getDomain.bind(this);\n        this.methods.getAuctionInfo = this.getAuctionInfo.bind(this);\n        this.methods.getLastFillUpTime = this.getLastFillUpTime.bind(this);\n        this.methods.resolve = this.resolve.bind(this);\n    }\n\n    /**\n     * @override\n     * @private\n     * @return {Cell} cell contains nft data\n     */\n    createDataCell() {\n        const cell = new Cell();\n        cell.bits.writeUint(this.options.index, 256);\n        cell.bits.writeAddress(this.options.collectionAddress);\n        return cell;\n    }\n\n    /**\n     * @return {Promise<{isInitialized: boolean, index: BN, collectionAddress: Address|null, ownerAddress: Address|null, contentCell: Cell}>}\n     */\n    async getData() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_nft_data');\n\n        const isInitialized = result[0].toNumber() === -1;\n        const index = result[1];\n        const collectionAddress = parseAddress(result[2]);\n        const ownerAddress = isInitialized ? parseAddress(result[3]) : null;\n        const contentCell = result[4];\n\n        return {isInitialized, index, collectionAddress, ownerAddress, contentCell};\n    }\n\n    /**\n     * @param params    {{queryId?: number, newOwnerAddress: Address, forwardAmount?: BN, forwardPayload?: Uint8Array, responseAddress: Address}}\n     */\n    async createTransferBody(params) {\n        const cell = new Cell();\n        cell.bits.writeUint(0x5fcc3d14, 32); // transfer op\n        cell.bits.writeUint(params.queryId || 0, 64);\n        cell.bits.writeAddress(params.newOwnerAddress);\n        cell.bits.writeAddress(params.responseAddress);\n        cell.bits.writeBit(false); // null custom_payload\n        cell.bits.writeCoins(params.forwardAmount || new BN(0));\n        cell.bits.writeBit(false); // forward_payload in this slice, not separate cell\n\n        if (params.forwardPayload) {\n            cell.bits.writeBytes(params.forwardPayload);\n        }\n        return cell;\n    }\n\n    /**\n     * params   {{queryId?: number}}\n     * @return {Cell}\n     */\n    createGetStaticDataBody(params) {\n        const body = new Cell();\n        body.bits.writeUint(0x2fcb26a2, 32); // OP\n        body.bits.writeUint(params.queryId || 0, 64); // query_id\n        return body;\n    }\n\n    /**\n     * @return {Promise<string>}\n     */\n    async getDomain() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_domain');\n        return new TextDecoder().decode(result.bits.array.buffer);\n    }\n\n    /**\n     * @return {Promise<{maxBidAddress: Address|null, maxBidAmount: BN, auctionEndTime: number}>}\n     */\n    async getAuctionInfo() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_auction_info');\n        const maxBidAddress = parseAddress(result[0]);\n        const maxBidAmount = result[1];\n        const auctionEndTime = result[2].toNumber();\n        return {maxBidAddress, maxBidAmount, auctionEndTime};\n    }\n\n    /**\n     * @return {Promise<number>}\n     */\n    async getLastFillUpTime() {\n        const myAddress = await this.getAddress();\n        const result = await this.provider.call2(myAddress.toString(), 'get_last_fill_up_time');\n        return result.toNumber();\n    }\n\n    /**\n     * @param domain    {string} e.g \"sub.alice.ton\"\n     * @param category?  {string} category of requested DNS record, null for all categories\n     * @param oneStep? {boolean} non-recursive\n     * @returns {Promise<Cell | Address | BN | null>}\n     */\n    async resolve(domain, category, oneStep) {\n        const myAddress = await this.getAddress();\n        return dnsResolve(this.provider, myAddress.toString(), domain, category, oneStep);\n    }\n}\n\n/**\n * params   {{category: string, value: Cell|null, queryId?: number}}\n * @return {Cell}\n */\nDnsItem.createChangeContentEntryBody = async (params) => {\n    const body = new Cell();\n    body.bits.writeUint(10, 32); // OP\n    body.bits.writeUint(params.queryId || 0, 64); // query_id\n    body.bits.writeUint(await categoryToBN(params.category), 256);\n    if (params.value) {\n        body.refs[0] = params.value;\n    }\n    return body;\n}\n\nDnsItem.codeHex = DNS_ITEM_CODE_HEX;\n\nmodule.exports = {DnsItem: DnsItem};",null,"(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"tonweb-mnemonic\"] = factory();\n\telse\n\t\troot[\"TonWeb\"] = root[\"TonWeb\"] || {}, root[\"TonWeb\"][\"mnemonic\"] = factory();\n})(self, function() {\nreturn ","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\n// Only supported in browsers\nexport default self.crypto;\n","\nexport default [\n  'abandon',\n  'ability',\n  'able',\n  'about',\n  'above',\n  'absent',\n  'absorb',\n  'abstract',\n  'absurd',\n  'abuse',\n  'access',\n  'accident',\n  'account',\n  'accuse',\n  'achieve',\n  'acid',\n  'acoustic',\n  'acquire',\n  'across',\n  'act',\n  'action',\n  'actor',\n  'actress',\n  'actual',\n  'adapt',\n  'add',\n  'addict',\n  'address',\n  'adjust',\n  'admit',\n  'adult',\n  'advance',\n  'advice',\n  'aerobic',\n  'affair',\n  'afford',\n  'afraid',\n  'again',\n  'age',\n  'agent',\n  'agree',\n  'ahead',\n  'aim',\n  'air',\n  'airport',\n  'aisle',\n  'alarm',\n  'album',\n  'alcohol',\n  'alert',\n  'alien',\n  'all',\n  'alley',\n  'allow',\n  'almost',\n  'alone',\n  'alpha',\n  'already',\n  'also',\n  'alter',\n  'always',\n  'amateur',\n  'amazing',\n  'among',\n  'amount',\n  'amused',\n  'analyst',\n  'anchor',\n  'ancient',\n  'anger',\n  'angle',\n  'angry',\n  'animal',\n  'ankle',\n  'announce',\n  'annual',\n  'another',\n  'answer',\n  'antenna',\n  'antique',\n  'anxiety',\n  'any',\n  'apart',\n  'apology',\n  'appear',\n  'apple',\n  'approve',\n  'april',\n  'arch',\n  'arctic',\n  'area',\n  'arena',\n  'argue',\n  'arm',\n  'armed',\n  'armor',\n  'army',\n  'around',\n  'arrange',\n  'arrest',\n  'arrive',\n  'arrow',\n  'art',\n  'artefact',\n  'artist',\n  'artwork',\n  'ask',\n  'aspect',\n  'assault',\n  'asset',\n  'assist',\n  'assume',\n  'asthma',\n  'athlete',\n  'atom',\n  'attack',\n  'attend',\n  'attitude',\n  'attract',\n  'auction',\n  'audit',\n  'august',\n  'aunt',\n  'author',\n  'auto',\n  'autumn',\n  'average',\n  'avocado',\n  'avoid',\n  'awake',\n  'aware',\n  'away',\n  'awesome',\n  'awful',\n  'awkward',\n  'axis',\n  'baby',\n  'bachelor',\n  'bacon',\n  'badge',\n  'bag',\n  'balance',\n  'balcony',\n  'ball',\n  'bamboo',\n  'banana',\n  'banner',\n  'bar',\n  'barely',\n  'bargain',\n  'barrel',\n  'base',\n  'basic',\n  'basket',\n  'battle',\n  'beach',\n  'bean',\n  'beauty',\n  'because',\n  'become',\n  'beef',\n  'before',\n  'begin',\n  'behave',\n  'behind',\n  'believe',\n  'below',\n  'belt',\n  'bench',\n  'benefit',\n  'best',\n  'betray',\n  'better',\n  'between',\n  'beyond',\n  'bicycle',\n  'bid',\n  'bike',\n  'bind',\n  'biology',\n  'bird',\n  'birth',\n  'bitter',\n  'black',\n  'blade',\n  'blame',\n  'blanket',\n  'blast',\n  'bleak',\n  'bless',\n  'blind',\n  'blood',\n  'blossom',\n  'blouse',\n  'blue',\n  'blur',\n  'blush',\n  'board',\n  'boat',\n  'body',\n  'boil',\n  'bomb',\n  'bone',\n  'bonus',\n  'book',\n  'boost',\n  'border',\n  'boring',\n  'borrow',\n  'boss',\n  'bottom',\n  'bounce',\n  'box',\n  'boy',\n  'bracket',\n  'brain',\n  'brand',\n  'brass',\n  'brave',\n  'bread',\n  'breeze',\n  'brick',\n  'bridge',\n  'brief',\n  'bright',\n  'bring',\n  'brisk',\n  'broccoli',\n  'broken',\n  'bronze',\n  'broom',\n  'brother',\n  'brown',\n  'brush',\n  'bubble',\n  'buddy',\n  'budget',\n  'buffalo',\n  'build',\n  'bulb',\n  'bulk',\n  'bullet',\n  'bundle',\n  'bunker',\n  'burden',\n  'burger',\n  'burst',\n  'bus',\n  'business',\n  'busy',\n  'butter',\n  'buyer',\n  'buzz',\n  'cabbage',\n  'cabin',\n  'cable',\n  'cactus',\n  'cage',\n  'cake',\n  'call',\n  'calm',\n  'camera',\n  'camp',\n  'can',\n  'canal',\n  'cancel',\n  'candy',\n  'cannon',\n  'canoe',\n  'canvas',\n  'canyon',\n  'capable',\n  'capital',\n  'captain',\n  'car',\n  'carbon',\n  'card',\n  'cargo',\n  'carpet',\n  'carry',\n  'cart',\n  'case',\n  'cash',\n  'casino',\n  'castle',\n  'casual',\n  'cat',\n  'catalog',\n  'catch',\n  'category',\n  'cattle',\n  'caught',\n  'cause',\n  'caution',\n  'cave',\n  'ceiling',\n  'celery',\n  'cement',\n  'census',\n  'century',\n  'cereal',\n  'certain',\n  'chair',\n  'chalk',\n  'champion',\n  'change',\n  'chaos',\n  'chapter',\n  'charge',\n  'chase',\n  'chat',\n  'cheap',\n  'check',\n  'cheese',\n  'chef',\n  'cherry',\n  'chest',\n  'chicken',\n  'chief',\n  'child',\n  'chimney',\n  'choice',\n  'choose',\n  'chronic',\n  'chuckle',\n  'chunk',\n  'churn',\n  'cigar',\n  'cinnamon',\n  'circle',\n  'citizen',\n  'city',\n  'civil',\n  'claim',\n  'clap',\n  'clarify',\n  'claw',\n  'clay',\n  'clean',\n  'clerk',\n  'clever',\n  'click',\n  'client',\n  'cliff',\n  'climb',\n  'clinic',\n  'clip',\n  'clock',\n  'clog',\n  'close',\n  'cloth',\n  'cloud',\n  'clown',\n  'club',\n  'clump',\n  'cluster',\n  'clutch',\n  'coach',\n  'coast',\n  'coconut',\n  'code',\n  'coffee',\n  'coil',\n  'coin',\n  'collect',\n  'color',\n  'column',\n  'combine',\n  'come',\n  'comfort',\n  'comic',\n  'common',\n  'company',\n  'concert',\n  'conduct',\n  'confirm',\n  'congress',\n  'connect',\n  'consider',\n  'control',\n  'convince',\n  'cook',\n  'cool',\n  'copper',\n  'copy',\n  'coral',\n  'core',\n  'corn',\n  'correct',\n  'cost',\n  'cotton',\n  'couch',\n  'country',\n  'couple',\n  'course',\n  'cousin',\n  'cover',\n  'coyote',\n  'crack',\n  'cradle',\n  'craft',\n  'cram',\n  'crane',\n  'crash',\n  'crater',\n  'crawl',\n  'crazy',\n  'cream',\n  'credit',\n  'creek',\n  'crew',\n  'cricket',\n  'crime',\n  'crisp',\n  'critic',\n  'crop',\n  'cross',\n  'crouch',\n  'crowd',\n  'crucial',\n  'cruel',\n  'cruise',\n  'crumble',\n  'crunch',\n  'crush',\n  'cry',\n  'crystal',\n  'cube',\n  'culture',\n  'cup',\n  'cupboard',\n  'curious',\n  'current',\n  'curtain',\n  'curve',\n  'cushion',\n  'custom',\n  'cute',\n  'cycle',\n  'dad',\n  'damage',\n  'damp',\n  'dance',\n  'danger',\n  'daring',\n  'dash',\n  'daughter',\n  'dawn',\n  'day',\n  'deal',\n  'debate',\n  'debris',\n  'decade',\n  'december',\n  'decide',\n  'decline',\n  'decorate',\n  'decrease',\n  'deer',\n  'defense',\n  'define',\n  'defy',\n  'degree',\n  'delay',\n  'deliver',\n  'demand',\n  'demise',\n  'denial',\n  'dentist',\n  'deny',\n  'depart',\n  'depend',\n  'deposit',\n  'depth',\n  'deputy',\n  'derive',\n  'describe',\n  'desert',\n  'design',\n  'desk',\n  'despair',\n  'destroy',\n  'detail',\n  'detect',\n  'develop',\n  'device',\n  'devote',\n  'diagram',\n  'dial',\n  'diamond',\n  'diary',\n  'dice',\n  'diesel',\n  'diet',\n  'differ',\n  'digital',\n  'dignity',\n  'dilemma',\n  'dinner',\n  'dinosaur',\n  'direct',\n  'dirt',\n  'disagree',\n  'discover',\n  'disease',\n  'dish',\n  'dismiss',\n  'disorder',\n  'display',\n  'distance',\n  'divert',\n  'divide',\n  'divorce',\n  'dizzy',\n  'doctor',\n  'document',\n  'dog',\n  'doll',\n  'dolphin',\n  'domain',\n  'donate',\n  'donkey',\n  'donor',\n  'door',\n  'dose',\n  'double',\n  'dove',\n  'draft',\n  'dragon',\n  'drama',\n  'drastic',\n  'draw',\n  'dream',\n  'dress',\n  'drift',\n  'drill',\n  'drink',\n  'drip',\n  'drive',\n  'drop',\n  'drum',\n  'dry',\n  'duck',\n  'dumb',\n  'dune',\n  'during',\n  'dust',\n  'dutch',\n  'duty',\n  'dwarf',\n  'dynamic',\n  'eager',\n  'eagle',\n  'early',\n  'earn',\n  'earth',\n  'easily',\n  'east',\n  'easy',\n  'echo',\n  'ecology',\n  'economy',\n  'edge',\n  'edit',\n  'educate',\n  'effort',\n  'egg',\n  'eight',\n  'either',\n  'elbow',\n  'elder',\n  'electric',\n  'elegant',\n  'element',\n  'elephant',\n  'elevator',\n  'elite',\n  'else',\n  'embark',\n  'embody',\n  'embrace',\n  'emerge',\n  'emotion',\n  'employ',\n  'empower',\n  'empty',\n  'enable',\n  'enact',\n  'end',\n  'endless',\n  'endorse',\n  'enemy',\n  'energy',\n  'enforce',\n  'engage',\n  'engine',\n  'enhance',\n  'enjoy',\n  'enlist',\n  'enough',\n  'enrich',\n  'enroll',\n  'ensure',\n  'enter',\n  'entire',\n  'entry',\n  'envelope',\n  'episode',\n  'equal',\n  'equip',\n  'era',\n  'erase',\n  'erode',\n  'erosion',\n  'error',\n  'erupt',\n  'escape',\n  'essay',\n  'essence',\n  'estate',\n  'eternal',\n  'ethics',\n  'evidence',\n  'evil',\n  'evoke',\n  'evolve',\n  'exact',\n  'example',\n  'excess',\n  'exchange',\n  'excite',\n  'exclude',\n  'excuse',\n  'execute',\n  'exercise',\n  'exhaust',\n  'exhibit',\n  'exile',\n  'exist',\n  'exit',\n  'exotic',\n  'expand',\n  'expect',\n  'expire',\n  'explain',\n  'expose',\n  'express',\n  'extend',\n  'extra',\n  'eye',\n  'eyebrow',\n  'fabric',\n  'face',\n  'faculty',\n  'fade',\n  'faint',\n  'faith',\n  'fall',\n  'false',\n  'fame',\n  'family',\n  'famous',\n  'fan',\n  'fancy',\n  'fantasy',\n  'farm',\n  'fashion',\n  'fat',\n  'fatal',\n  'father',\n  'fatigue',\n  'fault',\n  'favorite',\n  'feature',\n  'february',\n  'federal',\n  'fee',\n  'feed',\n  'feel',\n  'female',\n  'fence',\n  'festival',\n  'fetch',\n  'fever',\n  'few',\n  'fiber',\n  'fiction',\n  'field',\n  'figure',\n  'file',\n  'film',\n  'filter',\n  'final',\n  'find',\n  'fine',\n  'finger',\n  'finish',\n  'fire',\n  'firm',\n  'first',\n  'fiscal',\n  'fish',\n  'fit',\n  'fitness',\n  'fix',\n  'flag',\n  'flame',\n  'flash',\n  'flat',\n  'flavor',\n  'flee',\n  'flight',\n  'flip',\n  'float',\n  'flock',\n  'floor',\n  'flower',\n  'fluid',\n  'flush',\n  'fly',\n  'foam',\n  'focus',\n  'fog',\n  'foil',\n  'fold',\n  'follow',\n  'food',\n  'foot',\n  'force',\n  'forest',\n  'forget',\n  'fork',\n  'fortune',\n  'forum',\n  'forward',\n  'fossil',\n  'foster',\n  'found',\n  'fox',\n  'fragile',\n  'frame',\n  'frequent',\n  'fresh',\n  'friend',\n  'fringe',\n  'frog',\n  'front',\n  'frost',\n  'frown',\n  'frozen',\n  'fruit',\n  'fuel',\n  'fun',\n  'funny',\n  'furnace',\n  'fury',\n  'future',\n  'gadget',\n  'gain',\n  'galaxy',\n  'gallery',\n  'game',\n  'gap',\n  'garage',\n  'garbage',\n  'garden',\n  'garlic',\n  'garment',\n  'gas',\n  'gasp',\n  'gate',\n  'gather',\n  'gauge',\n  'gaze',\n  'general',\n  'genius',\n  'genre',\n  'gentle',\n  'genuine',\n  'gesture',\n  'ghost',\n  'giant',\n  'gift',\n  'giggle',\n  'ginger',\n  'giraffe',\n  'girl',\n  'give',\n  'glad',\n  'glance',\n  'glare',\n  'glass',\n  'glide',\n  'glimpse',\n  'globe',\n  'gloom',\n  'glory',\n  'glove',\n  'glow',\n  'glue',\n  'goat',\n  'goddess',\n  'gold',\n  'good',\n  'goose',\n  'gorilla',\n  'gospel',\n  'gossip',\n  'govern',\n  'gown',\n  'grab',\n  'grace',\n  'grain',\n  'grant',\n  'grape',\n  'grass',\n  'gravity',\n  'great',\n  'green',\n  'grid',\n  'grief',\n  'grit',\n  'grocery',\n  'group',\n  'grow',\n  'grunt',\n  'guard',\n  'guess',\n  'guide',\n  'guilt',\n  'guitar',\n  'gun',\n  'gym',\n  'habit',\n  'hair',\n  'half',\n  'hammer',\n  'hamster',\n  'hand',\n  'happy',\n  'harbor',\n  'hard',\n  'harsh',\n  'harvest',\n  'hat',\n  'have',\n  'hawk',\n  'hazard',\n  'head',\n  'health',\n  'heart',\n  'heavy',\n  'hedgehog',\n  'height',\n  'hello',\n  'helmet',\n  'help',\n  'hen',\n  'hero',\n  'hidden',\n  'high',\n  'hill',\n  'hint',\n  'hip',\n  'hire',\n  'history',\n  'hobby',\n  'hockey',\n  'hold',\n  'hole',\n  'holiday',\n  'hollow',\n  'home',\n  'honey',\n  'hood',\n  'hope',\n  'horn',\n  'horror',\n  'horse',\n  'hospital',\n  'host',\n  'hotel',\n  'hour',\n  'hover',\n  'hub',\n  'huge',\n  'human',\n  'humble',\n  'humor',\n  'hundred',\n  'hungry',\n  'hunt',\n  'hurdle',\n  'hurry',\n  'hurt',\n  'husband',\n  'hybrid',\n  'ice',\n  'icon',\n  'idea',\n  'identify',\n  'idle',\n  'ignore',\n  'ill',\n  'illegal',\n  'illness',\n  'image',\n  'imitate',\n  'immense',\n  'immune',\n  'impact',\n  'impose',\n  'improve',\n  'impulse',\n  'inch',\n  'include',\n  'income',\n  'increase',\n  'index',\n  'indicate',\n  'indoor',\n  'industry',\n  'infant',\n  'inflict',\n  'inform',\n  'inhale',\n  'inherit',\n  'initial',\n  'inject',\n  'injury',\n  'inmate',\n  'inner',\n  'innocent',\n  'input',\n  'inquiry',\n  'insane',\n  'insect',\n  'inside',\n  'inspire',\n  'install',\n  'intact',\n  'interest',\n  'into',\n  'invest',\n  'invite',\n  'involve',\n  'iron',\n  'island',\n  'isolate',\n  'issue',\n  'item',\n  'ivory',\n  'jacket',\n  'jaguar',\n  'jar',\n  'jazz',\n  'jealous',\n  'jeans',\n  'jelly',\n  'jewel',\n  'job',\n  'join',\n  'joke',\n  'journey',\n  'joy',\n  'judge',\n  'juice',\n  'jump',\n  'jungle',\n  'junior',\n  'junk',\n  'just',\n  'kangaroo',\n  'keen',\n  'keep',\n  'ketchup',\n  'key',\n  'kick',\n  'kid',\n  'kidney',\n  'kind',\n  'kingdom',\n  'kiss',\n  'kit',\n  'kitchen',\n  'kite',\n  'kitten',\n  'kiwi',\n  'knee',\n  'knife',\n  'knock',\n  'know',\n  'lab',\n  'label',\n  'labor',\n  'ladder',\n  'lady',\n  'lake',\n  'lamp',\n  'language',\n  'laptop',\n  'large',\n  'later',\n  'latin',\n  'laugh',\n  'laundry',\n  'lava',\n  'law',\n  'lawn',\n  'lawsuit',\n  'layer',\n  'lazy',\n  'leader',\n  'leaf',\n  'learn',\n  'leave',\n  'lecture',\n  'left',\n  'leg',\n  'legal',\n  'legend',\n  'leisure',\n  'lemon',\n  'lend',\n  'length',\n  'lens',\n  'leopard',\n  'lesson',\n  'letter',\n  'level',\n  'liar',\n  'liberty',\n  'library',\n  'license',\n  'life',\n  'lift',\n  'light',\n  'like',\n  'limb',\n  'limit',\n  'link',\n  'lion',\n  'liquid',\n  'list',\n  'little',\n  'live',\n  'lizard',\n  'load',\n  'loan',\n  'lobster',\n  'local',\n  'lock',\n  'logic',\n  'lonely',\n  'long',\n  'loop',\n  'lottery',\n  'loud',\n  'lounge',\n  'love',\n  'loyal',\n  'lucky',\n  'luggage',\n  'lumber',\n  'lunar',\n  'lunch',\n  'luxury',\n  'lyrics',\n  'machine',\n  'mad',\n  'magic',\n  'magnet',\n  'maid',\n  'mail',\n  'main',\n  'major',\n  'make',\n  'mammal',\n  'man',\n  'manage',\n  'mandate',\n  'mango',\n  'mansion',\n  'manual',\n  'maple',\n  'marble',\n  'march',\n  'margin',\n  'marine',\n  'market',\n  'marriage',\n  'mask',\n  'mass',\n  'master',\n  'match',\n  'material',\n  'math',\n  'matrix',\n  'matter',\n  'maximum',\n  'maze',\n  'meadow',\n  'mean',\n  'measure',\n  'meat',\n  'mechanic',\n  'medal',\n  'media',\n  'melody',\n  'melt',\n  'member',\n  'memory',\n  'mention',\n  'menu',\n  'mercy',\n  'merge',\n  'merit',\n  'merry',\n  'mesh',\n  'message',\n  'metal',\n  'method',\n  'middle',\n  'midnight',\n  'milk',\n  'million',\n  'mimic',\n  'mind',\n  'minimum',\n  'minor',\n  'minute',\n  'miracle',\n  'mirror',\n  'misery',\n  'miss',\n  'mistake',\n  'mix',\n  'mixed',\n  'mixture',\n  'mobile',\n  'model',\n  'modify',\n  'mom',\n  'moment',\n  'monitor',\n  'monkey',\n  'monster',\n  'month',\n  'moon',\n  'moral',\n  'more',\n  'morning',\n  'mosquito',\n  'mother',\n  'motion',\n  'motor',\n  'mountain',\n  'mouse',\n  'move',\n  'movie',\n  'much',\n  'muffin',\n  'mule',\n  'multiply',\n  'muscle',\n  'museum',\n  'mushroom',\n  'music',\n  'must',\n  'mutual',\n  'myself',\n  'mystery',\n  'myth',\n  'naive',\n  'name',\n  'napkin',\n  'narrow',\n  'nasty',\n  'nation',\n  'nature',\n  'near',\n  'neck',\n  'need',\n  'negative',\n  'neglect',\n  'neither',\n  'nephew',\n  'nerve',\n  'nest',\n  'net',\n  'network',\n  'neutral',\n  'never',\n  'news',\n  'next',\n  'nice',\n  'night',\n  'noble',\n  'noise',\n  'nominee',\n  'noodle',\n  'normal',\n  'north',\n  'nose',\n  'notable',\n  'note',\n  'nothing',\n  'notice',\n  'novel',\n  'now',\n  'nuclear',\n  'number',\n  'nurse',\n  'nut',\n  'oak',\n  'obey',\n  'object',\n  'oblige',\n  'obscure',\n  'observe',\n  'obtain',\n  'obvious',\n  'occur',\n  'ocean',\n  'october',\n  'odor',\n  'off',\n  'offer',\n  'office',\n  'often',\n  'oil',\n  'okay',\n  'old',\n  'olive',\n  'olympic',\n  'omit',\n  'once',\n  'one',\n  'onion',\n  'online',\n  'only',\n  'open',\n  'opera',\n  'opinion',\n  'oppose',\n  'option',\n  'orange',\n  'orbit',\n  'orchard',\n  'order',\n  'ordinary',\n  'organ',\n  'orient',\n  'original',\n  'orphan',\n  'ostrich',\n  'other',\n  'outdoor',\n  'outer',\n  'output',\n  'outside',\n  'oval',\n  'oven',\n  'over',\n  'own',\n  'owner',\n  'oxygen',\n  'oyster',\n  'ozone',\n  'pact',\n  'paddle',\n  'page',\n  'pair',\n  'palace',\n  'palm',\n  'panda',\n  'panel',\n  'panic',\n  'panther',\n  'paper',\n  'parade',\n  'parent',\n  'park',\n  'parrot',\n  'party',\n  'pass',\n  'patch',\n  'path',\n  'patient',\n  'patrol',\n  'pattern',\n  'pause',\n  'pave',\n  'payment',\n  'peace',\n  'peanut',\n  'pear',\n  'peasant',\n  'pelican',\n  'pen',\n  'penalty',\n  'pencil',\n  'people',\n  'pepper',\n  'perfect',\n  'permit',\n  'person',\n  'pet',\n  'phone',\n  'photo',\n  'phrase',\n  'physical',\n  'piano',\n  'picnic',\n  'picture',\n  'piece',\n  'pig',\n  'pigeon',\n  'pill',\n  'pilot',\n  'pink',\n  'pioneer',\n  'pipe',\n  'pistol',\n  'pitch',\n  'pizza',\n  'place',\n  'planet',\n  'plastic',\n  'plate',\n  'play',\n  'please',\n  'pledge',\n  'pluck',\n  'plug',\n  'plunge',\n  'poem',\n  'poet',\n  'point',\n  'polar',\n  'pole',\n  'police',\n  'pond',\n  'pony',\n  'pool',\n  'popular',\n  'portion',\n  'position',\n  'possible',\n  'post',\n  'potato',\n  'pottery',\n  'poverty',\n  'powder',\n  'power',\n  'practice',\n  'praise',\n  'predict',\n  'prefer',\n  'prepare',\n  'present',\n  'pretty',\n  'prevent',\n  'price',\n  'pride',\n  'primary',\n  'print',\n  'priority',\n  'prison',\n  'private',\n  'prize',\n  'problem',\n  'process',\n  'produce',\n  'profit',\n  'program',\n  'project',\n  'promote',\n  'proof',\n  'property',\n  'prosper',\n  'protect',\n  'proud',\n  'provide',\n  'public',\n  'pudding',\n  'pull',\n  'pulp',\n  'pulse',\n  'pumpkin',\n  'punch',\n  'pupil',\n  'puppy',\n  'purchase',\n  'purity',\n  'purpose',\n  'purse',\n  'push',\n  'put',\n  'puzzle',\n  'pyramid',\n  'quality',\n  'quantum',\n  'quarter',\n  'question',\n  'quick',\n  'quit',\n  'quiz',\n  'quote',\n  'rabbit',\n  'raccoon',\n  'race',\n  'rack',\n  'radar',\n  'radio',\n  'rail',\n  'rain',\n  'raise',\n  'rally',\n  'ramp',\n  'ranch',\n  'random',\n  'range',\n  'rapid',\n  'rare',\n  'rate',\n  'rather',\n  'raven',\n  'raw',\n  'razor',\n  'ready',\n  'real',\n  'reason',\n  'rebel',\n  'rebuild',\n  'recall',\n  'receive',\n  'recipe',\n  'record',\n  'recycle',\n  'reduce',\n  'reflect',\n  'reform',\n  'refuse',\n  'region',\n  'regret',\n  'regular',\n  'reject',\n  'relax',\n  'release',\n  'relief',\n  'rely',\n  'remain',\n  'remember',\n  'remind',\n  'remove',\n  'render',\n  'renew',\n  'rent',\n  'reopen',\n  'repair',\n  'repeat',\n  'replace',\n  'report',\n  'require',\n  'rescue',\n  'resemble',\n  'resist',\n  'resource',\n  'response',\n  'result',\n  'retire',\n  'retreat',\n  'return',\n  'reunion',\n  'reveal',\n  'review',\n  'reward',\n  'rhythm',\n  'rib',\n  'ribbon',\n  'rice',\n  'rich',\n  'ride',\n  'ridge',\n  'rifle',\n  'right',\n  'rigid',\n  'ring',\n  'riot',\n  'ripple',\n  'risk',\n  'ritual',\n  'rival',\n  'river',\n  'road',\n  'roast',\n  'robot',\n  'robust',\n  'rocket',\n  'romance',\n  'roof',\n  'rookie',\n  'room',\n  'rose',\n  'rotate',\n  'rough',\n  'round',\n  'route',\n  'royal',\n  'rubber',\n  'rude',\n  'rug',\n  'rule',\n  'run',\n  'runway',\n  'rural',\n  'sad',\n  'saddle',\n  'sadness',\n  'safe',\n  'sail',\n  'salad',\n  'salmon',\n  'salon',\n  'salt',\n  'salute',\n  'same',\n  'sample',\n  'sand',\n  'satisfy',\n  'satoshi',\n  'sauce',\n  'sausage',\n  'save',\n  'say',\n  'scale',\n  'scan',\n  'scare',\n  'scatter',\n  'scene',\n  'scheme',\n  'school',\n  'science',\n  'scissors',\n  'scorpion',\n  'scout',\n  'scrap',\n  'screen',\n  'script',\n  'scrub',\n  'sea',\n  'search',\n  'season',\n  'seat',\n  'second',\n  'secret',\n  'section',\n  'security',\n  'seed',\n  'seek',\n  'segment',\n  'select',\n  'sell',\n  'seminar',\n  'senior',\n  'sense',\n  'sentence',\n  'series',\n  'service',\n  'session',\n  'settle',\n  'setup',\n  'seven',\n  'shadow',\n  'shaft',\n  'shallow',\n  'share',\n  'shed',\n  'shell',\n  'sheriff',\n  'shield',\n  'shift',\n  'shine',\n  'ship',\n  'shiver',\n  'shock',\n  'shoe',\n  'shoot',\n  'shop',\n  'short',\n  'shoulder',\n  'shove',\n  'shrimp',\n  'shrug',\n  'shuffle',\n  'shy',\n  'sibling',\n  'sick',\n  'side',\n  'siege',\n  'sight',\n  'sign',\n  'silent',\n  'silk',\n  'silly',\n  'silver',\n  'similar',\n  'simple',\n  'since',\n  'sing',\n  'siren',\n  'sister',\n  'situate',\n  'six',\n  'size',\n  'skate',\n  'sketch',\n  'ski',\n  'skill',\n  'skin',\n  'skirt',\n  'skull',\n  'slab',\n  'slam',\n  'sleep',\n  'slender',\n  'slice',\n  'slide',\n  'slight',\n  'slim',\n  'slogan',\n  'slot',\n  'slow',\n  'slush',\n  'small',\n  'smart',\n  'smile',\n  'smoke',\n  'smooth',\n  'snack',\n  'snake',\n  'snap',\n  'sniff',\n  'snow',\n  'soap',\n  'soccer',\n  'social',\n  'sock',\n  'soda',\n  'soft',\n  'solar',\n  'soldier',\n  'solid',\n  'solution',\n  'solve',\n  'someone',\n  'song',\n  'soon',\n  'sorry',\n  'sort',\n  'soul',\n  'sound',\n  'soup',\n  'source',\n  'south',\n  'space',\n  'spare',\n  'spatial',\n  'spawn',\n  'speak',\n  'special',\n  'speed',\n  'spell',\n  'spend',\n  'sphere',\n  'spice',\n  'spider',\n  'spike',\n  'spin',\n  'spirit',\n  'split',\n  'spoil',\n  'sponsor',\n  'spoon',\n  'sport',\n  'spot',\n  'spray',\n  'spread',\n  'spring',\n  'spy',\n  'square',\n  'squeeze',\n  'squirrel',\n  'stable',\n  'stadium',\n  'staff',\n  'stage',\n  'stairs',\n  'stamp',\n  'stand',\n  'start',\n  'state',\n  'stay',\n  'steak',\n  'steel',\n  'stem',\n  'step',\n  'stereo',\n  'stick',\n  'still',\n  'sting',\n  'stock',\n  'stomach',\n  'stone',\n  'stool',\n  'story',\n  'stove',\n  'strategy',\n  'street',\n  'strike',\n  'strong',\n  'struggle',\n  'student',\n  'stuff',\n  'stumble',\n  'style',\n  'subject',\n  'submit',\n  'subway',\n  'success',\n  'such',\n  'sudden',\n  'suffer',\n  'sugar',\n  'suggest',\n  'suit',\n  'summer',\n  'sun',\n  'sunny',\n  'sunset',\n  'super',\n  'supply',\n  'supreme',\n  'sure',\n  'surface',\n  'surge',\n  'surprise',\n  'surround',\n  'survey',\n  'suspect',\n  'sustain',\n  'swallow',\n  'swamp',\n  'swap',\n  'swarm',\n  'swear',\n  'sweet',\n  'swift',\n  'swim',\n  'swing',\n  'switch',\n  'sword',\n  'symbol',\n  'symptom',\n  'syrup',\n  'system',\n  'table',\n  'tackle',\n  'tag',\n  'tail',\n  'talent',\n  'talk',\n  'tank',\n  'tape',\n  'target',\n  'task',\n  'taste',\n  'tattoo',\n  'taxi',\n  'teach',\n  'team',\n  'tell',\n  'ten',\n  'tenant',\n  'tennis',\n  'tent',\n  'term',\n  'test',\n  'text',\n  'thank',\n  'that',\n  'theme',\n  'then',\n  'theory',\n  'there',\n  'they',\n  'thing',\n  'this',\n  'thought',\n  'three',\n  'thrive',\n  'throw',\n  'thumb',\n  'thunder',\n  'ticket',\n  'tide',\n  'tiger',\n  'tilt',\n  'timber',\n  'time',\n  'tiny',\n  'tip',\n  'tired',\n  'tissue',\n  'title',\n  'toast',\n  'tobacco',\n  'today',\n  'toddler',\n  'toe',\n  'together',\n  'toilet',\n  'token',\n  'tomato',\n  'tomorrow',\n  'tone',\n  'tongue',\n  'tonight',\n  'tool',\n  'tooth',\n  'top',\n  'topic',\n  'topple',\n  'torch',\n  'tornado',\n  'tortoise',\n  'toss',\n  'total',\n  'tourist',\n  'toward',\n  'tower',\n  'town',\n  'toy',\n  'track',\n  'trade',\n  'traffic',\n  'tragic',\n  'train',\n  'transfer',\n  'trap',\n  'trash',\n  'travel',\n  'tray',\n  'treat',\n  'tree',\n  'trend',\n  'trial',\n  'tribe',\n  'trick',\n  'trigger',\n  'trim',\n  'trip',\n  'trophy',\n  'trouble',\n  'truck',\n  'true',\n  'truly',\n  'trumpet',\n  'trust',\n  'truth',\n  'try',\n  'tube',\n  'tuition',\n  'tumble',\n  'tuna',\n  'tunnel',\n  'turkey',\n  'turn',\n  'turtle',\n  'twelve',\n  'twenty',\n  'twice',\n  'twin',\n  'twist',\n  'two',\n  'type',\n  'typical',\n  'ugly',\n  'umbrella',\n  'unable',\n  'unaware',\n  'uncle',\n  'uncover',\n  'under',\n  'undo',\n  'unfair',\n  'unfold',\n  'unhappy',\n  'uniform',\n  'unique',\n  'unit',\n  'universe',\n  'unknown',\n  'unlock',\n  'until',\n  'unusual',\n  'unveil',\n  'update',\n  'upgrade',\n  'uphold',\n  'upon',\n  'upper',\n  'upset',\n  'urban',\n  'urge',\n  'usage',\n  'use',\n  'used',\n  'useful',\n  'useless',\n  'usual',\n  'utility',\n  'vacant',\n  'vacuum',\n  'vague',\n  'valid',\n  'valley',\n  'valve',\n  'van',\n  'vanish',\n  'vapor',\n  'various',\n  'vast',\n  'vault',\n  'vehicle',\n  'velvet',\n  'vendor',\n  'venture',\n  'venue',\n  'verb',\n  'verify',\n  'version',\n  'very',\n  'vessel',\n  'veteran',\n  'viable',\n  'vibrant',\n  'vicious',\n  'victory',\n  'video',\n  'view',\n  'village',\n  'vintage',\n  'violin',\n  'virtual',\n  'virus',\n  'visa',\n  'visit',\n  'visual',\n  'vital',\n  'vivid',\n  'vocal',\n  'voice',\n  'void',\n  'volcano',\n  'volume',\n  'vote',\n  'voyage',\n  'wage',\n  'wagon',\n  'wait',\n  'walk',\n  'wall',\n  'walnut',\n  'want',\n  'warfare',\n  'warm',\n  'warrior',\n  'wash',\n  'wasp',\n  'waste',\n  'water',\n  'wave',\n  'way',\n  'wealth',\n  'weapon',\n  'wear',\n  'weasel',\n  'weather',\n  'web',\n  'wedding',\n  'weekend',\n  'weird',\n  'welcome',\n  'west',\n  'wet',\n  'whale',\n  'what',\n  'wheat',\n  'wheel',\n  'when',\n  'where',\n  'whip',\n  'whisper',\n  'wide',\n  'width',\n  'wife',\n  'wild',\n  'will',\n  'win',\n  'window',\n  'wine',\n  'wing',\n  'wink',\n  'winner',\n  'winter',\n  'wire',\n  'wisdom',\n  'wise',\n  'wish',\n  'witness',\n  'wolf',\n  'woman',\n  'wonder',\n  'wood',\n  'wool',\n  'word',\n  'work',\n  'world',\n  'worry',\n  'worth',\n  'wrap',\n  'wreck',\n  'wrestle',\n  'wrist',\n  'write',\n  'wrong',\n  'yard',\n  'year',\n  'yellow',\n  'you',\n  'young',\n  'youth',\n  'zebra',\n  'zero',\n  'zone',\n  'zoo'\n];\n","\nimport crypto from '../crypto/crypto-node';\n\n\nexport const PBKDF_ITERATIONS = 100000;\n\n\nexport async function isBasicSeed(entropy: ArrayBuffer): Promise<boolean> {\n  const seed = await pbkdf2Sha512(entropy, 'TON seed version', Math.max(1, Math.floor(PBKDF_ITERATIONS / 256)));\n  return seed[0] == 0;\n}\n\n\nexport async function isPasswordSeed(entropy: ArrayBuffer): Promise<boolean> {\n  const seed = await pbkdf2Sha512(entropy, 'TON fast seed version', 1);\n  return seed[0] == 1;\n}\n\n\nexport async function mnemonicToEntropy(mnemonicArray: string[], password: string = ''): Promise<ArrayBuffer> {\n  const mnemonicPhrase = mnemonicArray.join(' ');\n  return await hmacSha512(mnemonicPhrase, password);\n}\n\n\nexport async function pbkdf2Sha512(key: ArrayBuffer, salt: string, iterations: number): Promise<Uint8Array> {\n  const saltBuffer = stringToIntArray(salt).buffer;\n  const pbkdf2_key = await crypto.subtle.importKey(\n    'raw',\n    key,\n    {name: 'PBKDF2'},\n    false,\n    ['deriveBits']\n  );\n  const derivedBits = await crypto.subtle.deriveBits(\n    {name: 'PBKDF2', hash: 'SHA-512', salt: saltBuffer, iterations: iterations},\n    pbkdf2_key,\n    512\n  );\n  return new Uint8Array(derivedBits);\n}\n\n\nexport async function hmacSha512(phrase: string, password: string): Promise<ArrayBuffer> {\n  const phraseBuffer = stringToIntArray(phrase).buffer;\n  const passwordBuffer = password.length ? stringToIntArray(password).buffer : new ArrayBuffer(0);\n  const hmacAlgo = {name: 'HMAC', hash: 'SHA-512'};\n  const hmacKey = await crypto.subtle.importKey(\n    'raw',\n    phraseBuffer,\n    hmacAlgo,\n    false,\n    ['sign']\n  );\n  return await crypto.subtle.sign(hmacAlgo, hmacKey, passwordBuffer);\n}\n\n\nexport function stringToIntArray(str: string, size: number = 1): Uint8Array {\n\n  let buffer;\n  let bufferView;\n\n  switch (size) {\n    case 1:\n      buffer = new ArrayBuffer(str.length);\n      bufferView = new Uint8Array(buffer);\n      break;\n    case 2:\n      buffer = new ArrayBuffer(str.length * 2);\n      bufferView = new Uint16Array(buffer);\n      break;\n    case 4:\n      buffer = new ArrayBuffer(str.length * 4);\n      bufferView = new Uint32Array(buffer);\n      break;\n    default:\n      throw new Error(`Incorrect size specified: ${size}`);\n  }\n\n  for (let i = 0, strLen = str.length; i < strLen; i++) {\n    bufferView[i] = str.charCodeAt(i);\n  }\n\n  return new Uint8Array(bufferView.buffer);\n\n}\n","\nimport { isBasicSeed, isPasswordSeed, mnemonicToEntropy } from './common';\n\n\nexport async function isPasswordNeeded(mnemonicArray: string[]): Promise<boolean> {\n  // password mnemonic (without password) should be password seed, but not basic seed\n  const entropy = await mnemonicToEntropy(mnemonicArray, '');\n  return (\n    (await isPasswordSeed(entropy)) && !(await isBasicSeed(entropy))\n  );\n}\n","\nimport crypto from '../crypto/crypto-node';\nimport { default as defaultWordlist } from '../bip39-wordlists';\nimport { isBasicSeed, mnemonicToEntropy } from './common';\nimport { isPasswordNeeded } from './is-password-needed';\n\n\nexport async function generateMnemonic(\n  wordsCount: number = 24,\n  password: string = '',\n  wordlist: string[] = defaultWordlist\n\n): Promise<string[]> {\n\n  let c = 0;\n  let mnemonicArray = [];\n\n  while (true) {\n    c += 1;\n    mnemonicArray = [];\n    const rnd = crypto.getRandomValues(new Uint16Array(wordsCount));\n    for (let i = 0; i < wordsCount; i++) {\n      mnemonicArray.push(wordlist[rnd[i] & 2047]); // We loose 5 out of 16 bits of entropy here, good enough\n    }\n    if (password.length > 0) {\n      if (!await isPasswordNeeded(mnemonicArray))\n        continue;\n    }\n    if (!(await isBasicSeed(await mnemonicToEntropy(mnemonicArray, password)))) {\n      continue;\n    }\n    break;\n  }\n\n  return mnemonicArray;\n\n}\n","\nimport { mnemonicToEntropy, pbkdf2Sha512, PBKDF_ITERATIONS } from './common';\n\n\nexport async function mnemonicToSeed(\n  mnemonicArray: string[],\n  password: string = ''\n\n): Promise<Uint8Array> {\n\n  const entropy = await mnemonicToEntropy(mnemonicArray, password);\n\n  const seed = await pbkdf2Sha512(entropy, 'TON default seed', PBKDF_ITERATIONS);\n\n  return seed.slice(0, 32);\n\n}\n","\nimport nacl from 'tweetnacl';\n\nimport { mnemonicToSeed } from './mnemonic-to-seed';\n\n\nexport interface KeyPair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n\nexport async function mnemonicToKeyPair(mnemonicArray: string[], password: string = ''): Promise<KeyPair> {\n  const seed = await mnemonicToSeed(mnemonicArray, password);\n  return nacl.sign.keyPair.fromSeed(seed);\n}\n","\nimport { default as defaultWordlist } from '../bip39-wordlists';\nimport { isBasicSeed, mnemonicToEntropy } from './common';\nimport { isPasswordNeeded } from './is-password-needed';\n\n\nexport async function validateMnemonic(\n  mnemonicArray: string[],\n  password: string = '',\n  wordlist: string[] = defaultWordlist\n\n): Promise<boolean> {\n\n  for (let word of mnemonicArray) {\n    if (wordlist.indexOf(word) === -1) {\n      return false;\n    }\n  }\n\n  if (password.length > 0) {\n    if (!(await isPasswordNeeded(mnemonicArray))) {\n      return false;\n    }\n  }\n\n  return await isBasicSeed(\n    await mnemonicToEntropy(mnemonicArray, password)\n  );\n\n}\n"],"names":["Transport","hidFraming","identifyUSBProductId","log","TransportOpenUserCancelled","TransportInterfaceNotAvailable","TransportWebUSBGestureRequired","DisconnectedDeviceDuringOperation","DisconnectedDevice","getLedgerDevices","getFirstLedgerDevice","requestLedgerDevice","isSupported","configurationValue","endpointNumber","TransportWebUSB","constructor","device","interfaceNumber","deviceModel","channel","Math","floor","random","packetSize","_disconnectEmitted","_emitDisconnect","e","emit","exchange","apdu","exchangeAtomicImpl","toString","framing","blocks","makeBlocks","i","length","transferOut","result","acc","getReducedResult","r","transferIn","buffer","Buffer","from","data","reduceResponse","catch","message","includes","productId","request","open","openConnected","devices","configuration","selectConfiguration","gracefullyResetDevice","iface","configurations","interfaces","find","alternates","some","a","interfaceClass","claimInterface","close","transport","onDisconnect","navigator","usb","removeEventListener","addEventListener","exchangeBusyPromise","releaseInterface","setScrambleKey","list","listen","observer","unsubscribed","then","next","type","descriptor","complete","error","window","DOMException","code","unsubscribe","reset","err","console","warn","EventEmitter","TransportRaceCondition","TransportError","StatusCodes","getAltStatusMessage","TransportStatusError","exchangeTimeout","unresponsiveTimeout","_events","send","cla","ins","p1","p2","alloc","statusList","OK","response","concat","sw","readUInt16BE","s","f","resolveBusy","busyPromise","Promise","unresponsiveReached","timeout","setTimeout","res","clearTimeout","_appAPIlock","_apdu","Error","_key","resolve","on","eventName","cb","off","removeListener","event","args","setDebugMode","setExchangeTimeout","setExchangeUnresponsiveTimeout","create","openTimeout","listenTimeout","reject","found","sub","listenTimeoutId","ErrorMessage_NoDeviceFound","ErrorMessage_ListenTimeout","decorateAppAPIMethods","self","methods","scrambleKey","methodName","decorateAppAPIMethod","ctx","apply","Tag","asUInt16BE","value","b","writeUInt16BE","initialAcc","dataLength","sequence","createHIDframing","blockSize","nbBlocks","ceil","fill","head","writeUInt8","chunk","slice","push","readUInt8","chunkData","semver","IIGenericHID","IIKeyboardHID","IIU2F","IICCID","IIWebUSB","blue","id","productName","productIdMM","legacyUsbProductId","usbOnly","memorySize","getBlockSize","_firwareVersion","nanoS","firmwareVersion","lt","coerce","nanoX","bluetoothSpec","serviceUuid","notifyUuid","writeUuid","productMap","Blue","devicesList","Object","values","ledgerUSBVendorId","getDeviceModel","info","usbProductId","legacy","d","mm","identifyProductName","bluetoothServices","serviceUuidToInfos","spec","replace","getBluetoothServiceUuids","getInfosForServiceUuid","uuid","toLowerCase","subscribers","obj","String","date","Date","dispatch","indexOf","pop","__ledgerLogsListen","ledgerDevices","vendorId","requestDevice","filters","getDevices","filter","existingDevices","global","hid","getHID","requestLedgerDevices","Array","isArray","TransportWebHID","inputs","inputCallback","read","shift","success","onInputReport","sendReport","sendAPDU","receiveAPDU","Observable","defer","merge","share","ignoreElements","first","map","tap","monitorCharacteristic","requiresBluetooth","bluetooth","availability","onAvailabilityChanged","getAvailability","available","transportsCache","requestDeviceParam","services","retrieveService","gatt","service","getPrimaryServices","infos","deviceOrId","needsReconnect","connected","connect","writeC","notifyC","all","getCharacteristic","notifyObservable","pipe","notif","subscribe","BluetoothTransport","notYetDisconnected","beforeMTUTime","now","inferMTU","afterMTUTime","disconnect","writeCharacteristic","mtuSize","msgIn","write","toPromise","msgOut","writeValue","mtu","observeAvailability","TagId","chunkBuffer","sizeForIndex","chunks","size","o","terminated","main","rawStream","notifiedIndex","notifiedDataLength","notifiedData","tag","index","characteristic","onCharacteristicValueChanged","target","startNotifications","stopNotifications","root","factory","exports","module","define","amd","nacl","gf","init","Float64Array","randombytes","_0","Uint8Array","_9","gf0","gf1","_121665","D","D2","X","Y","I","ts64","x","h","l","vn","xi","y","yi","n","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","out","inp","k","c","p","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","m","mpos","z","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","key","t0","t1","t2","t3","t4","t5","t6","t7","this","Uint16Array","pad","leftover","fin","crypto_onetimeauth","outpos","update","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","v","sel25519","q","t","pack25519","j","neq25519","par25519","unpack25519","A","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","subarray","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","prototype","bytes","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h0","h1","h2","h3","h4","h5","h6","h7","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","mask","g","want","crypto_box_afternm","crypto_box_open_afternm","K","crypto_hashblocks_hl","hh","hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","Int32Array","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","pos","crypto_hash","add","cswap","pack","tx","ty","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","carry","reduce","crypto_sign","sm","smlen","crypto_sign_open","chk","num","den","den2","den4","den6","unpackneg","crypto","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","arguments","TypeError","cleanup","arr","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_secretbox_BOXZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","msg","nonce","box","keyLength","nonceLength","overheadLength","scalarMult","base","scalarLength","groupElementLength","publicKey","secretKey","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","sign","signedMsg","tmp","mlen","detached","sig","verify","fromSeed","seed","seedLength","signatureLength","hash","hashLength","setPRNG","fn","msCrypto","getRandomValues","min","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","defineProperty","enumerable","get","prop","hasOwnProperty","call","Symbol","toStringTag","async","isBasicSeed","entropy","pbkdf2Sha512","max","PBKDF_ITERATIONS","mnemonicToEntropy","mnemonicArray","password","mnemonicPhrase","join","phrase","phraseBuffer","stringToIntArray","passwordBuffer","ArrayBuffer","hmacAlgo","name","hmacKey","hmacSha512","salt","iterations","saltBuffer","pbkdf2_key","derivedBits","str","bufferView","Uint32Array","strLen","charCodeAt","isPasswordNeeded","isPasswordSeed","generateMnemonic","wordsCount","wordlist","defaultWordlist","rnd","mnemonicToSeed","mnemonicToKeyPair","validateMnemonic","word"],"version":3,"file":"index.ef1b1901.js.map","sourceRoot":"/__parcel_source_root/"}